{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\ismse\\\\src\\\\components\\\\MainComponent\\\\MainComponent.jsx\";\nimport React from \"react\";\nimport ViewForm from \"../../components/ViewForm/ViewForm.jsx\";\nimport ViewUserForm from \"../../components/ViewUserForm/ViewUserForm.jsx\";\nimport ViewDocument from \"../../components/ViewDocument/ViewDocument.jsx\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nclass MainComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mainComponentMessage: null\n    };\n    this.sendFieldValues = this.sendFieldValues.bind(this);\n    this.handleCloseCurrentTab = this.handleCloseCurrentTab.bind(this);\n    this.clearTabData = this.clearTabData.bind(this);\n    this.showScanComponentClick = this.showScanComponentClick.bind(this);\n    this.pushNewBlobs = this.pushNewBlobs.bind(this);\n    this.pushNewImages = this.pushNewImages.bind(this);\n  }\n\n  sendFieldValues(commandJson) {\n    this.props.sendFieldValues(commandJson);\n  }\n\n  handleCloseCurrentTab(process_id) {\n    this.props.handleCloseCurrentTab(process_id);\n  }\n\n  clearTabData(process_id) {\n    this.props.clearTabData(process_id);\n  }\n\n  showScanComponentClick() {\n    this.props.showScanComponentClick();\n  }\n\n  pushNewBlobs(blobs) {\n    this.props.pushNewBlobs(blobs);\n  }\n\n  pushNewImages(images) {\n    this.props.pushNewImages(images);\n  }\n\n  render() {\n    // console.log(\"Main PROP\", this.props)\n    if (!this.props.adminMessage) return React.createElement(LinearProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });else if (this.props.adminMessage.taskType === \"showPersonForm\" || this.props.adminMessage.taskType === \"showPersonFormNRSZ\") {\n      return React.createElement(ViewDocument, {\n        userId: this.props.userId,\n        userRole: this.props.userRole,\n        process_id: this.props.adminMessage.process_id,\n        session_id: this.props.adminMessage.session_id,\n        organizationId: this.props.organizationId,\n        enumData: this.props.adminMessage.enumData,\n        selectedDoc: this.props.adminMessage.selectedDoc,\n        documentViewForm: this.props.adminMessage.documentViewForm,\n        buttons: this.props.adminMessage.buttons,\n        gridFormButtons: this.props.adminMessage.gridFormButtons,\n        taskID: this.props.adminMessage.taskID,\n        sendFieldValues: this.sendFieldValues,\n        formType: this.props.adminMessage.formType,\n        docList: this.props.adminMessage.docList,\n        size: this.props.adminMessage.size,\n        page: this.props.adminMessage.page,\n        subDocument: false,\n        taskType: this.props.adminMessage.taskType,\n        SOAT: this.props.adminMessage.SOAT,\n        clearTabData: this.clearTabData,\n        handleCloseCurrentTab: this.handleCloseCurrentTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    } else if (this.props.adminMessage.taskType === \"showRegForm\" || this.props.adminMessage.taskType === \"showChildRegForm\" || this.props.adminMessage.taskType === \"showRegSearchForm\" || this.props.adminMessage.taskType === \"showChildRegSearchForm\" || this.props.adminMessage.taskType === \"showDetailedForm\" || this.props.adminMessage.taskType === \"showChildDetailedForm\" || this.props.adminMessage.taskType === \"showDetailedSearchForm\" || this.props.adminMessage.taskType === \"showChildDetailedSearchForm\" || this.props.adminMessage.taskType === \"showIPRForm\" || this.props.adminMessage.taskType === \"showChildIPRForm\" || this.props.adminMessage.taskType === \"showIPRSearchForm\" || this.props.adminMessage.taskType === \"showChildIPRSearchForm\" || this.props.adminMessage.taskType === \"searchAdultsDetailedForm\" || this.props.adminMessage.taskType === \"searchChildDetailedForm\" || this.props.adminMessage.taskType === \"showMemoForm\" || this.props.adminMessage.taskType === \"showComplaintsForm\" || this.props.adminMessage.taskType === \"showSearchComplaintsForm\" || this.props.adminMessage.taskType === \"showAppealsForm\" || this.props.adminMessage.taskType === \"showSearchAppealsForm\" || this.props.adminMessage.taskType === \"showAdultsStatesSelectingForm\" || this.props.adminMessage.taskType === \"showChildStatesSelectingForm\") {\n      // console.log(\"EnumData\", JSON.stringify(this.props.adminMessage.enumData))\n      return React.createElement(ViewForm, {\n        key: this.props.adminMessage.process_id,\n        userId: this.props.userId,\n        userRole: this.props.userRole,\n        organizationId: this.props.organizationId,\n        process_id: this.props.adminMessage.process_id,\n        session_id: this.props.adminMessage.session_id,\n        taskID: this.props.adminMessage.taskID,\n        docId: this.props.adminMessage.docId,\n        enumData: this.props.adminMessage.enumData,\n        Form: this.props.adminMessage.Form,\n        documentViewForm: this.props.adminMessage.documentViewForm,\n        subDocument: false,\n        adultsIPRForm: this.props.adminMessage.adultsIPRForm,\n        FormData: this.props.adminMessage.FormData,\n        SOAT: this.props.adminMessage.SOAT,\n        person: this.props.adminMessage.person,\n        personEnumData: this.props.adminMessage.personEnumData,\n        personFormType: this.props.adminMessage.personFormType,\n        buttons: this.props.adminMessage.buttons,\n        gridForm: this.props.adminMessage.gridForm,\n        IPRGridForm: this.props.adminMessage.IPRGridForm,\n        gridFormButtons: this.props.adminMessage.gridFormButtons,\n        formType: this.props.adminMessage.formType,\n        docList: this.props.adminMessage.docList,\n        docListIPR: this.props.adminMessage.docListIPR,\n        size: this.props.adminMessage.size,\n        page: this.props.adminMessage.page,\n        userAction: this.props.adminMessage.userAction,\n        taskType: this.props.adminMessage.taskType,\n        selectedTab: this.props.selectedTab,\n        showScanComponent: this.props.showScanComponent,\n        showScanComponentClick: this.showScanComponentClick,\n        sendFieldValues: this.sendFieldValues,\n        handleCloseCurrentTab: this.handleCloseCurrentTab,\n        clearTabData: this.clearTabData,\n        pushNewBlobs: this.pushNewBlobs,\n        scannedBlobs: this.props.scannedBlobs,\n        pushNewImages: this.pushNewImages,\n        scannedImages: this.props.scannedImages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    } else if (this.props.adminMessage.taskType === \"showSearchUser\" || this.props.adminMessage.taskType === \"showCreateUser\" || this.props.adminMessage.taskType === \"showEditUser\") {\n      return React.createElement(ViewUserForm, {\n        key: this.props.adminMessage.process_id,\n        userId: this.props.userId,\n        userRole: this.props.userRole,\n        organizationId: this.props.organizationId,\n        process_id: this.props.adminMessage.process_id,\n        session_id: this.props.adminMessage.session_id,\n        taskID: this.props.adminMessage.taskID,\n        docId: this.props.adminMessage.docId,\n        enumData: this.props.adminMessage.enumData,\n        Form: this.props.adminMessage.Form,\n        selectedDoc: this.props.adminMessage.selectedDoc,\n        parentIdList: this.props.adminMessage.parentIdList,\n        adultsIPRForm: this.props.adminMessage.adultsIPRForm,\n        FormData: this.props.adminMessage.FormData,\n        buttons: this.props.adminMessage.buttons,\n        gridForm: this.props.adminMessage.gridForm,\n        gridFormButtons: this.props.adminMessage.gridFormButtons,\n        docList: this.props.adminMessage.docList,\n        sendFieldValues: this.sendFieldValues,\n        clearTabData: this.clearTabData,\n        taskType: this.props.adminMessage.taskType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      });\n    } else if (this.props.adminMessage.taskType === \"error\") {\n      return React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        spacing: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, this.props.adminMessage.taskType)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, this.props.adminMessage.process_id)))))));\n    } else {\n      console.log(\"SOMETHING WRONG\", this.props.adminMessage);\n      return React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        spacing: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(LinearProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\n\nexport default MainComponent;","map":{"version":3,"sources":["C:\\Users\\SERGO\\Desktop\\ismse\\src\\components\\MainComponent\\MainComponent.jsx"],"names":["React","ViewForm","ViewUserForm","ViewDocument","Grid","Card","LinearProgress","MainComponent","Component","constructor","props","state","mainComponentMessage","sendFieldValues","bind","handleCloseCurrentTab","clearTabData","showScanComponentClick","pushNewBlobs","pushNewImages","commandJson","process_id","blobs","images","render","adminMessage","taskType","userId","userRole","session_id","organizationId","enumData","selectedDoc","documentViewForm","buttons","gridFormButtons","taskID","formType","docList","size","page","SOAT","docId","Form","adultsIPRForm","FormData","person","personEnumData","personFormType","gridForm","IPRGridForm","docListIPR","userAction","selectedTab","showScanComponent","scannedBlobs","scannedImages","parentIdList","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ViewForm from \"../../components/ViewForm/ViewForm.jsx\";\r\nimport ViewUserForm from \"../../components/ViewUserForm/ViewUserForm.jsx\";\r\nimport ViewDocument from \"../../components/ViewDocument/ViewDocument.jsx\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from '@material-ui/core/Card';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nclass MainComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      mainComponentMessage: null,\r\n    }\r\n    this.sendFieldValues = this.sendFieldValues.bind(this)\r\n    this.handleCloseCurrentTab = this.handleCloseCurrentTab.bind(this)\r\n    this.clearTabData = this.clearTabData.bind(this)\r\n    this.showScanComponentClick = this.showScanComponentClick.bind(this)\r\n    this.pushNewBlobs = this.pushNewBlobs.bind(this)\r\n    this.pushNewImages = this.pushNewImages.bind(this)\r\n  }\r\n  sendFieldValues(commandJson){\r\n    this.props.sendFieldValues(commandJson)\r\n  }\r\n  handleCloseCurrentTab(process_id){\r\n    this.props.handleCloseCurrentTab(process_id)\r\n  }\r\n  clearTabData(process_id){\r\n    this.props.clearTabData(process_id)\r\n  }\r\n  showScanComponentClick(){\r\n    this.props.showScanComponentClick()\r\n  }\r\n  pushNewBlobs(blobs){\r\n    this.props.pushNewBlobs(blobs)\r\n  }\r\n  pushNewImages(images){\r\n    this.props.pushNewImages(images)\r\n  }\r\n render() {\r\n  // console.log(\"Main PROP\", this.props)\r\n  if (!this.props.adminMessage) return <LinearProgress/>\r\n    else if (this.props.adminMessage.taskType === \"showPersonForm\" || this.props.adminMessage.taskType === \"showPersonFormNRSZ\"){\r\n      return (\r\n        <ViewDocument\r\n          userId = {this.props.userId}\r\n          userRole = {this.props.userRole}\r\n          process_id = {this.props.adminMessage.process_id}\r\n          session_id = {this.props.adminMessage.session_id}\r\n          organizationId = {this.props.organizationId}\r\n          enumData = {this.props.adminMessage.enumData}\r\n          selectedDoc = {this.props.adminMessage.selectedDoc}\r\n          documentViewForm = {this.props.adminMessage.documentViewForm}\r\n          buttons = {this.props.adminMessage.buttons}\r\n          gridFormButtons = {this.props.adminMessage.gridFormButtons}\r\n          taskID = {this.props.adminMessage.taskID}\r\n          sendFieldValues={this.sendFieldValues}\r\n          formType = {this.props.adminMessage.formType}\r\n          docList = {this.props.adminMessage.docList}\r\n          size = {this.props.adminMessage.size}\r\n          page = {this.props.adminMessage.page}\r\n          subDocument = {false}\r\n          taskType = {this.props.adminMessage.taskType}\r\n          SOAT = {this.props.adminMessage.SOAT}\r\n          clearTabData = {this.clearTabData}\r\n          handleCloseCurrentTab = {this.handleCloseCurrentTab}\r\n        >\r\n        </ViewDocument>\r\n      )\r\n    }\r\n    \r\n\r\n    else if(\r\n      this.props.adminMessage.taskType === \"showRegForm\" || \r\n      this.props.adminMessage.taskType === \"showChildRegForm\" || \r\n      this.props.adminMessage.taskType === \"showRegSearchForm\" || \r\n      this.props.adminMessage.taskType === \"showChildRegSearchForm\" || \r\n      this.props.adminMessage.taskType === \"showDetailedForm\" || \r\n      this.props.adminMessage.taskType === \"showChildDetailedForm\" || \r\n      this.props.adminMessage.taskType === \"showDetailedSearchForm\" ||\r\n      this.props.adminMessage.taskType === \"showChildDetailedSearchForm\" ||\r\n      this.props.adminMessage.taskType === \"showIPRForm\" ||\r\n      this.props.adminMessage.taskType === \"showChildIPRForm\" ||\r\n      this.props.adminMessage.taskType === \"showIPRSearchForm\" ||\r\n      this.props.adminMessage.taskType === \"showChildIPRSearchForm\" ||\r\n      this.props.adminMessage.taskType === \"searchAdultsDetailedForm\" ||\r\n      this.props.adminMessage.taskType === \"searchChildDetailedForm\" ||\r\n      this.props.adminMessage.taskType === \"showMemoForm\" ||\r\n      this.props.adminMessage.taskType === \"showComplaintsForm\" ||\r\n      this.props.adminMessage.taskType === \"showSearchComplaintsForm\" ||\r\n      this.props.adminMessage.taskType === \"showAppealsForm\" ||\r\n      this.props.adminMessage.taskType === \"showSearchAppealsForm\" ||\r\n      this.props.adminMessage.taskType === \"showAdultsStatesSelectingForm\" ||\r\n      this.props.adminMessage.taskType === \"showChildStatesSelectingForm\"\r\n    )\r\n    {\r\n      // console.log(\"EnumData\", JSON.stringify(this.props.adminMessage.enumData))\r\n      return (\r\n        <ViewForm\r\n          key = {this.props.adminMessage.process_id}\r\n          userId = {this.props.userId}\r\n          userRole = {this.props.userRole}\r\n          organizationId = {this.props.organizationId}\r\n          process_id = {this.props.adminMessage.process_id}\r\n          session_id = {this.props.adminMessage.session_id}\r\n          taskID = {this.props.adminMessage.taskID}\r\n          docId = {this.props.adminMessage.docId}\r\n          enumData = {this.props.adminMessage.enumData}\r\n          Form = {this.props.adminMessage.Form}\r\n          documentViewForm = {this.props.adminMessage.documentViewForm}\r\n          subDocument = {false}\r\n          adultsIPRForm = {this.props.adminMessage.adultsIPRForm}\r\n          FormData = {this.props.adminMessage.FormData}\r\n          SOAT = {this.props.adminMessage.SOAT}\r\n          person = {this.props.adminMessage.person}\r\n          personEnumData = {this.props.adminMessage.personEnumData}\r\n          personFormType = {this.props.adminMessage.personFormType}\r\n          buttons = {this.props.adminMessage.buttons}\r\n          gridForm = {this.props.adminMessage.gridForm}\r\n          IPRGridForm = {this.props.adminMessage.IPRGridForm}\r\n          gridFormButtons = {this.props.adminMessage.gridFormButtons}\r\n          formType = {this.props.adminMessage.formType}\r\n          docList = {this.props.adminMessage.docList}\r\n          docListIPR = {this.props.adminMessage.docListIPR}\r\n          size = {this.props.adminMessage.size}\r\n          page = {this.props.adminMessage.page}\r\n          userAction = {this.props.adminMessage.userAction}\r\n          taskType = {this.props.adminMessage.taskType}\r\n          selectedTab = {this.props.selectedTab}\r\n          showScanComponent = {this.props.showScanComponent}\r\n          showScanComponentClick = {this.showScanComponentClick}\r\n          sendFieldValues = {this.sendFieldValues}\r\n          handleCloseCurrentTab = {this.handleCloseCurrentTab}\r\n          clearTabData = {this.clearTabData}\r\n          pushNewBlobs = {this.pushNewBlobs}\r\n          scannedBlobs = {this.props.scannedBlobs}\r\n          pushNewImages = {this.pushNewImages}\r\n          scannedImages = {this.props.scannedImages}\r\n          >\r\n        </ViewForm>\r\n      )\r\n    } \r\n    else if(this.props.adminMessage.taskType === \"showSearchUser\" ||\r\n    this.props.adminMessage.taskType === \"showCreateUser\"||\r\n    this.props.adminMessage.taskType === \"showEditUser\"){\r\n      return (\r\n        <ViewUserForm\r\n          key = {this.props.adminMessage.process_id}\r\n          userId = {this.props.userId}\r\n          userRole = {this.props.userRole}\r\n          organizationId = {this.props.organizationId}\r\n          process_id = {this.props.adminMessage.process_id}\r\n          session_id = {this.props.adminMessage.session_id}\r\n          taskID = {this.props.adminMessage.taskID}\r\n          docId = {this.props.adminMessage.docId}\r\n          enumData = {this.props.adminMessage.enumData}\r\n          Form = {this.props.adminMessage.Form}\r\n          selectedDoc = {this.props.adminMessage.selectedDoc}\r\n          parentIdList = {this.props.adminMessage.parentIdList}\r\n          adultsIPRForm = {this.props.adminMessage.adultsIPRForm}\r\n          FormData = {this.props.adminMessage.FormData}\r\n          buttons = {this.props.adminMessage.buttons}\r\n          gridForm = {this.props.adminMessage.gridForm}\r\n          gridFormButtons = {this.props.adminMessage.gridFormButtons}\r\n          docList = {this.props.adminMessage.docList}\r\n          sendFieldValues = {this.sendFieldValues}\r\n          clearTabData = {this.clearTabData}\r\n          taskType = {this.props.adminMessage.taskType}\r\n          >\r\n        </ViewUserForm>\r\n      )\r\n    }\r\n    else if(this.props.adminMessage.taskType === \"error\"){\r\n      return (\r\n        <Grid container direction=\"row\" justify=\"center\" spacing={0}>\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <table>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{this.props.adminMessage.taskType}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{this.props.adminMessage.process_id}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      )\r\n    }\r\n    else{ \r\n      console.log(\"SOMETHING WRONG\", this.props.adminMessage)\r\n      return (\r\n        <Grid container direction=\"row\" justify=\"center\" spacing={0}>\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <LinearProgress/>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      )\r\n    }  \r\n  }\r\n}\r\nexport default MainComponent\r\n"]},"metadata":{},"sourceType":"module"}