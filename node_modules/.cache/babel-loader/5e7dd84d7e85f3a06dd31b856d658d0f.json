{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\ismse\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\ismse\\\\src\\\\components\\\\ViewForm\\\\ViewForm.jsx\";\n// Import material and react components\nimport React from \"react\";\nimport Select from 'react-select';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\"; // import Typography from '@material-ui/core/Typography';\n\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers'; // Import libraries\n\nimport TableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport ruLocale from \"date-fns/locale/ru\"; // Import custom components\n\nimport Person from \"../Person/Person.jsx\";\nimport Address from \"../../components/Address/Address.jsx\";\nimport GridForm from \"../../components/GridForm/GridForm.jsx\";\nimport Download from \"../../components/Download/Download.jsx\";\n\nfunction NumberFormatCustom(props) {\n  const inputRef = props.inputRef,\n        onChange = props.onChange,\n        other = _objectWithoutProperties(props, [\"inputRef\", \"onChange\"]);\n\n  return React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    decimalSeparator: \",\",\n    isNumericString: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nasync function tableToPdf(tableId) {\n  let mywindow = window.open('', 'PRINT', 'height=650, width=900, top=100, left=150');\n  mywindow.document.write(\"<html><head><title>\".concat('Экспорт в PDF', \"</title>\"));\n  mywindow.document.write('</head><body >');\n  mywindow.document.write(document.getElementById(tableId).innerHTML);\n  mywindow.document.write('</body></html>');\n  mywindow.document.close(); // necessary for IE >= 10\n  // mywindow.focus(); // necessary for IE >= 10*/\n\n  mywindow.print(); // mywindow.close();\n\n  return true;\n}\n\nfunction RegNoMask(props) {\n  const inputRef = props.inputRef,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return React.createElement(MaskedInput, Object.assign({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    },\n    mask: [/[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/],\n    placeholderChar: '\\u2000',\n    showMask: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n}\n\nclass ViewForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeSubDocument = (name, value) => {\n      let subDoc = this.state.subDocument;\n      subDoc[name] = value;\n      this.setState({\n        subDocument: subDoc\n      });\n      console.log(\"Person Data\", name, value);\n    };\n\n    this.componentChange = event => {\n      console.log(\"COM CHANGE\", event.target.name, event.target.value);\n    };\n\n    this.handleChange = event => {\n      // console.log(\"HANDLE TEXT CHANGE\", event.target.name, event.target.value)\n      let fieldValue = this.state.fieldValue;\n\n      if (event.target.name === \"RegNoAct\") {\n        let newValue = \"\";\n        let regex = /[0-9-№]/;\n\n        for (let key in event.target.value) {\n          if (regex.test(event.target.value[key]) === true) {\n            newValue = newValue + event.target.value[key];\n          }\n        }\n\n        fieldValue[event.target.name] = newValue;\n        console.log(\"newValue\", newValue, fieldValue);\n      } else {\n        fieldValue[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.regNoChange = event => {\n      // event.preventDefault()\n      var value = event.target.value.trim();\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = value;\n      this.setState({\n        fieldValue: fieldValue\n      }); // console.log(\"REGNOACT\", event.target.value)\n      // if(event.target.value === \"\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\"){\n      //   console.log(\"REGNO null\")\n      //   let fieldValue = this.state.fieldValue\n      //   fieldValue[event.target.name] = null\n      //   this.setState({fieldValue: fieldValue})\n      // }\n      // else{\n      //   for(let i=value.length; i>0; i--){\n      //     let lastChar = value.substring(i -1, i)\n      //     console.log(\"LAST\", lastChar)\n      //     if(lastChar !== '\\u2000'){\n      //       let fieldValue = this.state.fieldValue\n      //       fieldValue[event.target.name] = value\n      //       this.setState({fieldValue: fieldValue})\n      //       break\n      //     }\n      //     value = value.substring(0, value.length -1)\n      //   }\n      // }\n      // REGEX\n      // let regex = /[0-9-]/\n      // let lastChar = value.substring(value.length -1, value.length)\n      // console.log(\"LAST\", lastChar)\n      // // let chars = event.target.value.split('')\n      // // let char = chars.pop()\n      // if(!regex.test(lastChar)){\n      //   // value = chars.join('')\n      //   console.log(\"not valid\", lastChar)\n      // }\n      // else{\n      //   let fieldValue = this.state.fieldValue\n      //   fieldValue[event.target.name] = value\n      //   this.setState({fieldValue: fieldValue})\n      // }\n    };\n\n    this.componentIntChange = event => {\n      // console.log(\"CHANGE\", event.target.name, event.target.value)\n      if (event.target.value > 2147483646) {\n        let value = event.target.value;\n        let maxValue = value.substring(0, value.length - 1); // console.log(\"SLICE\", value, maxValue)\n\n        let fieldValue = this.state.fieldValue;\n        fieldValue[event.target.name] = maxValue;\n        this.setState({\n          fieldValue: fieldValue\n        });\n      } // else{\n      //   let fieldValue = this.state.fieldValue\n      //   console.log(\"CHANGE\", event.target.name, event.target.value)\n      //   fieldValue[event.target.name] = event.target.value\n      //   this.setState({fieldValue: fieldValue})\n      // }\n\n    };\n\n    this.handleSelectChange = event => {\n      let fstate = this.state;\n\n      if (event.name === \"Occupation\") {\n        if (event.value === \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\n          for (let i = 0; i < fstate.Form.sections.length; i++) {\n            if (fstate.Form.sections[i].name === \"HowToDoJob\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = true;\n              }\n            } else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = true;\n              }\n            }\n          }\n        }\n\n        if (event.value !== \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\n          for (let i = 0; i < fstate.Form.sections.length; i++) {\n            if (fstate.Form.sections[i].name === \"HowToDoJob\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = false;\n                fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false;\n              }\n            } else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = false;\n                fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false;\n              }\n            }\n          }\n        }\n      }\n\n      fstate.fieldValue[event.name] = event.value;\n      this.setState(fstate);\n      console.log(\"Option selected:\", event);\n    };\n\n    this.regionChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      fieldValue[\"District\"] = null;\n      fieldValue[\"subDistrict\"] = null;\n      fieldValue[\"Village\"] = null;\n      console.log(\"Region selected\", event.target.name);\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.districtChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      fieldValue[\"subDistrict\"] = null;\n      fieldValue[\"Village\"] = null;\n      console.log(\"District selected\", event.target.name);\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.subDistrictChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      fieldValue[\"Village\"] = null;\n      console.log(\"District selected\", event.target.name);\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.villageChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      console.log(\"Village selected\", event.target.name);\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.handCheckboxChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.checked;\n      this.setState({\n        fieldValue: fieldValue\n      }); // console.log(\"new checkbox status\", this.state.fieldValue[event.target.name])\n    };\n\n    this.buttonClick = event => {\n      if (event.currentTarget.name === \"createDocument\") {\n        let createDocument = {\n          attributes: this.getFieldValues()\n        };\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"createDocument\"\n            },\n            doc: {\n              value: JSON.stringify(createDocument)\n            },\n            docDefId: {\n              value: this.state.Form.docDefId\n            },\n            userId: {\n              value: this.state.userId\n            },\n            userRole: {\n              value: this.state.userRole\n            }\n          }\n        };\n        console.log(\"button createDocument: \", commandJson);\n        this.checkForEmptyFields(commandJson, 0);\n      } else if (event.currentTarget.name === \"findDocument\") {\n        let filterDocument = {\n          attributes: this.getFieldValuesToSearch()\n        };\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          docDefId: this.state.Form.docDefId,\n          variables: {\n            userAction: {\n              value: \"findDocument\"\n            },\n            doc: {\n              value: JSON.stringify(filterDocument)\n            },\n            userId: {\n              value: this.state.userId\n            },\n            userRole: {\n              value: this.state.userRole\n            },\n            size: {\n              value: this.state.size\n            },\n            page: {\n              value: 1\n            }\n          }\n        };\n        console.log(\"button findDocument: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (event.currentTarget.name === \"findIPR\") {\n        let filterDocument = {\n          attributes: [{\n            name: \"AdultsMedicalCart\",\n            type: \"Doc\",\n            docDef: this.state.Form.medicalCardDocDefId,\n            subDocument: {\n              attributes: this.getFieldValuesToSearch()\n            }\n          }]\n        };\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          docDefId: this.state.Form.docDefId,\n          variables: {\n            userAction: {\n              value: \"findDocument\"\n            },\n            doc: {\n              value: JSON.stringify(filterDocument)\n            },\n            userId: {\n              value: this.state.userId\n            },\n            userRole: {\n              value: this.state.userRole\n            },\n            size: {\n              value: this.state.size\n            },\n            page: {\n              value: this.state.page\n            }\n          }\n        };\n        console.log(\"button findIPR: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (event.currentTarget.name === \"editDocument\") {\n        let editDocument = {\n          attributes: this.getFieldValues()\n        };\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"editDocument\"\n            },\n            doc: {\n              value: JSON.stringify(editDocument)\n            },\n            docId: {\n              value: this.state.docId\n            },\n            userId: {\n              value: this.state.userId\n            },\n            userRole: {\n              value: this.state.userRole\n            }\n          }\n        };\n        console.log(\"button editDocument: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (event.currentTarget.name === \"reexamination\") {\n        let updateDocument = {\n          attributes: this.getFieldValues()\n        };\n        let age = this.getPersonAge();\n        let Adult = age >= 18 ? \"True\" : \"False\";\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"reexamination\"\n            },\n            doc: {\n              value: JSON.stringify(updateDocument)\n            },\n            docId: {\n              value: this.state.docId\n            },\n            userId: {\n              value: this.state.userId\n            },\n            userRole: {\n              value: this.state.userRole\n            },\n            adult: {\n              value: Adult\n            }\n          }\n        };\n        console.log(\"button reexamination: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (event.currentTarget.name === \"updateDocument\") {\n        let updateDocument = {\n          attributes: this.getFieldValues()\n        };\n        let filterIPR = {\n          attributes: [{\n            name: \"AdultsMedicalCart\",\n            value: this.state.docId,\n            type: \"Doc\"\n          }]\n        };\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"updateDocument\"\n            },\n            doc: {\n              value: JSON.stringify(updateDocument)\n            },\n            filterIPR: {\n              value: JSON.stringify(filterIPR)\n            },\n            docDefId: {\n              value: this.state.Form.docDefId\n            },\n            docId: {\n              value: this.state.docId\n            },\n            userId: {\n              value: this.state.userId\n            },\n            userRole: {\n              value: this.state.userRole\n            }\n          }\n        };\n        console.log(\"button updateDocument: \", commandJson);\n        this.checkForEmptyFields(commandJson, 1); // this.sendFieldValues(commandJson)\n      } else if (event.currentTarget.name === \"medakt\") {\n        // let updateDocument = {attributes: this.getFieldValues()}\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"medakt\"\n            },\n            docId: {\n              value: this.state.docId\n            },\n            userId: {\n              value: this.state.userId\n            },\n            userRole: {\n              value: this.state.userRole\n            }\n          }\n        };\n        console.log(\"button Medakt: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (event.currentTarget.name === \"IPR\") {\n        if (this.state.docListIPR !== null) {\n          if (this.state.docListIPR.length > 0) {\n            this.props.callErrorToast(\"Данный Медакт уже имеет ИПР\");\n          } else {\n            let commandJson = {\n              commandType: \"completeTask\",\n              session_id: this.state.session_id,\n              process_id: this.state.process_id,\n              taskID: this.state.taskID,\n              variables: {\n                userAction: {\n                  value: \"ipr\"\n                },\n                docId: {\n                  value: this.state.docId\n                },\n                userId: {\n                  value: this.state.userId\n                },\n                userRole: {\n                  value: this.state.userRole\n                }\n              }\n            };\n            console.log(\"button IPR: \", commandJson); // this.sendFieldValues(commandJson)\n            // this.clearTabData(this.state.process_id) \n          }\n        }\n      } else if (event.currentTarget.name === \"deleteDocument\") {\n        swal({\n          text: \"Вы точно хотите удалить этот документ?\",\n          icon: \"warning\",\n          buttons: {\n            yes: \"Да\",\n            no: \"Нет\"\n          },\n          dangerMode: true\n        }).then(click => {\n          if (click === \"yes\") {\n            let commandJson = {\n              commandType: \"completeTask\",\n              session_id: this.state.session_id,\n              process_id: this.state.process_id,\n              taskID: this.state.taskID,\n              variables: {\n                userAction: {\n                  value: \"deleteDocument\"\n                },\n                docId: {\n                  value: this.state.docId\n                },\n                userId: {\n                  value: this.state.userId\n                },\n                userRole: {\n                  value: this.state.userRole\n                }\n              }\n            };\n            console.log(\"button deleteDocument: \", commandJson);\n            this.sendFieldValues(commandJson);\n            this.clearTabData(this.state.process_id);\n          }\n        });\n      } else if (event.currentTarget.name === \"signDocument\") {\n        let docsToSign = {\n          docIdList: this.getDocsIdToSign(),\n          stateTypeId: \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\"\n        };\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"signDocument\"\n            },\n            doc: {\n              value: JSON.stringify(docsToSign)\n            } // doc: {\n            //   value: {\n            //     docIdList: this.getDocsIdToSign(),\n            //     stateTypeId: \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\"\n            //   }\n            // }\n\n          }\n        };\n        console.log(\"button signDocument: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (event.currentTarget.name === \"registerDocument\") {\n        let docsToRegister = {\n          docIdList: this.getDocsIdToSign(),\n          stateTypeId: \"C1414D0C-417A-45AB-8B57-01D30A567F08\"\n        };\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"registerDocument\"\n            },\n            doc: {\n              value: JSON.stringify(docsToRegister)\n            }\n          }\n        };\n        console.log(\"button registerDocument: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (event.currentTarget.name === \"showStatusSelectingForm\") {\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"showStatusSelectingForm\"\n            },\n            doc: {\n              value: JSON.stringify({\n                docIdList: this.getDocsIdToSign(),\n                stateTypeId: \"\"\n              })\n            }\n          }\n        };\n        console.log(\"button showStatusSelectingForm: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (event.currentTarget.name === \"setNewState\") {\n        if (this.state.fieldValue[\"StatusName\"] !== null && this.state.fieldValue[\"StatusName\"] !== undefined) {\n          let states = {\n            \"29a5cf05-30de-45b9-8526-69de5ea8ab12\": \"a9e360f0-eed1-4ff6-9ab8-e4255c62ce4a\",\n            // умер\n            \"6a0f2699-eb53-4175-ac07-71deb84ae641\": \"10a96e4b-df5d-4f55-9d81-83f9e3e51de5\",\n            // приостановлена инвалидность \n            \"3d2dd30f-3ab0-439f-a8dd-149431af67be\": \"d203372c-236b-4b3e-953a-11f09a4aca61\",\n            // истекший срок инвалидности\n            \"b042e77b-9a12-47f1-a6d2-cc85e9029e61\": \"c9cfe461-e822-4f97-b34d-9312f8917fa9\",\n            // переехал за переделами рт\n            \"c5f3563c-688f-44f1-9c01-70d190ae9edb\": \"1fa96e5b-908f-4c57-bc4a-b61423951081\" // перешел на возрастную пенсию\n\n          }; // console.log(\"ST\", this.state.fieldValue[\"StatesName\"]);\n\n          let commandJson = {\n            commandType: \"completeTask\",\n            process_id: this.state.process_id,\n            session_id: this.state.session_id,\n            taskID: this.state.taskID,\n            variables: {\n              userAction: {\n                value: \"setNewState\"\n              },\n              newState: {\n                value: states[this.state.fieldValue[\"StatusName\"]]\n              }\n            }\n          };\n          console.log(\"button setNewState: \", commandJson);\n          this.sendFieldValues(commandJson);\n          this.clearTabData(this.state.process_id);\n        } else {\n          this.props.callErrorToast(\"Заполните поле \\\"Статус\\\"\");\n        }\n      } else if (event.currentTarget.name === \"setNewStateChild\") {\n        let states = {\n          \"adcb9640-51d0-4952-b196-27e87bb28d31\": \"10a96e4b-df5d-4f55-9d81-83f9e3e51de5\",\n          // приостановлена инвалидность \n          \"a61fcb5d-e858-4183-b1cd-1fef00c6b4bc\": \"d203372c-236b-4b3e-953a-11f09a4aca61\",\n          // истекший срок инвалидности\n          \"184e3fac-a6b6-4c60-89a8-517862ecd9c4\": \"c9cfe461-e822-4f97-b34d-9312f8917fa9\",\n          // переехал за переделами рт          \n          \"05be1899-8d41-4dfd-ae72-41cba4aa9223\": \"a9e360f0-eed1-4ff6-9ab8-e4255c62ce4a\" // умер\n\n        }; // console.log(\"ST\", this.state.fieldValue[\"StatesName\"]);\n\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"setNewStateChild\"\n            },\n            newState: {\n              value: states[this.state.fieldValue[\"StatesName\"]]\n            }\n          }\n        };\n        console.log(\"button setNewStateChild: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (event.currentTarget.name === \"setStateDied\") {\n        let docsToSetState = {\n          docIdList: this.getDocsIdToSign(),\n          stateTypeId: \"A9E360F0-EED1-4FF6-9AB8-E4255C62CE4A\"\n        };\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"setStateDied\"\n            },\n            doc: {\n              value: JSON.stringify(docsToSetState)\n            } // doc: {\n            //   value: {\n            //     docIdList: this.getDocsIdToSign(),\n            //     stateTypeId: \"A9E360F0-EED1-4FF6-9AB8-E4255C62CE4A\"\n            //   }\n            // }\n\n          }\n        };\n        console.log(\"button setStateDied: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (event.currentTarget.name === \"backToMedakt\") {\n        let Document = {\n          attributes: [{\n            name: \"AdultsMedicalCart\",\n            value: this.state.fieldValue[\"AdultsMedicalCart\"],\n            type: \"Doc\"\n          }]\n        };\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"backToMedakt\"\n            },\n            userId: {\n              value: this.state.userId\n            },\n            userRole: {\n              value: this.state.userRole\n            },\n            docDefId: {\n              value: this.state.Form.docDefId\n            },\n            doc: {\n              value: JSON.stringify(Document)\n            },\n            docId: {\n              value: this.state.fieldValue[\"AdultsMedicalCart\"]\n            },\n            size: {\n              value: 10\n            },\n            page: {\n              value: 1\n            }\n          }\n        };\n        console.log(\"button backToMedakt: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (event.currentTarget.name === \"transferDocuments\") {\n        if (Object.keys(this.state.docList).length !== 0) {\n          var age = this.getPersonAge();\n          console.log(\"AGE\", age);\n\n          if (age >= 18) {\n            var docDefId = this.state.Form.adultsMedaktDocDefId;\n          } else if (age < 18) {\n            var docDefId = this.state.Form.childMedaktDocDefId;\n          }\n\n          this.setOrgIdToMedakt();\n          let commandJson = {\n            commandType: \"transferDocuments\",\n            session_id: this.state.session_id,\n            process_id: this.state.process_id,\n            taskID: this.state.taskID,\n            medaktDocDefId: docDefId,\n            IPRDocDefId: this.state.IPRGridForm.Form.docDefId,\n            medakts: JSON.stringify(this.state.docList),\n            IPR: JSON.stringify(this.state.docListIPR),\n            userId: this.state.userId,\n            userRole: this.state.userRole\n          };\n\n          if (this.state.fieldValue[\"MseName\"] !== null && this.state.fieldValue[\"MseName\"] !== undefined) {\n            console.log(\"button transfeDocuments: \", commandJson);\n            this.sendFieldValues(commandJson);\n            this.clearTabData(this.state.process_id);\n          } else {\n            this.props.callErrorToast(\"Выберите МСЭК для передачи данных\");\n          }\n        } else this.props.callErrorToast(\"Нет данных для передачи\");\n      } else if (event.currentTarget.name === \"downloadMemo\") {\n        this.downloadDocument(\"downloadPDF\");\n      } else if (event.currentTarget.name === \"viewRegForm\") {\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"viewRegForm\"\n            },\n            userId: {\n              value: this.state.userId\n            },\n            size: {\n              value: 10\n            },\n            page: {\n              value: 1\n            }\n          }\n        };\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (event.currentTarget.name === \"acceptComplaint\") {\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"acceptComplaint\"\n            }\n          }\n        };\n        console.log(\"button acceptComplaint: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (event.currentTarget.name === \"rejectComplaint\") {\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"rejectComplaint\"\n            }\n          }\n        };\n        console.log(\"button rejectComplaint: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (event.currentTarget.name === \"back\") {\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"back\"\n            }\n          }\n        };\n        console.log(\"button back: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (event.currentTarget.name === \"finish\") {\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"finish\"\n            }\n          }\n        };\n        console.log(\"button finish: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (event.currentTarget.name === \"cancel\") {\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"cancel\"\n            }\n          }\n        };\n        console.log(\"button cancel: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      }\n    };\n\n    this.state = {\n      process_id: this.props.process_id,\n      session_id: this.props.session_id,\n      taskID: this.props.taskID,\n      taskType: this.props.taskType,\n      fieldValue: {},\n      subDocument: {},\n      enumData: this.props.enumData,\n      Form: null,\n      selectedDoc: JSON.parse(this.props.selectedDoc),\n      docId: null,\n      buttons: this.props.buttons,\n      gridForm: null,\n      IPRGridForm: this.props.IPRGridForm,\n      gridFormButtons: null,\n      userId: this.props.userId,\n      userRole: this.props.userRole,\n      organizationId: this.props.organizationId,\n      formType: this.props.formType,\n      person: null,\n      personFormType: this.props.personFormType,\n      personEnumData: this.props.personEnumData,\n      documentViewForm: this.props.documentViewForm,\n      docList: null,\n      docListIPR: null,\n      download: null,\n      size: this.props.size,\n      page: this.props.page,\n      SOAT: null // regNoMask: []\n\n    };\n    this.sendFieldValues = this.sendFieldValues.bind(this);\n    this.buttonClick = this.buttonClick.bind(this);\n    this.parseDate = this.parseDate.bind(this);\n    this.changeSubDocument = this.changeSubDocument.bind(this);\n    this.rowsPageChange = this.rowsPageChange.bind(this);\n    this.handleCloseCurrentTab = this.handleCloseCurrentTab.bind(this);\n    this.clearTabData = this.clearTabData.bind(this);\n    this.showScanComponentClick = this.showScanComponentClick.bind(this);\n    this.pushNewBlobs = this.pushNewBlobs.bind(this);\n    this.pushNewImages = this.pushNewImages.bind(this);\n  }\n\n  handleCloseCurrentTab(process_id) {\n    this.props.handleCloseCurrentTab(process_id);\n  }\n\n  showScanComponentClick() {\n    this.props.showScanComponentClick();\n  }\n\n  sendFieldValues(commandJson) {\n    this.props.sendFieldValues(commandJson);\n  }\n\n  pushNewBlobs(blobs) {\n    this.props.pushNewBlobs(blobs);\n  }\n\n  pushNewImages(images) {\n    this.props.pushNewImages(images);\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (!this.state.Form) {\n      this.setDataFromProps();\n    }\n\n    if (this.state.download !== null) {\n      if (this.state.download === \"downloadExcel\") {\n        TableToExcel.convert(document.getElementById(\"TableToDownload\"));\n        this.setState({\n          download: null\n        });\n      } else {\n        tableToPdf(\"TableToDownload\");\n        this.setState({\n          download: null\n        });\n      }\n    }\n  }\n\n  async componentDidMount() {\n    console.log(\"VIEW FORM PROPS\", this.props);\n    this.setDataFromProps();\n  } // Set data from props to local state\n\n\n  async setDataFromProps() {\n    try {\n      let fstate = this.state;\n      fstate.Form = this.props.Form;\n      fstate.gridForm = this.props.gridForm;\n\n      if (this.props.selectedDoc !== undefined && this.props.selectedDoc !== \"null\" && this.props.selectedDoc !== null) {\n        var formData = JSON.parse(this.props.selectedDoc);\n        console.log(\"S DOC\", formData); //SET PERSON DATA TO PERSON\n\n        if (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\") {\n          for (let i = 0; i < formData.attributes.length; i++) {\n            if (formData.attributes[i].name === \"AdultsMedicalCart\") {\n              for (let l = 0; l < formData.attributes[i].subDocument.attributes.length; l++) {\n                if (formData.attributes[i].subDocument.attributes[l].name === \"Person\") {\n                  fstate.person = formData.attributes[i].subDocument.attributes[l].subDocument;\n                }\n              }\n            }\n          }\n        } else {\n          for (let i = 0; i < formData.attributes.length; i++) {\n            if (formData.attributes[i].name === \"Person\") {\n              // console.log(\"PERSON\", formData.attributes[i].subDocument)\n              fstate.person = formData.attributes[i].subDocument;\n            }\n          }\n        } // SET FIELD VALUES\n\n\n        for (let i = 0; i < formData.attributes.length; i++) {\n          if (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\") {\n            if (formData.attributes[i].name === \"AdultsMedicalCart\") {\n              fstate.fieldValue.AdultsMedicalCart = formData.attributes[i].subDocument.id;\n\n              for (let l = 0; l < formData.attributes[i].subDocument.attributes.length; l++) {\n                if (formData.attributes[i].subDocument.attributes[l].value !== null) {\n                  fstate.fieldValue[formData.attributes[i].subDocument.attributes[l].name] = formData.attributes[i].subDocument.attributes[l].value;\n                }\n              }\n            } else {\n              if (formData.attributes[i].value !== null) {\n                fstate.fieldValue[formData.attributes[i].name] = formData.attributes[i].value;\n              }\n            }\n          } else {\n            if (formData.attributes[i].value !== null) {\n              fstate.fieldValue[formData.attributes[i].name] = formData.attributes[i].value;\n            }\n          }\n        }\n      } // SET PERSON DATA INTO EMPTY IPR FORM\n\n\n      if (this.props.selectedDoc === \"null\" && this.props.person !== undefined && this.props.person !== \"null\") {\n        var personData = JSON.parse(this.props.person);\n        fstate.person = personData;\n        fstate.fieldValue.Person = personData.id;\n      }\n\n      if (this.props.docList !== undefined) {\n        fstate.docList = JSON.parse(this.props.docList);\n      }\n\n      if (this.props.docListIPR !== undefined) {\n        fstate.docListIPR = JSON.parse(this.props.docListIPR);\n      }\n\n      if (this.props.SOAT !== undefined) {\n        fstate.SOAT = this.props.SOAT;\n      }\n\n      if (this.props.gridFormButtons !== undefined) {\n        fstate.gridFormButtons = this.props.gridFormButtons;\n      }\n\n      if (this.props.docId !== null || this.props.docId !== \"null\" || this.props.docId !== undefined) {\n        fstate.docId = this.props.docId;\n      }\n\n      this.setState(fstate); // UPDAETE SOME DATA if nesessary\n\n      if (this.props.userAction === \"reexamination\") {\n        var newDate = new Date();\n        var dd = String(newDate.getDate()).padStart(2, '0');\n        var mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n        var yyyy = newDate.getFullYear();\n        var convertedDate = String(dd + '.' + mm + '.' + yyyy);\n        fstate.fieldValue[\"Date\"] = convertedDate;\n        fstate.fieldValue[\"RegNoAct\"] = null;\n        fstate.fieldValue[\"ExaminationPrRe\"] = \"8d71baae-b834-42e5-be87-7f5637cc46d8\";\n        fstate.fieldValue[\"goal1\"] = false;\n        fstate.fieldValue[\"goal2\"] = false;\n        fstate.fieldValue[\"goal3\"] = false;\n        fstate.fieldValue[\"goal4\"] = null;\n        fstate.fieldValue[\"goal5\"] = false;\n        fstate.fieldValue[\"goal6\"] = false;\n        fstate.fieldValue[\"goalAnother\"] = null;\n        fstate.fieldValue[\"DisabilityGroup\"] = null; // fstate.fieldValue[\"ExamDateFrom\"] = \"NaN.NaN.NaN\"\t\n        // fstate.fieldValue[\"ExamDateTo\"] = \"NaN.NaN.NaN\"\t\n        // fstate.fieldValue[\"ExamStartDate\"] = \"NaN.NaN.NaN\"\n        // fstate.fieldValue[\"ExamOfDate\"] = \"NaN.NaN.NaN\"\n        // fstate.fieldValue[\"ExamFinishDate\"] = \"NaN.NaN.NaN\"\n\n        fstate.fieldValue[\"ExamDateFrom\"] = undefined;\n        fstate.fieldValue[\"ExamDateTo\"] = undefined;\n        fstate.fieldValue[\"ExamStartDate\"] = undefined;\n        fstate.fieldValue[\"ExamOfDate\"] = undefined;\n        fstate.fieldValue[\"ExamFinishDate\"] = undefined;\n        fstate.fieldValue[\"ReferenceNumber\"] = undefined;\n      }\n\n      if ((this.props.Form.formName === \"AdultsIPRForm\" || this.props.Form.formName === \"ChildIPRForm\") && fstate.fieldValue.AdultsMedicalCart === undefined) {\n        fstate.fieldValue.AdultsMedicalCart = this.props.docId;\n      }\n\n      if (fstate.fieldValue[\"Country\"] === undefined && this.props.SOAT !== null && this.props.SOAT !== undefined) {\n        fstate.fieldValue[\"Country\"] = \"4170000000000\";\n      } // SET PERSON DATA IF IT\"S null\n\n\n      if (fstate.person === null && (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\")) {\n        if (this.state.fieldValue[\"IPRNo\"] === undefined) {\n          this.state.fieldValue[\"IPRNo\"] = this.state.fieldValue[\"No\"];\n        }\n\n        for (let l = 0; l < this.state.selectedDoc.attributes.length; l++) {\n          if (this.state.selectedDoc.attributes[l].name === \"Person\") {\n            fstate.person = this.state.selectedDoc.attributes[l].subDocument; // fstate.fieldValue.Person = this.state.selectedDoc.attributes[l].subDocument.id\n          }\n        }\n      }\n\n      if (fstate.person === null && this.props.person !== undefined && this.props.person !== \"null\" && this.props.person !== null) {\n        personData = JSON.parse(this.props.person);\n        fstate.person = personData;\n        fstate.fieldValue.Person = personData.id;\n      }\n\n      if ((fstate.person === null || this.props.person !== \"null\") && this.props.Form.formName === \"TransferMedicalCertificateForm\" && this.props.docList !== \"[]\") {\n        var docListData = JSON.parse(this.props.docList); // console.log(\"docListData\", docListData)\n\n        for (let l = 0; l < docListData[0].attributes.length; l++) {\n          if (docListData[0].attributes[l].name === \"Person\") {\n            fstate.person = docListData[0].attributes[l].subDocument;\n          }\n        }\n      } // DISABLE 2 BLOCKS OF FORM /FROM INCOMING DATA\n\n\n      if (fstate.fieldValue[\"Occupation\"] !== \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\n        for (let i = 0; i < fstate.Form.sections.length; i++) {\n          if (fstate.Form.sections[i].name === \"HowToDoJob\") {\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n              fstate.Form.sections[i].contents[l].edit = false;\n              fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false;\n            }\n          } else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n              fstate.Form.sections[i].contents[l].edit = false;\n              fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false;\n            }\n          }\n        }\n      } // SET DATE OF REGISTRATION DEFAULT CURRENT DAY\n\n\n      if (this.props.taskType === \"showRegForm\" || this.props.taskType === \"showChildRegForm\" || this.props.taskType === \"showDetailedForm\" || this.props.taskType === \"showChildDetailedForm\") {\n        if (fstate.fieldValue[\"Date\"] === undefined) {\n          let newDate = new Date();\n          let dd = String(newDate.getDate()).padStart(2, '0');\n          let mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n          let yyyy = newDate.getFullYear();\n          let convertedDate = String(dd + '.' + mm + '.' + yyyy);\n          fstate.fieldValue[\"Date\"] = convertedDate;\n        }\n      }\n\n      if (fstate.fieldValue[\"MseName\"] === undefined && this.state.Form.formName !== \"TransferMedicalCertificateForm\" && this.state.Form.formName !== \"AdultsDetailedSearchForm\" && this.state.Form.formName !== \"AdultsIPRSearchForm\" && this.state.Form.formName !== \"ChildDetailedSearchForm\" && this.state.Form.formName !== \"AdultsIPRSearchForm\" && this.state.Form.formName !== \"AdultsRegistrationSearchForm\") {\n        fstate.fieldValue[\"MseName\"] = fstate.organizationId;\n      }\n\n      this.setState(fstate);\n    } catch (er) {\n      console.log(\"ERROR\", er);\n    }\n  }\n\n  async downloadDocument(type) {\n    this.setState({\n      download: type\n    });\n  } // Delete close component and delete its data from hash stared in home component\n\n\n  clearTabData(process_id) {\n    this.props.clearTabData(process_id);\n  } // Check field regNoAct if it's exist in database, it should be unique\n\n\n  async checkForRegNoAct(commandJson, length) {\n    if (this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined) {\n      this.props.callSuccessToast(\"Проверка № Медакта\");\n      var RegNoAct = {\n        attributes: [{\n          name: \"RegNoAct\",\n          value: this.state.fieldValue[\"RegNoAct\"],\n          type: \"Text\"\n        }]\n      };\n      console.log(\"BODY\", RegNoAct);\n      await fetch(\"api/Document/FilterDocumentsByDefId?defId=\" + this.state.Form.docDefId + \"&size=3&page=1&userId=\" + this.state.userId, {\n        headers: {\n          \"Accept\": \"application/x-www-form-urlencoded\",\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"POST\",\n        body: JSON.stringify(RegNoAct) // mode: 'no-cors'\n\n      }).then(response => {\n        response.text().then(stringResponse => {\n          var document = JSON.parse(stringResponse);\n          console.log(\"RESPONSE\", document); // this.sendFieldValues(commandJson)\n\n          if (document.length <= length) {\n            console.log(\"LENGTH\", document.length, length);\n            this.sendFieldValues(commandJson);\n            this.clearTabData(this.state.process_id);\n            this.props.callSuccessToast(\"Проверка завершена!\");\n          } else {\n            this.swAlert(\"Гражданин с таким № акта уже существует!\");\n          }\n        });\n      });\n    } else {\n      this.props.callErrorToast(\"Заполните поле \\\"№ акта по МСЭК\\\"\");\n    }\n  } // Handle changing of person document fields if it is enabled for input and set values to local state\n\n\n  // Returns random id\n  getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // Handling component changing without render all state, made for optimization\n\n\n  // DateTime component change handler\n  handleDateTimeChange(date, name) {\n    let fieldValue = this.state.fieldValue;\n\n    if (date !== null) {\n      var newDate = new Date(date);\n      var dd = String(newDate.getDate()).padStart(2, '0');\n      var mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n      var yyyy = newDate.getFullYear();\n      var convertedDate = String(dd + '.' + mm + '.' + yyyy); // console.log(\"CDATE\", convertedDate)\n\n      fieldValue[name] = convertedDate;\n      this.setState({\n        fieldValue: fieldValue\n      });\n    } else {\n      fieldValue[name] = undefined;\n      this.setState({\n        fieldValue: fieldValue\n      });\n    }\n  } // Convert date to approptiate format\n\n\n  parseDate(date) {\n    if (date !== undefined) {\n      var dd = date.substring(0, 2);\n      var mm = date.substring(3, 5);\n      var yyyy = date.substring(6, 10);\n      var convertedDate = String(yyyy + '-' + mm + '-' + dd);\n      var newDate = new Date(convertedDate); // \"2020-01-26\"\n\n      dd = String(newDate.getDate()).padStart(2, '0');\n      mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n      yyyy = newDate.getFullYear();\n      convertedDate = yyyy + '-' + mm + '-' + dd;\n    } // console.log(\"DATE\", convertedDate)\n\n\n    return convertedDate;\n  }\n\n  // Get name of address by its code\n  getAddressData(code) {\n    for (var i = 0; i < this.state.SOAT.countries.length; i++) {\n      if (code === this.state.SOAT.countries[i].code) {\n        return this.state.SOAT.countries[i].name;\n      } else {\n        for (var j = 0; j < this.state.SOAT.countries[i].regions.length; j++) {\n          if (code === this.state.SOAT.countries[i].regions[j].code) {\n            return this.state.SOAT.countries[i].regions[j].name;\n          } else {\n            for (var k = 0; k < this.state.SOAT.countries[i].regions[j].districts.length; k++) {\n              if (code === this.state.SOAT.countries[i].regions[j].districts[k].code) {\n                return this.state.SOAT.countries[i].regions[j].districts[k].name;\n              } else {\n                if (this.state.SOAT.countries[i].regions[j].districts[k].subDistricts !== undefined) {\n                  for (var l = 0; l < this.state.SOAT.countries[i].regions[j].districts[k].subDistricts.length; l++) {\n                    if (code === this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].code) {\n                      return this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].name;\n                    } else {\n                      if (this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages !== undefined) {\n                        for (var m = 0; m < this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages.length; m++) {\n                          if (code === this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages[m].code) {\n                            return this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages[m].name;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  } // Collecting all field values and return as attributes\n\n\n  getFieldValues() {\n    var attributes = [];\n\n    if (this.state.taskType === \"showIPRForm\" || this.state.taskType === \"showChildIPRForm\") {\n      console.log(\"IPR FORM\");\n\n      for (var key in this.state.fieldValue) {\n        if (key === \"AdultsMedicalCart\") {\n          attributes.push({\n            name: \"AdultsMedicalCart\",\n            value: this.state.fieldValue[key],\n            type: \"Doc\"\n          });\n        } else if (key === \"IPRNo\") {\n          attributes.push({\n            name: \"IPRNo\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else {\n          for (var section = 0; section < this.state.Form.sections.length; section++) {\n            for (var item = 0; item < this.state.Form.sections[section].contents.length; item++) {\n              if (key === this.state.Form.sections[section].contents[item].name) {\n                if (this.state.Form.sections[section].contents[item].edit === true) {\n                  attributes.push({\n                    name: this.state.Form.sections[section].contents[item].name,\n                    value: this.state.fieldValue[key],\n                    type: this.state.Form.sections[section].contents[item].type\n                  });\n                }\n              }\n            }\n          }\n        }\n      }\n    } else if (this.state.taskType === \"showIPRSearchForm\" || this.state.taskType === \"showChildIPRSearchForm\") {\n      var subDocumentAttributes = [];\n\n      for (key in this.state.fieldValue) {\n        if (this.state.fieldValue[key] !== null && this.state.fieldValue[key] !== \"\") {\n          if (key === \"Country\") {\n            subDocumentAttributes.push({\n              name: \"Country\",\n              value: this.state.fieldValue[key],\n              type: \"Text\"\n            });\n          } else if (key === \"Region\") {\n            subDocumentAttributes.push({\n              name: \"Region\",\n              value: this.state.fieldValue[key],\n              type: \"Text\"\n            });\n          } else if (key === \"District\") {\n            subDocumentAttributes.push({\n              name: \"District\",\n              value: this.state.fieldValue[key],\n              type: \"Text\"\n            });\n          }\n        }\n\n        for (let section = 0; section < this.state.Form.sections.length; section++) {\n          for (let item = 0; item < this.state.Form.sections[section].contents.length; item++) {\n            if (key === this.state.Form.sections[section].contents[item].name) {\n              subDocumentAttributes.push({\n                name: this.state.Form.sections[section].contents[item].name,\n                value: this.state.fieldValue[key],\n                type: this.state.Form.sections[section].contents[item].type\n              });\n            }\n          }\n        }\n      }\n\n      attributes.push({\n        name: \"AdultsMedicalCart\",\n        type: \"Doc\",\n        docDef: this.state.Form.medicalCardDocDefId,\n        \"subDocument\": {\n          \"attributes\": subDocumentAttributes\n        }\n      });\n\n      if (Object.keys(this.state.subDocument).length !== 0) {\n        var subDocumentPersonAttributes = [];\n\n        for (var key in this.state.subDocument) {\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\n            if (key === this.state.documentViewForm.attributes[i].name) {\n              subDocumentPersonAttributes.push({\n                name: this.state.documentViewForm.attributes[i].name,\n                value: this.state.subDocument[key],\n                type: this.state.documentViewForm.attributes[i].type\n              });\n              console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key]);\n            }\n          }\n        }\n\n        attributes.subDocumentAttributes.push({\n          name: \"Person\",\n          type: \"Doc\",\n          docDef: this.state.documentViewForm.docDefId,\n          \"subDocument\": {\n            \"attributes\": subDocumentPersonAttributes\n          }\n        });\n      }\n\n      console.log(\"IPRATRS\", attributes);\n    } else {\n      // console.log(\"Fiel Values\", this.state.fieldValue)\n      for (key in this.state.fieldValue) {\n        if (key === \"Country\") {\n          attributes.push({\n            name: \"Country\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"Region\") {\n          attributes.push({\n            name: \"Region\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"District\") {\n          attributes.push({\n            name: \"District\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"subDistrict\") {\n          attributes.push({\n            name: \"subDistrict\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"Village\") {\n          attributes.push({\n            name: \"Village\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"ResidentialAddress\") {\n          attributes.push({\n            name: \"ResidentialAddress\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else if (key === \"Phone\") {\n          attributes.push({\n            name: \"Phone\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else if (key === \"Person\") {\n          attributes.push({\n            name: \"Person\",\n            value: this.state.fieldValue[key],\n            type: \"Doc\"\n          });\n        } else {\n          for (section = 0; section < this.state.Form.sections.length; section++) {\n            for (item = 0; item < this.state.Form.sections[section].contents.length; item++) {\n              if (key === this.state.Form.sections[section].contents[item].name) {\n                attributes.push({\n                  name: this.state.Form.sections[section].contents[item].name,\n                  value: this.state.fieldValue[key],\n                  type: this.state.Form.sections[section].contents[item].type\n                });\n              }\n            }\n          }\n        }\n      }\n\n      if (Object.keys(this.state.subDocument).length !== 0) {\n        subDocumentAttributes = [];\n\n        for (key in this.state.subDocument) {\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\n            if (key === this.state.documentViewForm.attributes[i].name) {\n              subDocumentAttributes.push({\n                name: this.state.documentViewForm.attributes[i].name,\n                value: this.state.subDocument[key],\n                type: this.state.documentViewForm.attributes[i].type\n              });\n              console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key]);\n            }\n          }\n        }\n\n        attributes.push({\n          name: \"Person\",\n          type: \"Doc\",\n          docDef: this.state.documentViewForm.docDefId,\n          \"subDocument\": {\n            \"attributes\": subDocumentAttributes\n          }\n        });\n      }\n    } // console.log(\"ATTR\", attributes)\n\n\n    return attributes;\n  }\n\n  getFieldValuesToSearch() {\n    var attributes = [];\n\n    for (var key in this.state.fieldValue) {\n      if (this.state.fieldValue[key] !== null && this.state.fieldValue[key] !== \"\") {\n        //&& this.state.fieldValue[key] !== \"NaN.NaN.NaN\"\n        if (key === \"Country\") {\n          attributes.push({\n            name: \"Country\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"Region\") {\n          attributes.push({\n            name: \"Region\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"District\") {\n          attributes.push({\n            name: \"District\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"subDistrict\") {\n          attributes.push({\n            name: \"subDistrict\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"Village\") {\n          attributes.push({\n            name: \"Village\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"ResidentialAddress\") {\n          attributes.push({\n            name: \"ResidentialAddress\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else if (key === \"Phone\") {\n          attributes.push({\n            name: \"Phone\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else if (key === \"Person\") {\n          attributes.push({\n            name: \"Person\",\n            value: this.state.fieldValue[key],\n            type: \"Doc\"\n          });\n        } else {\n          for (var section = 0; section < this.state.Form.sections.length; section++) {\n            for (var item = 0; item < this.state.Form.sections[section].contents.length; item++) {\n              if (key === this.state.Form.sections[section].contents[item].name) {\n                attributes.push({\n                  name: this.state.Form.sections[section].contents[item].name,\n                  value: this.state.fieldValue[key],\n                  type: this.state.Form.sections[section].contents[item].type\n                });\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (Object.keys(this.state.subDocument).length !== 0) {\n      var subDocumentAttributes = [];\n\n      for (key in this.state.subDocument) {\n        if (this.state.subDocument[key] !== null && this.state.subDocument[key] !== \"\") {\n          //&& this.state.subDocument[key] !== \"NaN.NaN.NaN\"\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\n            if (key === this.state.documentViewForm.attributes[i].name) {\n              subDocumentAttributes.push({\n                name: this.state.documentViewForm.attributes[i].name,\n                value: this.state.subDocument[key],\n                type: this.state.documentViewForm.attributes[i].type\n              }); // console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key])\n            }\n          }\n        }\n      }\n\n      attributes.push({\n        name: \"Person\",\n        type: \"Doc\",\n        docDef: this.state.documentViewForm.docDefId,\n        \"subDocument\": {\n          \"attributes\": subDocumentAttributes\n        }\n      });\n    }\n\n    return attributes;\n  }\n\n  checkForEmptyFields(commandJson, length) {\n    //  Adulds Medakt || Reg Form\n    if (this.state.taskType === \"showRegForm\" || this.state.taskType === \"showDetailedForm\") {\n      // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\n      if (this.state.fieldValue[\"Country\"] !== null && this.state.fieldValue[\"Country\"] !== undefined) {\n        if (this.state.fieldValue[\"Region\"] !== null && this.state.fieldValue[\"Region\"] !== undefined) {\n          if (this.state.fieldValue[\"EducationAct\"] !== null && this.state.fieldValue[\"EducationAct\"] !== undefined) {\n            if (this.state.fieldValue[\"Occupation\"] !== null && this.state.fieldValue[\"Occupation\"] !== undefined) {\n              if (this.state.fieldValue[\"ExaminationPrRe\"] !== null && this.state.fieldValue[\"ExaminationPrRe\"] !== undefined) {\n                if (this.state.fieldValue[\"ExaminationPlace\"] !== null && this.state.fieldValue[\"ExaminationPlace\"] !== undefined) {\n                  if (this.state.fieldValue[\"PensionStatus\"] !== null && this.state.fieldValue[\"PensionStatus\"] !== undefined) {\n                    if (this.state.fieldValue[\"goal1\"] !== false && this.state.fieldValue[\"goal1\"] !== undefined && this.state.fieldValue[\"goal1\"] !== \"False\" || this.state.fieldValue[\"goal2\"] !== false && this.state.fieldValue[\"goal2\"] !== undefined && this.state.fieldValue[\"goal2\"] !== \"False\" || this.state.fieldValue[\"goal3\"] !== false && this.state.fieldValue[\"goal3\"] !== undefined && this.state.fieldValue[\"goal3\"] !== \"False\" || this.state.fieldValue[\"goal4\"] !== null && this.state.fieldValue[\"goal4\"] !== undefined && this.state.fieldValue[\"goal4\"] !== \"False\" || this.state.fieldValue[\"goal5\"] !== false && this.state.fieldValue[\"goal5\"] !== undefined && this.state.fieldValue[\"goal5\"] !== \"False\" || this.state.fieldValue[\"goal6\"] !== false && this.state.fieldValue[\"goal6\"] !== undefined && this.state.fieldValue[\"goal6\"] !== \"False\" || this.state.fieldValue[\"goalAnother\"] !== \"\" && this.state.fieldValue[\"goalAnother\"] !== undefined || this.state.fieldValue[\"PlaceOfWork\"] !== \"\" && this.state.fieldValue[\"PlaceOfWork\"] !== undefined || this.state.fieldValue[\"Wage\"] !== \"\" && this.state.fieldValue[\"Wage\"] !== undefined || this.state.fieldValue[\"PensionAmount\"] !== \"\" && this.state.fieldValue[\"PensionAmount\"] !== undefined || this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined || this.state.fieldValue[\"Profession\"] !== \"\" && this.state.fieldValue[\"Profession\"] !== undefined || this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined || this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) {\n                      if (this.state.fieldValue[\"Good\"] !== false && this.state.fieldValue[\"Good\"] !== undefined && this.state.fieldValue[\"Good\"] !== \"False\" || this.state.fieldValue[\"Satisfactory\"] !== false && this.state.fieldValue[\"Satisfactory\"] !== undefined && this.state.fieldValue[\"Satisfactory\"] !== \"False\" || this.state.fieldValue[\"goUnsatisfactoryal1\"] !== false && this.state.fieldValue[\"Unsatisfactory\"] !== undefined && this.state.fieldValue[\"Unsatisfactory\"] !== \"False\" || this.state.fieldValue[\"SeparateApartment\"] !== false && this.state.fieldValue[\"SeparateApartment\"] !== undefined && this.state.fieldValue[\"SeparateApartment\"] !== \"False\" || this.state.fieldValue[\"OwnHouse\"] !== false && this.state.fieldValue[\"OwnHouse\"] !== undefined && this.state.fieldValue[\"OwnHouse\"] !== \"False\" || this.state.fieldValue[\"Dormitory\"] !== false && this.state.fieldValue[\"Dormitory\"] !== undefined && this.state.fieldValue[\"Dormitory\"] !== \"False\" || this.state.fieldValue[\"LivingAreaRemovable\"] !== false && this.state.fieldValue[\"LivingAreaRemovable\"] !== undefined && this.state.fieldValue[\"LivingAreaRemovable\"] !== \"False\" || this.state.fieldValue[\"NoOwnAccommodation\"] !== false && this.state.fieldValue[\"NoOwnAccommodation\"] !== undefined && this.state.fieldValue[\"NoOwnAccommodation\"] !== \"False\" || this.state.fieldValue[\"Additionally\"] !== false && this.state.fieldValue[\"Additionally\"] !== undefined && this.state.fieldValue[\"Additionally\"] !== \"False\") {\n                        if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\n                          if (this.state.taskType === \"showDetailedForm\" || this.state.taskType === \"showChildDetailedForm\") {\n                            if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\n                              if (this.state.fieldValue[\"ExamOfDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamOfDate\"] !== undefined) {\n                                this.checkForRegNoAct(commandJson, length); // this.sendFieldValues(commandJson)\n                              } else this.props.callErrorToast(\"Заполните поле \\\"Дата проведения экспертизы\\\"\");\n                            } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\");\n                          } else this.checkForRegNoAct(commandJson, length);\n                        } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\");\n                      } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Жилищно-бытовые условия\\\"\");\n                    } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Цель освидетельствования\\\"\");\n                  } else this.props.callErrorToast(\"Заполните поле \\\"Получает пенсию\\\"\");\n                } else this.props.callErrorToast(\"Заполните поле \\\"Место освидетельствования\\\"\");\n              } else this.props.callErrorToast(\"Заполните поле \\\"Освидетельствование\\\"\");\n            } else this.props.callErrorToast(\"Заполните поле \\\"Род деятельности\\\"\");\n          } else this.props.callErrorToast(\"Заполните поле \\\"Образование\\\"\");\n        } else this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\");\n      } else this.props.callErrorToast(\"Заполните поле \\\"Страна\\\"\"); // } else this.props.callErrorToast(\"Заполните поле \\\"№ акта по МСЭ\\\"\")\n\n    } // Child Medakt || Reg Form\n    else if (this.state.taskType === \"showChildRegForm\" || this.state.taskType === \"showChildDetailedForm\") {\n        // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\n        if (this.state.fieldValue[\"Country\"] !== null && this.state.fieldValue[\"Country\"] !== undefined) {\n          if (this.state.fieldValue[\"Region\"] !== null && this.state.fieldValue[\"Region\"] !== undefined) {\n            if (this.state.fieldValue[\"EducationAct\"] !== null && this.state.fieldValue[\"EducationAct\"] !== undefined) {\n              if (this.state.fieldValue[\"ExaminationPrRe\"] !== null && this.state.fieldValue[\"ExaminationPrRe\"] !== undefined) {\n                if (this.state.fieldValue[\"Examination4\"] !== null && this.state.fieldValue[\"Examination4\"] !== undefined) {\n                  if (this.state.fieldValue[\"PensionStatus\"] !== null && this.state.fieldValue[\"PensionStatus\"] !== undefined) {\n                    if (this.state.fieldValue[\"goal1\"] !== false && this.state.fieldValue[\"goal1\"] !== undefined && this.state.fieldValue[\"goal1\"] !== \"False\" || this.state.fieldValue[\"goal2\"] !== false && this.state.fieldValue[\"goal2\"] !== undefined && this.state.fieldValue[\"goal2\"] !== \"False\" || this.state.fieldValue[\"goal3\"] !== false && this.state.fieldValue[\"goal3\"] !== undefined && this.state.fieldValue[\"goal3\"] !== \"False\" || this.state.fieldValue[\"goal4\"] !== null && this.state.fieldValue[\"goal4\"] !== undefined && this.state.fieldValue[\"goal4\"] !== \"False\" || this.state.fieldValue[\"goal5\"] !== false && this.state.fieldValue[\"goal5\"] !== undefined && this.state.fieldValue[\"goal5\"] !== \"False\" || this.state.fieldValue[\"goal6\"] !== false && this.state.fieldValue[\"goal6\"] !== undefined && this.state.fieldValue[\"goal6\"] !== \"False\" || this.state.fieldValue[\"goalAnother\"] !== \"\" && this.state.fieldValue[\"goalAnother\"] !== undefined || this.state.fieldValue[\"PlaceOfWork\"] !== \"\" && this.state.fieldValue[\"PlaceOfWork\"] !== undefined || this.state.fieldValue[\"Wage\"] !== 0 && this.state.fieldValue[\"Wage\"] !== undefined || this.state.fieldValue[\"PensionAmount\"] !== 0 && this.state.fieldValue[\"PensionAmount\"] !== undefined || this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined || this.state.fieldValue[\"Profession\"] !== \"\" && this.state.fieldValue[\"Profession\"] !== undefined || this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined || this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) {\n                      if (this.state.taskType === \"showChildDetailedForm\") {\n                        if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\n                          if (this.state.fieldValue[\"ExamOfDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamOfDate\"] !== undefined) {\n                            this.checkForRegNoAct(commandJson, length); // this.sendFieldValues(commandJson)\n                          } else this.props.callErrorToast(\"Заполните поле \\\"Дата проведения экспертизы\\\"\");\n                        } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\");\n                      } else this.checkForRegNoAct(commandJson, length); // this.sendFieldValues(commandJson)\n\n                    } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Цель освидетельствования\\\"\");\n                  } else this.props.callErrorToast(\"Заполните поле \\\"Получает пенсию\\\"\");\n                } else this.props.callErrorToast(\"Заполните поле \\\"Место освидетельствования\\\"\");\n              } else this.props.callErrorToast(\"Заполните поле \\\"Освидетельствование\\\"\");\n            } else this.props.callErrorToast(\"Заполните поле \\\"Образование\\\"\");\n          } else this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\");\n        } else this.props.callErrorToast(\"Заполните поле \\\"Страна\\\"\"); // }else this.swAlert(\"Заполните поле \\\"№ акта по МСЭ\\\"\")\n\n      } else {\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      }\n  } // Collect id of all documents that are in the local state\n\n\n  getDocsIdToSign() {\n    var docsId = [];\n    docsId.push(this.state.selectedDoc.id);\n\n    if (this.state.docListIPR !== null) {\n      for (var i = 0; i < this.state.docListIPR.length; i++) {\n        docsId.push(this.state.docListIPR[i].id);\n      }\n    }\n\n    return docsId;\n  } // Return person full age\n\n\n  getPersonAge() {\n    for (let i = 0; i < this.state.person.attributes.length; i++) {\n      if (this.state.person.attributes[i].name === \"Date_of_Birth\") {\n        let birthday = new Date(this.parseDate(this.state.person.attributes[i].value));\n        let ageDifMs = Date.now() - birthday.getTime();\n        let ageDate = new Date(ageDifMs); // miliseconds from epoch\n\n        let fullAge = Math.abs(ageDate.getUTCFullYear() - 1970);\n        console.log(\"AGE\", fullAge);\n        return fullAge;\n      }\n    }\n  } // Return label of select by it's id from fieldValue\n\n\n  getEnumValueTextByValue(value) {\n    for (let i = 0; i < this.state.enumData.length; i++) {\n      for (let l = 0; l < this.state.enumData[i].data.length; l++) {\n        if (this.state.enumData[i].data[l].Id === value) {\n          return this.state.enumData[i].data[l].Text;\n        }\n      }\n    }\n  } // Set new organization ID to all document in local state, prepare them to transfer to another Mse\n\n\n  setOrgIdToMedakt() {\n    let fstate = this.state;\n    var newDocList = []; // console.log(\"DOCLIST CUR\" , fstate.docList)\n\n    for (let i = 0; i < fstate.docList.length; i++) {\n      newDocList.push({\n        id: fstate.docList[i].id,\n        attributes: []\n      });\n\n      for (let l = 0; l < fstate.docList[i].attributes.length; l++) {\n        if (fstate.docList[i].attributes[l].name === \"MseName\") {\n          let newItem = {\n            name: fstate.docList[i].attributes[l].name,\n            type: fstate.docList[i].attributes[l].type,\n            value: fstate.fieldValue[\"MseName\"],\n            enumValueText: this.getEnumValueTextByValue(this.state.fieldValue[\"MseName\"])\n          };\n          newDocList[i].attributes.push(newItem);\n        } else {\n          if (fstate.docList[i].attributes[l].name !== \"State\" && fstate.docList[i].attributes[l].value !== null) {\n            let newItem = {\n              name: fstate.docList[i].attributes[l].name,\n              type: fstate.docList[i].attributes[l].type,\n              value: fstate.docList[i].attributes[l].value\n            };\n            newDocList[i].attributes.push(newItem);\n          }\n        }\n      }\n    }\n\n    fstate.docList = newDocList;\n    var newDocListIPR = [];\n\n    for (let i = 0; i < fstate.docListIPR.length; i++) {\n      newDocListIPR.push({\n        id: fstate.docListIPR[i].id,\n        attributes: []\n      });\n\n      for (let l = 0; l < fstate.docListIPR[i].attributes.length; l++) {\n        if (fstate.docListIPR[i].attributes[l].name !== \"State\" && fstate.docListIPR[i].attributes[l].value !== null) {\n          var newItem = {\n            value: fstate.docListIPR[i].attributes[l].value,\n            name: fstate.docListIPR[i].attributes[l].name,\n            type: fstate.docListIPR[i].attributes[l].type\n          };\n          newDocListIPR[i].attributes.push(newItem);\n        }\n      }\n    }\n\n    fstate.docListIPR = newDocListIPR;\n    this.setState(fstate); // console.log(\"DOCLIST\", JSON.stringify(this.state.docList))\n    // console.log(\"DOCLISTIPR\", JSON.stringify(this.state.docListIPR))\n  } // Main button click handler\n\n\n  // Handler of amount of rows per page of grid form\n  rowsPageChange(size, page) {\n    console.log(\"Rows changed: \", size);\n    let filterDocument = {\n      attributes: this.getFieldValuesToSearch()\n    };\n    let commandJson = {\n      commandType: \"completeTask\",\n      session_id: this.state.session_id,\n      process_id: this.state.process_id,\n      taskID: this.state.taskID,\n      docDefId: this.state.Form.docDefId,\n      variables: {\n        userAction: {\n          value: \"findDocument\"\n        },\n        doc: {\n          value: JSON.stringify(filterDocument)\n        },\n        size: {\n          value: size\n        },\n        page: {\n          value: page\n        }\n      }\n    };\n    console.log(\"JSON Collected: \", commandJson);\n    this.sendFieldValues(commandJson);\n    this.clearTabData(this.state.process_id);\n  } // Returns Button component\n\n\n  createButton(button, index) {\n    if (button.name === \"downloadExcel\" || button.name === \"downloadPDF\") {\n      return React.createElement(Button, {\n        variant: \"outlined\",\n        name: button.name,\n        onClick: () => this.downloadDocument(button.name),\n        value: button.name,\n        style: {\n          margin: 3,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1736\n        },\n        __self: this\n      }, button.label);\n    } else if (button.name === \"attachDocument\") {\n      return React.createElement(Button, {\n        variant: \"outlined\",\n        name: button.name,\n        key: index,\n        onClick: () => this.showScanComponentClick(),\n        value: button.name,\n        style: {\n          margin: 3,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1753\n        },\n        __self: this\n      }, button.label);\n    } else return React.createElement(Button, {\n      variant: \"outlined\",\n      name: button.name,\n      key: index,\n      onClick: this.buttonClick,\n      style: {\n        margin: 3,\n        backgroundColor: button.backgroundColor,\n        height: 32,\n        fontSize: 12\n      },\n      value: button.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1770\n      },\n      __self: this\n    }, button.label);\n  }\n\n  getEnumValueText(enumName) {\n    for (let i = 0; i < this.state.selectedDoc.attributes.length; i++) {\n      if (this.state.selectedDoc.attributes[i].name === enumName) {\n        return this.state.selectedDoc.attributes[i].enumValueText;\n      }\n    }\n  } // Create sections with labels and call bodyBuilder function\n\n\n  sectionBuilder(section, index) {\n    return React.createElement(Table, {\n      size: \"small\",\n      key: index + \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1796\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1797\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1798\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      key: index = \"head\",\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: \"#D3D3FE\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1799\n      },\n      __self: this\n    }, section.label))), this.bodyBuilder(section));\n  } // Create body of each section and call contentBuilder function\n\n\n  bodyBuilder(section) {\n    return React.createElement(Table, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1818\n      },\n      __self: this\n    }, React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1819\n      },\n      __self: this\n    }, section.contents.map((contentItem, index) => React.createElement(TableRow, {\n      key: index,\n      style: {\n        height: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1821\n      },\n      __self: this\n    }, contentItem.name !== \"PersonDetailFormAddress\" && contentItem.name !== \"PersonData\" && contentItem.label !== \"\" && React.createElement(TableCell, {\n      key: index + \"cell1\",\n      align: \"left\",\n      style: {\n        width: \"40%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1824\n      },\n      __self: this\n    }, contentItem.label), React.createElement(TableCell, {\n      key: index + \"cell2\",\n      align: \"left\",\n      style: {\n        width: \"60%\",\n        height: this.state.Form.formName === \"TransferMedicalCertificateForm\" ? 100 : 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1831\n      },\n      __self: this\n    }, this.contentBuilder(contentItem))))));\n  } // Create component by it's type\n\n\n  contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\" || contentItem.type === \"BLOB\") {\n      // if (contentItem.name === \"RegNoAct\") {\n      //   return (\n      //     <FormControl>\n      //       <Input\n      //         name={contentItem.name}\n      //         value={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\n      //         // onChange={this.componentChange}\n      //         onBlur={this.regNoChange}\n      //         style={{ width: \"100%\", height: 30 }}\n      //         disabled={(this.props.formType === \"view\" || this.props.edit === false) ? true : false}\n      //         inputComponent={RegNoMask}\n      //       />\n      //     </FormControl>\n      //   )\n      // }\n      // else {\n      return React.createElement(TextField, {\n        multiline: true // onChange={this.componentChange}\n        // onBlur={this.handleChange}\n        // defaultValue={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\n        ,\n        onChange: this.handleChange,\n        value: this.state.fieldValue[contentItem.name] !== undefined ? this.state.fieldValue[contentItem.name] : \"\",\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1863\n        },\n        __self: this\n      }); // }\n    } else if (contentItem.type === \"Int\") {\n      return React.createElement(TextField, {\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        style: {\n          width: \"100%\"\n        } // defaultValue = {(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name]: \"\"}\n        ,\n        value: this.state.fieldValue[contentItem.name] !== undefined ? this.state.fieldValue[contentItem.name] : \"\",\n        onChange: this.componentIntChange // onBlur={this.handleChange}\n        ,\n        name: contentItem.name,\n        InputProps: {\n          inputComponent: NumberFormatCustom\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1879\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"DateTime\") {\n      return React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        locale: ruLocale,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1893\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        clearable: true,\n        cancelLabel: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\",\n        okLabel: \"\\u041E\\u043A\",\n        clearLabel: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\",\n        invalidDateMessage: \"\\u043D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\",\n        name: contentItem.name,\n        margin: \"small\",\n        format: \"dd.MM.yyyy\",\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        value: this.state.fieldValue[contentItem.name] !== undefined ? this.parseDate(this.state.fieldValue[contentItem.name]) : null,\n        onChange: date => this.handleDateTimeChange(date, contentItem.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1894\n        },\n        __self: this\n      }));\n    } else if (contentItem.type === \"Enum\") {\n      // console.log(\"EN DATA\", this.state.enumData)\n      let options = [];\n      options.push({\n        \"value\": null,\n        \"label\": null,\n        \"name\": contentItem.name\n      });\n\n      for (let i = 0; i < this.state.enumData.length; i++) {\n        if (contentItem.enumDef === this.state.enumData[i].enumDef) {\n          for (let l = 0; l < this.state.enumData[i].data.length; l++) {\n            options.push({\n              \"value\": this.state.enumData[i].data[l].Id,\n              \"label\": this.state.enumData[i].data[l].Text,\n              \"name\": contentItem.name\n            });\n          }\n\n          break;\n        }\n      } // console.log(\"OPTOPNS\", options)\n      // console.log(\"S OPTOPNS\", this.state.fieldValue[contentItem.name])\n\n\n      var selectedOption = {};\n\n      if (this.state.fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < options.length; i++) {\n          if (options[i].value === this.state.fieldValue[contentItem.name]) {\n            selectedOption = {\n              \"value\": options[i].value,\n              \"name\": options[i].name,\n              \"label\": options[i].label\n            };\n            break;\n          } else selectedOption = {\n            \"value\": null,\n            \"label\": null,\n            \"name\": contentItem.name\n          };\n        }\n      }\n\n      return React.createElement(Select, {\n        name: contentItem.name,\n        value: selectedOption,\n        onChange: this.handleSelectChange,\n        style: {\n          height: 30,\n          width: \"100%\"\n        },\n        options: options,\n        isDisabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1951\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"Currency\" || contentItem.type === \"Float\") {\n      return React.createElement(TextField, {\n        value: this.state.fieldValue[contentItem.name] ? this.state.fieldValue[contentItem.name] : \"\" // onChange = {this.componentChange}\n        ,\n        onBlur: this.handleChange,\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: NumberFormatCustom\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1963\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"Bool\") {\n      return React.createElement(Checkbox // key={this.getUUID()}\n      , {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: this.state.formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: this.handCheckboxChange,\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        checked: this.state.fieldValue[contentItem.name] === \"True\" || this.state.fieldValue[contentItem.name] === true ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1976\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"PersonData\") {\n      return React.createElement(Person, {\n        userId: this.state.userId,\n        userRole: this.state.userRole,\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        selectedDoc: this.state.person,\n        documentViewForm: this.state.documentViewForm,\n        taskID: this.state.taskID,\n        subDocument: true,\n        changeSubDocument: this.changeSubDocument,\n        formType: this.state.personFormType,\n        enumData: this.state.personEnumData // formType = {this.state.formName === \"AdultsIPRForm\" ? \"view\" : \"edit\"}\n        ,\n        docList: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1988\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"Address\") {\n      return React.createElement(Address, {\n        SOAT: this.state.SOAT // countryChange = {this.countryChange}\n        ,\n        regionChange: this.regionChange,\n        districtChange: this.districtChange,\n        subDistrictChange: this.subDistrictChange,\n        villageChange: this.villageChange,\n        handleChange: this.handleChange,\n        Country: this.state.fieldValue.Country,\n        Region: this.state.fieldValue.Region,\n        District: this.state.fieldValue.District,\n        subDistrict: this.state.fieldValue.subDistrict,\n        Village: this.state.fieldValue.Village,\n        ResidentialAddress: this.state.fieldValue.ResidentialAddress,\n        Phone: this.state.fieldValue.Phone,\n        formType: this.state.formType,\n        edit: contentItem.edit,\n        formName: this.state.Form.formName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2008\n        },\n        __self: this\n      });\n    }\n  } // custom allerts\n\n\n  swAlert(text) {\n    return swal({\n      text: text,\n      icon: \"warning\",\n      buttons: {\n        ok: \"Ок\"\n      } // dangerMode: true,\n\n    }).then(click => {\n      if (click === \"ok\") {\n        console.log(\"CLICK OK\", click);\n      }\n    });\n  }\n\n  render() {\n    try {\n      if (!this.state.Form) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2048\n        },\n        __self: this\n      }, \"No Form\");\n      if (this.state.buttons === undefined) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2049\n        },\n        __self: this\n      }, \"No Buttons\"); // console.log(\"ViewForm State\", this.state)\n      // console.log(\"ViewForm Props\", this.props)\n\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2053\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2054\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2055\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2056\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2057\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2058\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        style: {\n          maxHeight: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2059\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        style: {\n          fontSize: 16,\n          color: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2060\n        },\n        __self: this\n      }, this.state.Form.label)))), React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2064\n        },\n        __self: this\n      }, this.state.Form.sections.map((section, index) => {\n        return this.sectionBuilder(section, index);\n      })), React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2069\n        },\n        __self: this\n      }, this.state.buttons.map((button, index) => {\n        return this.createButton(button, index);\n      }))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2077\n        },\n        __self: this\n      }), this.state.docList !== null && this.state.docList !== \"null\" && this.state.docList !== undefined ? React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2081\n        },\n        __self: this\n      }, React.createElement(GridForm, {\n        key: \"grid form\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        userId: this.state.userId,\n        organizationId: this.state.organizationId,\n        userRole: this.state.userRole,\n        docList: this.state.docList,\n        size: this.state.size,\n        page: this.state.page,\n        Form: this.state.gridForm,\n        gridFormButtons: this.state.gridFormButtons,\n        rowsPageChange: this.rowsPageChange,\n        sendFieldValues: this.sendFieldValues,\n        SOAT: this.state.SOAT,\n        handleCloseCurrentTab: this.handleCloseCurrentTab,\n        clearTabData: this.clearTabData,\n        callSuccessToast: this.props.callSuccessToast,\n        callErrorToast: this.props.callErrorToast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2082\n        },\n        __self: this\n      })) : React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2105\n        },\n        __self: this\n      }), this.state.docListIPR !== null && this.state.docListIPR !== \"null\" && this.state.docListIPR !== undefined ? React.createElement(GridForm, {\n        key: \"grid form\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        userId: this.state.userId,\n        organizationId: this.state.organizationId,\n        userRole: this.state.userRole,\n        docListIPR: this.state.docListIPR,\n        size: this.state.size,\n        page: this.state.page,\n        Form: this.state.IPRGridForm // {this.state.gridForm.Form}\n        ,\n        medicalCardId: this.state.docId,\n        gridFormButtons: this.state.gridFormButtons,\n        rowsPageChange: this.rowsPageChange,\n        sendFieldValues: this.sendFieldValues,\n        SOAT: this.state.SOAT,\n        handleCloseCurrentTab: this.handleCloseCurrentTab,\n        clearTabData: this.clearTabData,\n        callSuccessToast: this.props.callSuccessToast,\n        callErrorToast: this.props.callErrorToast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2109\n        },\n        __self: this\n      }) : React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2133\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2135\n        },\n        __self: this\n      }), this.state.download === \"downloadExcel\" && React.createElement(Download, {\n        downloadType: this.state.download,\n        Form: this.state.Form,\n        fieldValue: this.state.fieldValue,\n        person: this.state.person,\n        SOAT: this.state.SOAT,\n        selectedDoc: this.state.selectedDoc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2137\n        },\n        __self: this\n      }), this.state.download === \"downloadPDF\" && React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 1,\n        id: \"TableToDownload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2148\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2149\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2150\n        },\n        __self: this\n      }, React.createElement(Download, {\n        downloadType: this.state.download,\n        Form: this.state.Form,\n        fieldValue: this.state.fieldValue,\n        person: this.state.person,\n        SOAT: this.state.SOAT,\n        selectedDoc: this.state.selectedDoc,\n        enumData: this.state.enumData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2151\n        },\n        __self: this\n      })))));\n    } catch (error) {\n      console.log(\"ERROR\", error);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2169\n        },\n        __self: this\n      }, \"error\");\n    }\n  }\n\n}\n\nexport default ViewForm;","map":{"version":3,"sources":["C:\\Users\\SERGO\\Desktop\\ismse\\src\\components\\ViewForm\\ViewForm.jsx"],"names":["React","Select","MaskedInput","NumberFormat","PropTypes","Grid","Card","Paper","TextField","Button","Checkbox","Table","TableHead","TableBody","TableRow","TableCell","Input","FormControl","MuiPickersUtilsProvider","DatePicker","TableToExcel","swal","DateFnsUtils","ruLocale","Person","Address","GridForm","Download","NumberFormatCustom","props","inputRef","onChange","other","values","target","value","propTypes","func","isRequired","tableToPdf","tableId","mywindow","window","open","document","write","getElementById","innerHTML","close","print","RegNoMask","ref","inputElement","ViewForm","Component","constructor","changeSubDocument","name","subDoc","state","subDocument","setState","console","log","componentChange","event","handleChange","fieldValue","newValue","regex","key","test","regNoChange","trim","componentIntChange","maxValue","substring","length","handleSelectChange","fstate","i","Form","sections","l","contents","edit","regionChange","districtChange","subDistrictChange","villageChange","handCheckboxChange","checked","buttonClick","currentTarget","createDocument","attributes","getFieldValues","commandJson","commandType","session_id","process_id","taskID","variables","userAction","doc","JSON","stringify","docDefId","userId","userRole","checkForEmptyFields","filterDocument","getFieldValuesToSearch","size","page","sendFieldValues","clearTabData","type","docDef","medicalCardDocDefId","editDocument","docId","updateDocument","age","getPersonAge","Adult","adult","filterIPR","docListIPR","callErrorToast","text","icon","buttons","yes","no","dangerMode","then","click","docsToSign","docIdList","getDocsIdToSign","stateTypeId","docsToRegister","undefined","states","newState","docsToSetState","Document","Object","keys","docList","adultsMedaktDocDefId","childMedaktDocDefId","setOrgIdToMedakt","medaktDocDefId","IPRDocDefId","IPRGridForm","medakts","IPR","downloadDocument","taskType","enumData","selectedDoc","parse","gridForm","gridFormButtons","organizationId","formType","person","personFormType","personEnumData","documentViewForm","download","SOAT","bind","parseDate","rowsPageChange","handleCloseCurrentTab","showScanComponentClick","pushNewBlobs","pushNewImages","blobs","images","componentDidUpdate","prevProps","setDataFromProps","convert","componentDidMount","formData","AdultsMedicalCart","id","personData","newDate","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","convertedDate","formName","docListData","er","checkForRegNoAct","callSuccessToast","RegNoAct","fetch","headers","method","body","response","stringResponse","swAlert","getUUID","uuidv1","require","handleDateTimeChange","date","getAddressData","code","countries","j","regions","k","districts","subDistricts","villages","m","push","section","item","subDocumentAttributes","subDocumentPersonAttributes","enumValueText","docsId","birthday","ageDifMs","now","getTime","ageDate","fullAge","Math","abs","getUTCFullYear","getEnumValueTextByValue","data","Id","Text","newDocList","newItem","newDocListIPR","createButton","button","index","margin","backgroundColor","height","fontSize","label","getEnumValueText","enumName","sectionBuilder","color","width","bodyBuilder","map","contentItem","contentBuilder","inputComponent","options","enumDef","selectedOption","maxWidth","Country","Region","District","subDistrict","Village","ResidentialAddress","Phone","ok","render","maxHeight","error"],"mappings":"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","sourcesContent":["// Import material and react components\r\nimport React from \"react\";\r\nimport Select from 'react-select';\r\nimport MaskedInput from 'react-text-mask';\r\nimport NumberFormat from 'react-number-format';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from '@material-ui/core/Card';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Input from '@material-ui/core/Input';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\r\n\r\n// Import libraries\r\nimport TableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\r\nimport swal from 'sweetalert' // https://sweetalert.js.org/guides/\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport ruLocale from \"date-fns/locale/ru\";\r\n\r\n// Import custom components\r\nimport Person from \"../Person/Person.jsx\";\r\nimport Address from \"../../components/Address/Address.jsx\";\r\nimport GridForm from \"../../components/GridForm/GridForm.jsx\";\r\nimport Download from \"../../components/Download/Download.jsx\";\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={values => {\r\n        onChange({\r\n          target: {\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      decimalSeparator={\",\"}\r\n      isNumericString\r\n    />\r\n  );\r\n}\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\nasync function tableToPdf(tableId) {\r\n  let mywindow = window.open('', 'PRINT', 'height=650, width=900, top=100, left=150');\r\n\r\n  mywindow.document.write(`<html><head><title>${'Экспорт в PDF'}</title>`);\r\n  mywindow.document.write('</head><body >');\r\n  mywindow.document.write(document.getElementById(tableId).innerHTML);\r\n  mywindow.document.write('</body></html>');\r\n\r\n  mywindow.document.close(); // necessary for IE >= 10\r\n  // mywindow.focus(); // necessary for IE >= 10*/\r\n\r\n  mywindow.print();\r\n  // mywindow.close();\r\n\r\n  return true;\r\n}\r\nfunction RegNoMask(props) {\r\n  const { inputRef, ...other } = props\r\n  return (\r\n    <MaskedInput\r\n      {...other}\r\n      ref={ref => {\r\n        inputRef(ref ? ref.inputElement : null)\r\n      }}\r\n      mask={[/[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/]}\r\n      placeholderChar={'\\u2000'}\r\n      showMask\r\n    />\r\n  )\r\n}\r\nclass ViewForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      process_id: this.props.process_id,\r\n      session_id: this.props.session_id,\r\n      taskID: this.props.taskID,\r\n      taskType: this.props.taskType,\r\n      fieldValue: {},\r\n      subDocument: {},\r\n      enumData: this.props.enumData,\r\n      Form: null,\r\n      selectedDoc: JSON.parse(this.props.selectedDoc),\r\n      docId: null,\r\n      buttons: this.props.buttons,\r\n      gridForm: null,\r\n      IPRGridForm: this.props.IPRGridForm,\r\n      gridFormButtons: null,\r\n      userId: this.props.userId,\r\n      userRole: this.props.userRole,\r\n      organizationId: this.props.organizationId,\r\n      formType: this.props.formType,\r\n      person: null,\r\n      personFormType: this.props.personFormType,\r\n      personEnumData: this.props.personEnumData,\r\n      documentViewForm: this.props.documentViewForm,\r\n      docList: null,\r\n      docListIPR: null,\r\n      download: null,\r\n      size: this.props.size,\r\n      page: this.props.page,\r\n      SOAT: null,\r\n      // regNoMask: []\r\n    }\r\n    this.sendFieldValues = this.sendFieldValues.bind(this)\r\n    this.buttonClick = this.buttonClick.bind(this)\r\n    this.parseDate = this.parseDate.bind(this)\r\n    this.changeSubDocument = this.changeSubDocument.bind(this)\r\n    this.rowsPageChange = this.rowsPageChange.bind(this)\r\n    this.handleCloseCurrentTab = this.handleCloseCurrentTab.bind(this)\r\n    this.clearTabData = this.clearTabData.bind(this)\r\n    this.showScanComponentClick = this.showScanComponentClick.bind(this)\r\n    this.pushNewBlobs = this.pushNewBlobs.bind(this)\r\n    this.pushNewImages = this.pushNewImages.bind(this)\r\n  }\r\n  handleCloseCurrentTab(process_id) {\r\n    this.props.handleCloseCurrentTab(process_id)\r\n  }\r\n  showScanComponentClick() {\r\n    this.props.showScanComponentClick()\r\n  }\r\n  sendFieldValues(commandJson) {\r\n    this.props.sendFieldValues(commandJson)\r\n  }\r\n  pushNewBlobs(blobs) {\r\n    this.props.pushNewBlobs(blobs)\r\n  }\r\n  pushNewImages(images) {\r\n    this.props.pushNewImages(images)\r\n  }\r\n  async componentDidUpdate(prevProps) {\r\n    if (!this.state.Form) {\r\n      this.setDataFromProps()\r\n    }\r\n    if (this.state.download !== null) {\r\n      if (this.state.download === \"downloadExcel\") {\r\n        TableToExcel.convert(document.getElementById(\"TableToDownload\"))\r\n        this.setState({ download: null })\r\n      }\r\n      else {\r\n        tableToPdf(\"TableToDownload\")\r\n        this.setState({ download: null })\r\n      }\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    console.log(\"VIEW FORM PROPS\", this.props)\r\n    this.setDataFromProps()\r\n  }\r\n  // Set data from props to local state\r\n  async setDataFromProps() {\r\n    try {\r\n      let fstate = this.state\r\n      fstate.Form = this.props.Form\r\n      fstate.gridForm = this.props.gridForm\r\n      if (this.props.selectedDoc !== undefined && this.props.selectedDoc !== \"null\" && this.props.selectedDoc !== null) {\r\n        var formData = JSON.parse(this.props.selectedDoc)\r\n        console.log(\"S DOC\", formData)\r\n        //SET PERSON DATA TO PERSON\r\n        if (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\") {\r\n          for (let i = 0; i < formData.attributes.length; i++) {\r\n            if (formData.attributes[i].name === \"AdultsMedicalCart\") {\r\n              for (let l = 0; l < formData.attributes[i].subDocument.attributes.length; l++) {\r\n                if (formData.attributes[i].subDocument.attributes[l].name === \"Person\") {\r\n                  fstate.person = formData.attributes[i].subDocument.attributes[l].subDocument\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          for (let i = 0; i < formData.attributes.length; i++) {\r\n            if (formData.attributes[i].name === \"Person\") {\r\n              // console.log(\"PERSON\", formData.attributes[i].subDocument)\r\n              fstate.person = formData.attributes[i].subDocument\r\n            }\r\n          }\r\n        }\r\n        // SET FIELD VALUES\r\n        for (let i = 0; i < formData.attributes.length; i++) {\r\n          if (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\") {\r\n            if (formData.attributes[i].name === \"AdultsMedicalCart\") {\r\n              fstate.fieldValue.AdultsMedicalCart = formData.attributes[i].subDocument.id\r\n              for (let l = 0; l < formData.attributes[i].subDocument.attributes.length; l++) {\r\n                if (formData.attributes[i].subDocument.attributes[l].value !== null) {\r\n                  fstate.fieldValue[formData.attributes[i].subDocument.attributes[l].name] = formData.attributes[i].subDocument.attributes[l].value\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              if (formData.attributes[i].value !== null) {\r\n                fstate.fieldValue[formData.attributes[i].name] = formData.attributes[i].value\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            if (formData.attributes[i].value !== null) {\r\n              fstate.fieldValue[formData.attributes[i].name] = formData.attributes[i].value\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // SET PERSON DATA INTO EMPTY IPR FORM\r\n      if (this.props.selectedDoc === \"null\" && this.props.person !== undefined && this.props.person !== \"null\") {\r\n        var personData = JSON.parse(this.props.person)\r\n        fstate.person = personData\r\n        fstate.fieldValue.Person = personData.id\r\n      }\r\n      if (this.props.docList !== undefined) {\r\n        fstate.docList = JSON.parse(this.props.docList)\r\n      }\r\n      if (this.props.docListIPR !== undefined) {\r\n        fstate.docListIPR = JSON.parse(this.props.docListIPR)\r\n      }\r\n      if (this.props.SOAT !== undefined) {\r\n        fstate.SOAT = this.props.SOAT\r\n      }\r\n      if (this.props.gridFormButtons !== undefined) {\r\n        fstate.gridFormButtons = this.props.gridFormButtons\r\n      }\r\n      if (this.props.docId !== null || this.props.docId !== \"null\" || this.props.docId !== undefined) {\r\n        fstate.docId = this.props.docId\r\n      }\r\n      this.setState(fstate)\r\n      // UPDAETE SOME DATA if nesessary\r\n      if (this.props.userAction === \"reexamination\") {\r\n        var newDate = new Date()\r\n        var dd = String(newDate.getDate()).padStart(2, '0')\r\n        var mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\r\n        var yyyy = newDate.getFullYear()\r\n        var convertedDate = String(dd + '.' + mm + '.' + yyyy)\r\n        fstate.fieldValue[\"Date\"] = convertedDate\r\n        fstate.fieldValue[\"RegNoAct\"] = null\r\n        fstate.fieldValue[\"ExaminationPrRe\"] = \"8d71baae-b834-42e5-be87-7f5637cc46d8\"\r\n        fstate.fieldValue[\"goal1\"] = false\r\n        fstate.fieldValue[\"goal2\"] = false\r\n        fstate.fieldValue[\"goal3\"] = false\r\n        fstate.fieldValue[\"goal4\"] = null\r\n        fstate.fieldValue[\"goal5\"] = false\r\n        fstate.fieldValue[\"goal6\"] = false\r\n        fstate.fieldValue[\"goalAnother\"] = null\r\n        fstate.fieldValue[\"DisabilityGroup\"] = null\r\n        // fstate.fieldValue[\"ExamDateFrom\"] = \"NaN.NaN.NaN\"\t\r\n        // fstate.fieldValue[\"ExamDateTo\"] = \"NaN.NaN.NaN\"\t\r\n        // fstate.fieldValue[\"ExamStartDate\"] = \"NaN.NaN.NaN\"\r\n        // fstate.fieldValue[\"ExamOfDate\"] = \"NaN.NaN.NaN\"\r\n        // fstate.fieldValue[\"ExamFinishDate\"] = \"NaN.NaN.NaN\"\r\n        fstate.fieldValue[\"ExamDateFrom\"] = undefined\r\n        fstate.fieldValue[\"ExamDateTo\"] = undefined\r\n        fstate.fieldValue[\"ExamStartDate\"] = undefined\r\n        fstate.fieldValue[\"ExamOfDate\"] = undefined\r\n        fstate.fieldValue[\"ExamFinishDate\"] = undefined\r\n        fstate.fieldValue[\"ReferenceNumber\"] = undefined\r\n      }\r\n      if ((this.props.Form.formName === \"AdultsIPRForm\" || this.props.Form.formName === \"ChildIPRForm\") && fstate.fieldValue.AdultsMedicalCart === undefined) {\r\n        fstate.fieldValue.AdultsMedicalCart = this.props.docId\r\n      }\r\n      if (fstate.fieldValue[\"Country\"] === undefined && this.props.SOAT !== null && this.props.SOAT !== undefined) {\r\n        fstate.fieldValue[\"Country\"] = \"4170000000000\"\r\n      }\r\n      // SET PERSON DATA IF IT\"S null\r\n      if (fstate.person === null && (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\")) {\r\n        if (this.state.fieldValue[\"IPRNo\"] === undefined) {\r\n          this.state.fieldValue[\"IPRNo\"] = this.state.fieldValue[\"No\"]\r\n        }\r\n        for (let l = 0; l < this.state.selectedDoc.attributes.length; l++) {\r\n          if (this.state.selectedDoc.attributes[l].name === \"Person\") {\r\n            fstate.person = this.state.selectedDoc.attributes[l].subDocument\r\n            // fstate.fieldValue.Person = this.state.selectedDoc.attributes[l].subDocument.id\r\n          }\r\n        }\r\n      }\r\n      if (fstate.person === null && this.props.person !== undefined && this.props.person !== \"null\" && this.props.person !== null) {\r\n        personData = JSON.parse(this.props.person)\r\n        fstate.person = personData\r\n        fstate.fieldValue.Person = personData.id\r\n      }\r\n      if ((fstate.person === null || this.props.person !== \"null\") &&\r\n        this.props.Form.formName === \"TransferMedicalCertificateForm\"\r\n        && this.props.docList !== \"[]\") {\r\n        var docListData = JSON.parse(this.props.docList)\r\n        // console.log(\"docListData\", docListData)\r\n        for (let l = 0; l < docListData[0].attributes.length; l++) {\r\n          if (docListData[0].attributes[l].name === \"Person\") {\r\n            fstate.person = docListData[0].attributes[l].subDocument\r\n          }\r\n        }\r\n      }\r\n      // DISABLE 2 BLOCKS OF FORM /FROM INCOMING DATA\r\n      if (fstate.fieldValue[\"Occupation\"] !== \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\r\n        for (let i = 0; i < fstate.Form.sections.length; i++) {\r\n          if (fstate.Form.sections[i].name === \"HowToDoJob\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = false\r\n              fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false\r\n            }\r\n          }\r\n          else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = false\r\n              fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // SET DATE OF REGISTRATION DEFAULT CURRENT DAY\r\n      if (this.props.taskType === \"showRegForm\" || this.props.taskType === \"showChildRegForm\" ||\r\n        this.props.taskType === \"showDetailedForm\" || this.props.taskType === \"showChildDetailedForm\") {\r\n        if (fstate.fieldValue[\"Date\"] === undefined) {\r\n          let newDate = new Date()\r\n          let dd = String(newDate.getDate()).padStart(2, '0')\r\n          let mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\r\n          let yyyy = newDate.getFullYear()\r\n          let convertedDate = String(dd + '.' + mm + '.' + yyyy)\r\n          fstate.fieldValue[\"Date\"] = convertedDate\r\n        }\r\n      }\r\n      if (fstate.fieldValue[\"MseName\"] === undefined &&\r\n        this.state.Form.formName !== \"TransferMedicalCertificateForm\" &&\r\n        this.state.Form.formName !== \"AdultsDetailedSearchForm\" &&\r\n        this.state.Form.formName !== \"AdultsIPRSearchForm\" &&\r\n        this.state.Form.formName !== \"ChildDetailedSearchForm\" &&\r\n        this.state.Form.formName !== \"AdultsIPRSearchForm\" &&\r\n        this.state.Form.formName !== \"AdultsRegistrationSearchForm\"\r\n      ) {\r\n        fstate.fieldValue[\"MseName\"] = fstate.organizationId\r\n      }\r\n      this.setState(fstate)\r\n    }\r\n    catch (er) {\r\n      console.log(\"ERROR\", er)\r\n    }\r\n  }\r\n  async downloadDocument(type) {\r\n    this.setState({ download: type })\r\n  }\r\n  // Delete close component and delete its data from hash stared in home component\r\n  clearTabData(process_id) {\r\n    this.props.clearTabData(process_id)\r\n  }\r\n  // Check field regNoAct if it's exist in database, it should be unique\r\n  async checkForRegNoAct(commandJson, length) {\r\n    if (this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined) {\r\n      this.props.callSuccessToast(\"Проверка № Медакта\")\r\n      var RegNoAct = { attributes: [{ name: \"RegNoAct\", value: this.state.fieldValue[\"RegNoAct\"], type: \"Text\" }] }\r\n      console.log(\"BODY\", RegNoAct)\r\n      await fetch(\"api/Document/FilterDocumentsByDefId?defId=\" + this.state.Form.docDefId + \"&size=3&page=1&userId=\" + this.state.userId, {\r\n        headers: {\r\n          \"Accept\": \"application/x-www-form-urlencoded\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(RegNoAct),\r\n        // mode: 'no-cors'\r\n      })\r\n        .then(response => {\r\n          response.text().then(stringResponse => {\r\n            var document = JSON.parse(stringResponse)\r\n            console.log(\"RESPONSE\", document)\r\n            // this.sendFieldValues(commandJson)\r\n            if (document.length <= length) {\r\n              console.log(\"LENGTH\", document.length, length)\r\n              this.sendFieldValues(commandJson)\r\n              this.clearTabData(this.state.process_id)\r\n              this.props.callSuccessToast(\"Проверка завершена!\")\r\n            }\r\n            else {\r\n              this.swAlert(\"Гражданин с таким № акта уже существует!\")\r\n            }\r\n          })\r\n        })\r\n    }\r\n    else { this.props.callErrorToast(\"Заполните поле \\\"№ акта по МСЭК\\\"\") }\r\n  }\r\n  // Handle changing of person document fields if it is enabled for input and set values to local state\r\n  changeSubDocument = (name, value) => {\r\n    let subDoc = this.state.subDocument\r\n    subDoc[name] = value\r\n    this.setState({ subDocument: subDoc })\r\n    console.log(\"Person Data\", name, value)\r\n  }\r\n  // Returns random id\r\n  getUUID() {\r\n    const uuidv1 = require(\"uuid/v1\")\r\n    return uuidv1()\r\n  }\r\n  // Handling component changing without render all state, made for optimization\r\n  componentChange = (event) => {\r\n    console.log(\"COM CHANGE\", event.target.name, event.target.value)\r\n  }\r\n  // Handling component changing with render state, used onBlur of component, made for optimization\r\n  handleChange = (event) => {\r\n    // console.log(\"HANDLE TEXT CHANGE\", event.target.name, event.target.value)\r\n    let fieldValue = this.state.fieldValue\r\n    if (event.target.name === \"RegNoAct\") {\r\n      let newValue = \"\"\r\n      let regex = /[0-9-№]/\r\n      for (let key in event.target.value) {\r\n        if (regex.test(event.target.value[key]) === true) {\r\n          newValue = newValue + event.target.value[key]\r\n        }\r\n      }\r\n      fieldValue[event.target.name] = newValue\r\n      console.log(\"newValue\", newValue, fieldValue)\r\n    }\r\n    else {\r\n      fieldValue[event.target.name] = event.target.value\r\n    }\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  // Controlling input in one field RegNoAct, create mask for inpur, field should accept only \"№\", \"-\" and all digits\r\n  regNoChange = (event) => {\r\n    // event.preventDefault()\r\n    var value = event.target.value.trim()\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = value\r\n    this.setState({ fieldValue: fieldValue })\r\n    // console.log(\"REGNOACT\", event.target.value)\r\n    // if(event.target.value === \"\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\"){\r\n    //   console.log(\"REGNO null\")\r\n    //   let fieldValue = this.state.fieldValue\r\n    //   fieldValue[event.target.name] = null\r\n    //   this.setState({fieldValue: fieldValue})\r\n    // }\r\n    // else{\r\n    //   for(let i=value.length; i>0; i--){\r\n    //     let lastChar = value.substring(i -1, i)\r\n    //     console.log(\"LAST\", lastChar)\r\n    //     if(lastChar !== '\\u2000'){\r\n    //       let fieldValue = this.state.fieldValue\r\n    //       fieldValue[event.target.name] = value\r\n    //       this.setState({fieldValue: fieldValue})\r\n    //       break\r\n    //     }\r\n    //     value = value.substring(0, value.length -1)\r\n    //   }\r\n    // }\r\n    // REGEX\r\n    // let regex = /[0-9-]/\r\n    // let lastChar = value.substring(value.length -1, value.length)\r\n    // console.log(\"LAST\", lastChar)\r\n    // // let chars = event.target.value.split('')\r\n    // // let char = chars.pop()\r\n\r\n    // if(!regex.test(lastChar)){\r\n    //   // value = chars.join('')\r\n    //   console.log(\"not valid\", lastChar)\r\n    // }\r\n    // else{\r\n    //   let fieldValue = this.state.fieldValue\r\n    //   fieldValue[event.target.name] = value\r\n    //   this.setState({fieldValue: fieldValue})\r\n    // }\r\n  }\r\n  // regNoKeyPress=(event)=>{\r\n  //   let x = event.charCode\r\n  //   console.log(\"CODE\", x)\r\n  // }\r\n  // getRegNoMask(){\r\n  //   let value = this.state.fieldValue[\"RegNoAct\"] !== undefined ? this.state.fieldValue[\"RegNoAct\"] : \"\"\r\n  //   let valueLength = value.length\r\n  //   console.log(\"VAL LEN\", valueLength)\r\n  //   let regex = /[1-9-]/\r\n  //   let mask = []\r\n  //   for(let i=0; i<valueLength; i++){\r\n  //     mask.push(regex)\r\n  //   }\r\n  //   // let mask=[/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/]\r\n  //   return mask\r\n  // }\r\n\r\n  // Handler that control input of components with type of integer\r\n  componentIntChange = (event) => {\r\n    // console.log(\"CHANGE\", event.target.name, event.target.value)\r\n    if (event.target.value > 2147483646) {\r\n      let value = event.target.value\r\n      let maxValue = value.substring(0, value.length - 1)\r\n      // console.log(\"SLICE\", value, maxValue)\r\n      let fieldValue = this.state.fieldValue\r\n      fieldValue[event.target.name] = maxValue\r\n      this.setState({ fieldValue: fieldValue })\r\n    }\r\n\r\n    // else{\r\n    //   let fieldValue = this.state.fieldValue\r\n    //   console.log(\"CHANGE\", event.target.name, event.target.value)\r\n    //   fieldValue[event.target.name] = event.target.value\r\n    //   this.setState({fieldValue: fieldValue})\r\n    // }\r\n  }\r\n  // Handler of select copmponet changes\r\n  handleSelectChange = (event) => {\r\n    let fstate = this.state\r\n    if (event.name === \"Occupation\") {\r\n      if (event.value === \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\r\n        for (let i = 0; i < fstate.Form.sections.length; i++) {\r\n          if (fstate.Form.sections[i].name === \"HowToDoJob\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = true\r\n            }\r\n          }\r\n          else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = true\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (event.value !== \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\r\n        for (let i = 0; i < fstate.Form.sections.length; i++) {\r\n          if (fstate.Form.sections[i].name === \"HowToDoJob\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = false\r\n              fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false\r\n            }\r\n          }\r\n          else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = false\r\n              fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    fstate.fieldValue[event.name] = event.value\r\n    this.setState(fstate)\r\n    console.log(`Option selected:`, event)\r\n  }\r\n  // 5 Hadlers that control changing of address data changing\r\n  // countryChange =(event) => {\r\n  //   let fieldValue = this.state.fieldValue\r\n  //   fieldValue[event.target.name] = event.target.value\r\n  //   fieldValue[\"Region\"] = null\r\n  //   fieldValue[\"District\"] = null\r\n  //   fieldValue[\"subDistrict\"] = null\r\n  //   fieldValue[\"Village\"] = null\r\n  //   console.log(\"Country selected\", event.target.name)\r\n  //   this.setState({fieldValue: fieldValue})\r\n  // }\r\n  regionChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    fieldValue[\"District\"] = null\r\n    fieldValue[\"subDistrict\"] = null\r\n    fieldValue[\"Village\"] = null\r\n    console.log(\"Region selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  districtChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    fieldValue[\"subDistrict\"] = null\r\n    fieldValue[\"Village\"] = null\r\n    console.log(\"District selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  subDistrictChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    fieldValue[\"Village\"] = null\r\n    console.log(\"District selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  villageChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    console.log(\"Village selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  // DateTime component change handler\r\n  handleDateTimeChange(date, name) {\r\n    let fieldValue = this.state.fieldValue\r\n    if (date !== null) {\r\n      var newDate = new Date(date)\r\n      var dd = String(newDate.getDate()).padStart(2, '0')\r\n      var mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\r\n      var yyyy = newDate.getFullYear()\r\n      var convertedDate = String(dd + '.' + mm + '.' + yyyy)\r\n      // console.log(\"CDATE\", convertedDate)\r\n      fieldValue[name] = convertedDate\r\n      this.setState({ fieldValue: fieldValue })\r\n    }\r\n    else {\r\n      fieldValue[name] = undefined\r\n      this.setState({ fieldValue: fieldValue })\r\n    }\r\n\r\n  }\r\n  // Convert date to approptiate format\r\n  parseDate(date) {\r\n    if (date !== undefined) {\r\n      var dd = date.substring(0, 2)\r\n      var mm = date.substring(3, 5)\r\n      var yyyy = date.substring(6, 10)\r\n      var convertedDate = String(yyyy + '-' + mm + '-' + dd)\r\n      var newDate = new Date(convertedDate) // \"2020-01-26\"\r\n      dd = String(newDate.getDate()).padStart(2, '0')\r\n      mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\r\n      yyyy = newDate.getFullYear()\r\n      convertedDate = yyyy + '-' + mm + '-' + dd\r\n    }\r\n    // console.log(\"DATE\", convertedDate)\r\n    return convertedDate\r\n  }\r\n  handCheckboxChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.checked\r\n    this.setState({ fieldValue: fieldValue })\r\n    // console.log(\"new checkbox status\", this.state.fieldValue[event.target.name])\r\n  }\r\n  // Get name of address by its code\r\n  getAddressData(code) {\r\n    for (var i = 0; i < this.state.SOAT.countries.length; i++) {\r\n      if (code === this.state.SOAT.countries[i].code) {\r\n        return this.state.SOAT.countries[i].name\r\n      }\r\n      else {\r\n        for (var j = 0; j < this.state.SOAT.countries[i].regions.length; j++) {\r\n          if (code === this.state.SOAT.countries[i].regions[j].code) {\r\n            return this.state.SOAT.countries[i].regions[j].name\r\n          }\r\n          else {\r\n            for (var k = 0; k < this.state.SOAT.countries[i].regions[j].districts.length; k++) {\r\n              if (code === this.state.SOAT.countries[i].regions[j].districts[k].code) {\r\n                return this.state.SOAT.countries[i].regions[j].districts[k].name\r\n              }\r\n              else {\r\n                if (this.state.SOAT.countries[i].regions[j].districts[k].subDistricts !== undefined) {\r\n                  for (var l = 0; l < this.state.SOAT.countries[i].regions[j].districts[k].subDistricts.length; l++) {\r\n                    if (code === this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].code) {\r\n                      return this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].name\r\n                    }\r\n                    else {\r\n                      if (this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages !== undefined) {\r\n                        for (var m = 0; m < this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages.length; m++) {\r\n                          if (code === this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages[m].code) {\r\n                            return this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages[m].name\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Collecting all field values and return as attributes\r\n  getFieldValues() {\r\n    var attributes = []\r\n    if (this.state.taskType === \"showIPRForm\" || this.state.taskType === \"showChildIPRForm\") {\r\n      console.log(\"IPR FORM\")\r\n      for (var key in this.state.fieldValue) {\r\n        if (key === \"AdultsMedicalCart\") {\r\n          attributes.push({\r\n            name: \"AdultsMedicalCart\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Doc\",\r\n          })\r\n        }\r\n        else if (key === \"IPRNo\") {\r\n          attributes.push({\r\n            name: \"IPRNo\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else {\r\n          for (var section = 0; section < this.state.Form.sections.length; section++) {\r\n            for (var item = 0; item < this.state.Form.sections[section].contents.length; item++) {\r\n              if (key === this.state.Form.sections[section].contents[item].name) {\r\n                if (this.state.Form.sections[section].contents[item].edit === true) {\r\n                  attributes.push({\r\n                    name: this.state.Form.sections[section].contents[item].name,\r\n                    value: this.state.fieldValue[key],\r\n                    type: this.state.Form.sections[section].contents[item].type,\r\n                  })\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else if (this.state.taskType === \"showIPRSearchForm\" || this.state.taskType === \"showChildIPRSearchForm\") {\r\n      var subDocumentAttributes = []\r\n      for (key in this.state.fieldValue) {\r\n        if (this.state.fieldValue[key] !== null && this.state.fieldValue[key] !== \"\") {\r\n          if (key === \"Country\") {\r\n            subDocumentAttributes.push({\r\n              name: \"Country\",\r\n              value: this.state.fieldValue[key],\r\n              type: \"Text\",\r\n            })\r\n          }\r\n          else if (key === \"Region\") {\r\n            subDocumentAttributes.push({\r\n              name: \"Region\",\r\n              value: this.state.fieldValue[key],\r\n              type: \"Text\",\r\n            })\r\n          }\r\n          else if (key === \"District\") {\r\n            subDocumentAttributes.push({\r\n              name: \"District\",\r\n              value: this.state.fieldValue[key],\r\n              type: \"Text\",\r\n            })\r\n          }\r\n        }\r\n        for (let section = 0; section < this.state.Form.sections.length; section++) {\r\n          for (let item = 0; item < this.state.Form.sections[section].contents.length; item++) {\r\n            if (key === this.state.Form.sections[section].contents[item].name) {\r\n              subDocumentAttributes.push({\r\n                name: this.state.Form.sections[section].contents[item].name,\r\n                value: this.state.fieldValue[key],\r\n                type: this.state.Form.sections[section].contents[item].type,\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n      attributes.push({\r\n        name: \"AdultsMedicalCart\",\r\n        type: \"Doc\",\r\n        docDef: this.state.Form.medicalCardDocDefId,\r\n        \"subDocument\": {\r\n          \"attributes\": subDocumentAttributes\r\n        }\r\n      })\r\n      if (Object.keys(this.state.subDocument).length !== 0) {\r\n        var subDocumentPersonAttributes = []\r\n        for (var key in this.state.subDocument) {\r\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\r\n            if (key === this.state.documentViewForm.attributes[i].name) {\r\n              subDocumentPersonAttributes.push({\r\n                name: this.state.documentViewForm.attributes[i].name,\r\n                value: this.state.subDocument[key],\r\n                type: this.state.documentViewForm.attributes[i].type,\r\n              })\r\n              console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key])\r\n            }\r\n          }\r\n        }\r\n        attributes.subDocumentAttributes.push({\r\n          name: \"Person\",\r\n          type: \"Doc\",\r\n          docDef: this.state.documentViewForm.docDefId,\r\n          \"subDocument\": {\r\n            \"attributes\": subDocumentPersonAttributes\r\n          }\r\n        })\r\n      }\r\n      console.log(\"IPRATRS\", attributes)\r\n    }\r\n    else {\r\n      // console.log(\"Fiel Values\", this.state.fieldValue)\r\n      for (key in this.state.fieldValue) {\r\n        if (key === \"Country\") {\r\n          attributes.push({\r\n            name: \"Country\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Region\") {\r\n          attributes.push({\r\n            name: \"Region\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"District\") {\r\n          attributes.push({\r\n            name: \"District\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"subDistrict\") {\r\n          attributes.push({\r\n            name: \"subDistrict\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Village\") {\r\n          attributes.push({\r\n            name: \"Village\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"ResidentialAddress\") {\r\n          attributes.push({\r\n            name: \"ResidentialAddress\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Phone\") {\r\n          attributes.push({\r\n            name: \"Phone\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Person\") {\r\n          attributes.push({\r\n            name: \"Person\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Doc\",\r\n          })\r\n        }\r\n\r\n        else {\r\n          for (section = 0; section < this.state.Form.sections.length; section++) {\r\n            for (item = 0; item < this.state.Form.sections[section].contents.length; item++) {\r\n              if (key === this.state.Form.sections[section].contents[item].name) {\r\n                attributes.push({\r\n                  name: this.state.Form.sections[section].contents[item].name,\r\n                  value: this.state.fieldValue[key],\r\n                  type: this.state.Form.sections[section].contents[item].type\r\n                })\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (Object.keys(this.state.subDocument).length !== 0) {\r\n        subDocumentAttributes = []\r\n        for (key in this.state.subDocument) {\r\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\r\n            if (key === this.state.documentViewForm.attributes[i].name) {\r\n              subDocumentAttributes.push({\r\n                name: this.state.documentViewForm.attributes[i].name,\r\n                value: this.state.subDocument[key],\r\n                type: this.state.documentViewForm.attributes[i].type,\r\n              })\r\n              console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key])\r\n            }\r\n          }\r\n        }\r\n        attributes.push({\r\n          name: \"Person\",\r\n          type: \"Doc\",\r\n          docDef: this.state.documentViewForm.docDefId,\r\n          \"subDocument\": {\r\n            \"attributes\": subDocumentAttributes\r\n          }\r\n        })\r\n      }\r\n    }\r\n    // console.log(\"ATTR\", attributes)\r\n    return attributes\r\n  }\r\n  getFieldValuesToSearch() {\r\n    var attributes = []\r\n    for (var key in this.state.fieldValue) {\r\n      if (this.state.fieldValue[key] !== null && this.state.fieldValue[key] !== \"\") { //&& this.state.fieldValue[key] !== \"NaN.NaN.NaN\"\r\n        if (key === \"Country\") {\r\n          attributes.push({\r\n            name: \"Country\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Region\") {\r\n          attributes.push({\r\n            name: \"Region\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"District\") {\r\n          attributes.push({\r\n            name: \"District\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"subDistrict\") {\r\n          attributes.push({\r\n            name: \"subDistrict\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Village\") {\r\n          attributes.push({\r\n            name: \"Village\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"ResidentialAddress\") {\r\n          attributes.push({\r\n            name: \"ResidentialAddress\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Phone\") {\r\n          attributes.push({\r\n            name: \"Phone\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Person\") {\r\n          attributes.push({\r\n            name: \"Person\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Doc\",\r\n          })\r\n        }\r\n\r\n        else {\r\n          for (var section = 0; section < this.state.Form.sections.length; section++) {\r\n            for (var item = 0; item < this.state.Form.sections[section].contents.length; item++) {\r\n              if (key === this.state.Form.sections[section].contents[item].name) {\r\n                attributes.push({\r\n                  name: this.state.Form.sections[section].contents[item].name,\r\n                  value: this.state.fieldValue[key],\r\n                  type: this.state.Form.sections[section].contents[item].type\r\n                })\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (Object.keys(this.state.subDocument).length !== 0) {\r\n      var subDocumentAttributes = []\r\n      for (key in this.state.subDocument) {\r\n        if (this.state.subDocument[key] !== null && this.state.subDocument[key] !== \"\") { //&& this.state.subDocument[key] !== \"NaN.NaN.NaN\"\r\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\r\n            if (key === this.state.documentViewForm.attributes[i].name) {\r\n              subDocumentAttributes.push({\r\n                name: this.state.documentViewForm.attributes[i].name,\r\n                value: this.state.subDocument[key],\r\n                type: this.state.documentViewForm.attributes[i].type,\r\n              })\r\n              // console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key])\r\n            }\r\n          }\r\n        }\r\n      }\r\n      attributes.push({\r\n        name: \"Person\",\r\n        type: \"Doc\",\r\n        docDef: this.state.documentViewForm.docDefId,\r\n        \"subDocument\": {\r\n          \"attributes\": subDocumentAttributes\r\n        }\r\n      })\r\n    }\r\n    return attributes\r\n  }\r\n  checkForEmptyFields(commandJson, length) {\r\n    //  Adulds Medakt || Reg Form\r\n    if (this.state.taskType === \"showRegForm\" || this.state.taskType === \"showDetailedForm\") {\r\n      // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\r\n      if (this.state.fieldValue[\"Country\"] !== null && this.state.fieldValue[\"Country\"] !== undefined) {\r\n        if (this.state.fieldValue[\"Region\"] !== null && this.state.fieldValue[\"Region\"] !== undefined) {\r\n          if (this.state.fieldValue[\"EducationAct\"] !== null && this.state.fieldValue[\"EducationAct\"] !== undefined) {\r\n            if (this.state.fieldValue[\"Occupation\"] !== null && this.state.fieldValue[\"Occupation\"] !== undefined) {\r\n              if (this.state.fieldValue[\"ExaminationPrRe\"] !== null && this.state.fieldValue[\"ExaminationPrRe\"] !== undefined) {\r\n                if (this.state.fieldValue[\"ExaminationPlace\"] !== null && this.state.fieldValue[\"ExaminationPlace\"] !== undefined) {\r\n                  if (this.state.fieldValue[\"PensionStatus\"] !== null && this.state.fieldValue[\"PensionStatus\"] !== undefined) {\r\n                    if (\r\n                      (this.state.fieldValue[\"goal1\"] !== false && this.state.fieldValue[\"goal1\"] !== undefined && this.state.fieldValue[\"goal1\"] !== \"False\") ||\r\n                      (this.state.fieldValue[\"goal2\"] !== false && this.state.fieldValue[\"goal2\"] !== undefined && this.state.fieldValue[\"goal2\"] !== \"False\") ||\r\n                      (this.state.fieldValue[\"goal3\"] !== false && this.state.fieldValue[\"goal3\"] !== undefined && this.state.fieldValue[\"goal3\"] !== \"False\") ||\r\n                      (this.state.fieldValue[\"goal4\"] !== null && this.state.fieldValue[\"goal4\"] !== undefined && this.state.fieldValue[\"goal4\"] !== \"False\") ||\r\n                      (this.state.fieldValue[\"goal5\"] !== false && this.state.fieldValue[\"goal5\"] !== undefined && this.state.fieldValue[\"goal5\"] !== \"False\") ||\r\n                      (this.state.fieldValue[\"goal6\"] !== false && this.state.fieldValue[\"goal6\"] !== undefined && this.state.fieldValue[\"goal6\"] !== \"False\") ||\r\n                      (this.state.fieldValue[\"goalAnother\"] !== \"\" && this.state.fieldValue[\"goalAnother\"] !== undefined) ||\r\n                      (this.state.fieldValue[\"PlaceOfWork\"] !== \"\" && this.state.fieldValue[\"PlaceOfWork\"] !== undefined) ||\r\n                      (this.state.fieldValue[\"Wage\"] !== \"\" && this.state.fieldValue[\"Wage\"] !== undefined) ||\r\n                      (this.state.fieldValue[\"PensionAmount\"] !== \"\" && this.state.fieldValue[\"PensionAmount\"] !== undefined) ||\r\n                      (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\r\n                      (this.state.fieldValue[\"Profession\"] !== \"\" && this.state.fieldValue[\"Profession\"] !== undefined) ||\r\n                      (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\r\n                      (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined)\r\n                    ) {\r\n                      if (\r\n                        (this.state.fieldValue[\"Good\"] !== false && this.state.fieldValue[\"Good\"] !== undefined && this.state.fieldValue[\"Good\"] !== \"False\") ||\r\n                        (this.state.fieldValue[\"Satisfactory\"] !== false && this.state.fieldValue[\"Satisfactory\"] !== undefined && this.state.fieldValue[\"Satisfactory\"] !== \"False\") ||\r\n                        (this.state.fieldValue[\"goUnsatisfactoryal1\"] !== false && this.state.fieldValue[\"Unsatisfactory\"] !== undefined && this.state.fieldValue[\"Unsatisfactory\"] !== \"False\") ||\r\n                        (this.state.fieldValue[\"SeparateApartment\"] !== false && this.state.fieldValue[\"SeparateApartment\"] !== undefined && this.state.fieldValue[\"SeparateApartment\"] !== \"False\") ||\r\n                        (this.state.fieldValue[\"OwnHouse\"] !== false && this.state.fieldValue[\"OwnHouse\"] !== undefined && this.state.fieldValue[\"OwnHouse\"] !== \"False\") ||\r\n                        (this.state.fieldValue[\"Dormitory\"] !== false && this.state.fieldValue[\"Dormitory\"] !== undefined && this.state.fieldValue[\"Dormitory\"] !== \"False\") ||\r\n                        (this.state.fieldValue[\"LivingAreaRemovable\"] !== false && this.state.fieldValue[\"LivingAreaRemovable\"] !== undefined && this.state.fieldValue[\"LivingAreaRemovable\"] !== \"False\") ||\r\n                        (this.state.fieldValue[\"NoOwnAccommodation\"] !== false && this.state.fieldValue[\"NoOwnAccommodation\"] !== undefined && this.state.fieldValue[\"NoOwnAccommodation\"] !== \"False\") ||\r\n                        (this.state.fieldValue[\"Additionally\"] !== false && this.state.fieldValue[\"Additionally\"] !== undefined && this.state.fieldValue[\"Additionally\"] !== \"False\")\r\n                      ) {\r\n                        if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\r\n                          if (this.state.taskType === \"showDetailedForm\" || this.state.taskType === \"showChildDetailedForm\") {\r\n                            if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\r\n                              if (this.state.fieldValue[\"ExamOfDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamOfDate\"] !== undefined) {\r\n                                this.checkForRegNoAct(commandJson, length)\r\n                                // this.sendFieldValues(commandJson)\r\n                              } else this.props.callErrorToast(\"Заполните поле \\\"Дата проведения экспертизы\\\"\")\r\n                            } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\r\n                          } else this.checkForRegNoAct(commandJson, length)\r\n                        } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\r\n                      } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Жилищно-бытовые условия\\\"\")\r\n                    } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Цель освидетельствования\\\"\")\r\n                  } else this.props.callErrorToast(\"Заполните поле \\\"Получает пенсию\\\"\")\r\n                } else this.props.callErrorToast(\"Заполните поле \\\"Место освидетельствования\\\"\")\r\n              } else this.props.callErrorToast(\"Заполните поле \\\"Освидетельствование\\\"\")\r\n            } else this.props.callErrorToast(\"Заполните поле \\\"Род деятельности\\\"\")\r\n          } else this.props.callErrorToast(\"Заполните поле \\\"Образование\\\"\")\r\n        } else this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\")\r\n      } else this.props.callErrorToast(\"Заполните поле \\\"Страна\\\"\")\r\n      // } else this.props.callErrorToast(\"Заполните поле \\\"№ акта по МСЭ\\\"\")\r\n    }\r\n    // Child Medakt || Reg Form\r\n    else if (this.state.taskType === \"showChildRegForm\" || this.state.taskType === \"showChildDetailedForm\") {\r\n      // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\r\n      if (this.state.fieldValue[\"Country\"] !== null && this.state.fieldValue[\"Country\"] !== undefined) {\r\n        if (this.state.fieldValue[\"Region\"] !== null && this.state.fieldValue[\"Region\"] !== undefined) {\r\n          if (this.state.fieldValue[\"EducationAct\"] !== null && this.state.fieldValue[\"EducationAct\"] !== undefined) {\r\n            if (this.state.fieldValue[\"ExaminationPrRe\"] !== null && this.state.fieldValue[\"ExaminationPrRe\"] !== undefined) {\r\n              if (this.state.fieldValue[\"Examination4\"] !== null && this.state.fieldValue[\"Examination4\"] !== undefined) {\r\n                if (this.state.fieldValue[\"PensionStatus\"] !== null && this.state.fieldValue[\"PensionStatus\"] !== undefined) {\r\n                  if (\r\n                    (this.state.fieldValue[\"goal1\"] !== false && this.state.fieldValue[\"goal1\"] !== undefined && this.state.fieldValue[\"goal1\"] !== \"False\") ||\r\n                    (this.state.fieldValue[\"goal2\"] !== false && this.state.fieldValue[\"goal2\"] !== undefined && this.state.fieldValue[\"goal2\"] !== \"False\") ||\r\n                    (this.state.fieldValue[\"goal3\"] !== false && this.state.fieldValue[\"goal3\"] !== undefined && this.state.fieldValue[\"goal3\"] !== \"False\") ||\r\n                    (this.state.fieldValue[\"goal4\"] !== null && this.state.fieldValue[\"goal4\"] !== undefined && this.state.fieldValue[\"goal4\"] !== \"False\") ||\r\n                    (this.state.fieldValue[\"goal5\"] !== false && this.state.fieldValue[\"goal5\"] !== undefined && this.state.fieldValue[\"goal5\"] !== \"False\") ||\r\n                    (this.state.fieldValue[\"goal6\"] !== false && this.state.fieldValue[\"goal6\"] !== undefined && this.state.fieldValue[\"goal6\"] !== \"False\") ||\r\n                    (this.state.fieldValue[\"goalAnother\"] !== \"\" && this.state.fieldValue[\"goalAnother\"] !== undefined) ||\r\n                    (this.state.fieldValue[\"PlaceOfWork\"] !== \"\" && this.state.fieldValue[\"PlaceOfWork\"] !== undefined) ||\r\n                    (this.state.fieldValue[\"Wage\"] !== 0 && this.state.fieldValue[\"Wage\"] !== undefined) ||\r\n                    (this.state.fieldValue[\"PensionAmount\"] !== 0 && this.state.fieldValue[\"PensionAmount\"] !== undefined) ||\r\n                    (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\r\n                    (this.state.fieldValue[\"Profession\"] !== \"\" && this.state.fieldValue[\"Profession\"] !== undefined) ||\r\n                    (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\r\n                    (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined)\r\n                  ) {\r\n                    if (this.state.taskType === \"showChildDetailedForm\") {\r\n                      if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\r\n                        if (this.state.fieldValue[\"ExamOfDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamOfDate\"] !== undefined) {\r\n                          this.checkForRegNoAct(commandJson, length)\r\n                          // this.sendFieldValues(commandJson)\r\n                        } else this.props.callErrorToast(\"Заполните поле \\\"Дата проведения экспертизы\\\"\")\r\n                      } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\r\n                    } else this.checkForRegNoAct(commandJson, length) // this.sendFieldValues(commandJson)\r\n                  } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Цель освидетельствования\\\"\")\r\n                } else this.props.callErrorToast(\"Заполните поле \\\"Получает пенсию\\\"\")\r\n              } else this.props.callErrorToast(\"Заполните поле \\\"Место освидетельствования\\\"\")\r\n            } else this.props.callErrorToast(\"Заполните поле \\\"Освидетельствование\\\"\")\r\n          } else this.props.callErrorToast(\"Заполните поле \\\"Образование\\\"\")\r\n        } else this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\")\r\n      } else this.props.callErrorToast(\"Заполните поле \\\"Страна\\\"\")\r\n      // }else this.swAlert(\"Заполните поле \\\"№ акта по МСЭ\\\"\")\r\n    }\r\n    else {\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n  }\r\n  // Collect id of all documents that are in the local state\r\n  getDocsIdToSign() {\r\n    var docsId = []\r\n    docsId.push(this.state.selectedDoc.id)\r\n    if (this.state.docListIPR !== null) {\r\n      for (var i = 0; i < this.state.docListIPR.length; i++) {\r\n        docsId.push(this.state.docListIPR[i].id)\r\n      }\r\n    }\r\n    return docsId\r\n  }\r\n  // Return person full age\r\n  getPersonAge() {\r\n    for (let i = 0; i < this.state.person.attributes.length; i++) {\r\n      if (this.state.person.attributes[i].name === \"Date_of_Birth\") {\r\n        let birthday = new Date(this.parseDate(this.state.person.attributes[i].value))\r\n        let ageDifMs = Date.now() - birthday.getTime()\r\n        let ageDate = new Date(ageDifMs); // miliseconds from epoch\r\n        let fullAge = Math.abs(ageDate.getUTCFullYear() - 1970)\r\n        console.log(\"AGE\", fullAge)\r\n        return fullAge\r\n      }\r\n    }\r\n  }\r\n  // Return label of select by it's id from fieldValue\r\n  getEnumValueTextByValue(value) {\r\n    for (let i = 0; i < this.state.enumData.length; i++) {\r\n      for (let l = 0; l < this.state.enumData[i].data.length; l++) {\r\n        if (this.state.enumData[i].data[l].Id === value) {\r\n          return this.state.enumData[i].data[l].Text\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Set new organization ID to all document in local state, prepare them to transfer to another Mse\r\n  setOrgIdToMedakt() {\r\n    let fstate = this.state\r\n    var newDocList = []\r\n    // console.log(\"DOCLIST CUR\" , fstate.docList)\r\n    for (let i = 0; i < fstate.docList.length; i++) {\r\n      newDocList.push({ id: fstate.docList[i].id, attributes: [] })\r\n      for (let l = 0; l < fstate.docList[i].attributes.length; l++) {\r\n        if (fstate.docList[i].attributes[l].name === \"MseName\") {\r\n          let newItem = {\r\n            name: fstate.docList[i].attributes[l].name,\r\n            type: fstate.docList[i].attributes[l].type,\r\n            value: fstate.fieldValue[\"MseName\"],\r\n            enumValueText: this.getEnumValueTextByValue(this.state.fieldValue[\"MseName\"]),\r\n          }\r\n          newDocList[i].attributes.push(newItem)\r\n        }\r\n        else {\r\n          if (fstate.docList[i].attributes[l].name !== \"State\" && fstate.docList[i].attributes[l].value !== null) {\r\n            let newItem = {\r\n              name: fstate.docList[i].attributes[l].name,\r\n              type: fstate.docList[i].attributes[l].type,\r\n              value: fstate.docList[i].attributes[l].value\r\n            }\r\n            newDocList[i].attributes.push(newItem)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    fstate.docList = newDocList\r\n    var newDocListIPR = []\r\n    for (let i = 0; i < fstate.docListIPR.length; i++) {\r\n      newDocListIPR.push({ id: fstate.docListIPR[i].id, attributes: [] })\r\n      for (let l = 0; l < fstate.docListIPR[i].attributes.length; l++) {\r\n        if (fstate.docListIPR[i].attributes[l].name !== \"State\" && fstate.docListIPR[i].attributes[l].value !== null) {\r\n          var newItem = {\r\n            value: fstate.docListIPR[i].attributes[l].value,\r\n            name: fstate.docListIPR[i].attributes[l].name,\r\n            type: fstate.docListIPR[i].attributes[l].type,\r\n          }\r\n          newDocListIPR[i].attributes.push(newItem)\r\n        }\r\n      }\r\n    }\r\n    fstate.docListIPR = newDocListIPR\r\n    this.setState(fstate)\r\n    // console.log(\"DOCLIST\", JSON.stringify(this.state.docList))\r\n    // console.log(\"DOCLISTIPR\", JSON.stringify(this.state.docListIPR))\r\n  }\r\n  // Main button click handler\r\n  buttonClick = (event) => {\r\n    if (event.currentTarget.name === \"createDocument\") {\r\n      let createDocument = { attributes: this.getFieldValues() }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"createDocument\" },\r\n          doc: { value: JSON.stringify(createDocument) },\r\n          docDefId: { value: this.state.Form.docDefId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole }\r\n        }\r\n      }\r\n      console.log(\"button createDocument: \", commandJson)\r\n      this.checkForEmptyFields(commandJson, 0)\r\n    }\r\n    else if (event.currentTarget.name === \"findDocument\") {\r\n      let filterDocument = { attributes: this.getFieldValuesToSearch() }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        docDefId: this.state.Form.docDefId,\r\n        variables: {\r\n          userAction: { value: \"findDocument\" },\r\n          doc: { value: JSON.stringify(filterDocument) },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole },\r\n          size: { value: this.state.size },\r\n          page: { value: 1 }\r\n        }\r\n      }\r\n      console.log(\"button findDocument: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (event.currentTarget.name === \"findIPR\") {\r\n      let filterDocument = {\r\n        attributes: [\r\n          {\r\n            name: \"AdultsMedicalCart\",\r\n            type: \"Doc\",\r\n            docDef: this.state.Form.medicalCardDocDefId,\r\n            subDocument: { attributes: this.getFieldValuesToSearch() }\r\n          }\r\n        ]\r\n\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        docDefId: this.state.Form.docDefId,\r\n        variables: {\r\n          userAction: { value: \"findDocument\" },\r\n          doc: { value: JSON.stringify(filterDocument) },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole },\r\n          size: { value: this.state.size },\r\n          page: { value: this.state.page }\r\n        }\r\n      }\r\n      console.log(\"button findIPR: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (event.currentTarget.name === \"editDocument\") {\r\n      let editDocument = { attributes: this.getFieldValues() }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"editDocument\" },\r\n          doc: { value: JSON.stringify(editDocument) },\r\n          docId: { value: this.state.docId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole }\r\n        }\r\n      }\r\n      console.log(\"button editDocument: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (event.currentTarget.name === \"reexamination\") {\r\n      let updateDocument = { attributes: this.getFieldValues() }\r\n      let age = this.getPersonAge()\r\n      let Adult = (age >= 18) ? \"True\" : \"False\"\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"reexamination\" },\r\n          doc: { value: JSON.stringify(updateDocument) },\r\n          docId: { value: this.state.docId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole },\r\n          adult: { value: Adult }\r\n        }\r\n      }\r\n      console.log(\"button reexamination: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (event.currentTarget.name === \"updateDocument\") {\r\n      let updateDocument = { attributes: this.getFieldValues() }\r\n      let filterIPR = {\r\n        attributes: [\r\n          {\r\n            name: \"AdultsMedicalCart\",\r\n            value: this.state.docId,\r\n            type: \"Doc\"\r\n          }\r\n        ]\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"updateDocument\" },\r\n          doc: { value: JSON.stringify(updateDocument) },\r\n          filterIPR: { value: JSON.stringify(filterIPR) },\r\n          docDefId: { value: this.state.Form.docDefId },\r\n          docId: { value: this.state.docId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole }\r\n        }\r\n      }\r\n      console.log(\"button updateDocument: \", commandJson)\r\n      this.checkForEmptyFields(commandJson, 1)\r\n      // this.sendFieldValues(commandJson)\r\n    }\r\n    else if (event.currentTarget.name === \"medakt\") {\r\n      // let updateDocument = {attributes: this.getFieldValues()}\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"medakt\" },\r\n          docId: { value: this.state.docId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole }\r\n        }\r\n      }\r\n      console.log(\"button Medakt: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (event.currentTarget.name === \"IPR\") {\r\n      if (this.state.docListIPR !== null) {\r\n        if (this.state.docListIPR.length > 0) {\r\n          this.props.callErrorToast(\"Данный Медакт уже имеет ИПР\")\r\n        }\r\n        else {\r\n          let commandJson =\r\n          {\r\n            commandType: \"completeTask\",\r\n            session_id: this.state.session_id,\r\n            process_id: this.state.process_id,\r\n            taskID: this.state.taskID,\r\n            variables: {\r\n              userAction: { value: \"ipr\" },\r\n              docId: { value: this.state.docId },\r\n              userId: { value: this.state.userId },\r\n              userRole: { value: this.state.userRole }\r\n            }\r\n          }\r\n          console.log(\"button IPR: \", commandJson)\r\n          // this.sendFieldValues(commandJson)\r\n          // this.clearTabData(this.state.process_id) \r\n        }\r\n      }\r\n\r\n    }\r\n    else if (event.currentTarget.name === \"deleteDocument\") {\r\n      swal({\r\n        text: \"Вы точно хотите удалить этот документ?\",\r\n        icon: \"warning\",\r\n        buttons: { yes: \"Да\", no: \"Нет\" },\r\n        dangerMode: true,\r\n      })\r\n        .then((click) => {\r\n          if (click === \"yes\") {\r\n            let commandJson =\r\n            {\r\n              commandType: \"completeTask\",\r\n              session_id: this.state.session_id,\r\n              process_id: this.state.process_id,\r\n              taskID: this.state.taskID,\r\n              variables: {\r\n                userAction: { value: \"deleteDocument\" },\r\n                docId: { value: this.state.docId },\r\n                userId: { value: this.state.userId },\r\n                userRole: { value: this.state.userRole }\r\n              }\r\n            }\r\n            console.log(\"button deleteDocument: \", commandJson)\r\n            this.sendFieldValues(commandJson)\r\n            this.clearTabData(this.state.process_id)\r\n          }\r\n        })\r\n    }\r\n    else if (event.currentTarget.name === \"signDocument\") {\r\n      let docsToSign = {\r\n        docIdList: this.getDocsIdToSign(),\r\n        stateTypeId: \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\"\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"signDocument\" },\r\n          doc: { value: JSON.stringify(docsToSign) }\r\n          // doc: {\r\n          //   value: {\r\n          //     docIdList: this.getDocsIdToSign(),\r\n          //     stateTypeId: \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\"\r\n          //   }\r\n          // }\r\n        }\r\n      }\r\n      console.log(\"button signDocument: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (event.currentTarget.name === \"registerDocument\") {\r\n      let docsToRegister = {\r\n        docIdList: this.getDocsIdToSign(),\r\n        stateTypeId: \"C1414D0C-417A-45AB-8B57-01D30A567F08\"\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"registerDocument\" },\r\n          doc: { value: JSON.stringify(docsToRegister) }\r\n        }\r\n      }\r\n      console.log(\"button registerDocument: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (event.currentTarget.name === \"showStatusSelectingForm\") {\r\n\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"showStatusSelectingForm\" },\r\n          doc: {\r\n            value: JSON.stringify({\r\n              docIdList: this.getDocsIdToSign(),\r\n              stateTypeId: \"\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n      console.log(\"button showStatusSelectingForm: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n\r\n    }\r\n    else if (event.currentTarget.name === \"setNewState\") {\r\n      if (this.state.fieldValue[\"StatusName\"] !== null && this.state.fieldValue[\"StatusName\"] !== undefined) {\r\n        let states = {\r\n          \"29a5cf05-30de-45b9-8526-69de5ea8ab12\": \"a9e360f0-eed1-4ff6-9ab8-e4255c62ce4a\", // умер\r\n          \"6a0f2699-eb53-4175-ac07-71deb84ae641\": \"10a96e4b-df5d-4f55-9d81-83f9e3e51de5\", // приостановлена инвалидность \r\n          \"3d2dd30f-3ab0-439f-a8dd-149431af67be\": \"d203372c-236b-4b3e-953a-11f09a4aca61\", // истекший срок инвалидности\r\n          \"b042e77b-9a12-47f1-a6d2-cc85e9029e61\": \"c9cfe461-e822-4f97-b34d-9312f8917fa9\", // переехал за переделами рт\r\n          \"c5f3563c-688f-44f1-9c01-70d190ae9edb\": \"1fa96e5b-908f-4c57-bc4a-b61423951081\", // перешел на возрастную пенсию\r\n        }\r\n        // console.log(\"ST\", this.state.fieldValue[\"StatesName\"]);\r\n        let commandJson =\r\n        {\r\n          commandType: \"completeTask\",\r\n          process_id: this.state.process_id,\r\n          session_id: this.state.session_id,\r\n          taskID: this.state.taskID,\r\n          variables: {\r\n            userAction: { value: \"setNewState\" },\r\n            newState: { value: states[this.state.fieldValue[\"StatusName\"]] }\r\n          }\r\n        }\r\n        console.log(\"button setNewState: \", commandJson)\r\n        this.sendFieldValues(commandJson)\r\n        this.clearTabData(this.state.process_id)\r\n      }\r\n      else { this.props.callErrorToast(\"Заполните поле \\\"Статус\\\"\") }\r\n    }\r\n    else if (event.currentTarget.name === \"setNewStateChild\") {\r\n      let states = {\r\n        \"adcb9640-51d0-4952-b196-27e87bb28d31\": \"10a96e4b-df5d-4f55-9d81-83f9e3e51de5\", // приостановлена инвалидность \r\n        \"a61fcb5d-e858-4183-b1cd-1fef00c6b4bc\": \"d203372c-236b-4b3e-953a-11f09a4aca61\", // истекший срок инвалидности\r\n        \"184e3fac-a6b6-4c60-89a8-517862ecd9c4\": \"c9cfe461-e822-4f97-b34d-9312f8917fa9\", // переехал за переделами рт          \r\n        \"05be1899-8d41-4dfd-ae72-41cba4aa9223\": \"a9e360f0-eed1-4ff6-9ab8-e4255c62ce4a\", // умер\r\n      }\r\n      // console.log(\"ST\", this.state.fieldValue[\"StatesName\"]);\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"setNewStateChild\" },\r\n          newState: { value: states[this.state.fieldValue[\"StatesName\"]] }\r\n        }\r\n      }\r\n      console.log(\"button setNewStateChild: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (event.currentTarget.name === \"setStateDied\") {\r\n      let docsToSetState = {\r\n        docIdList: this.getDocsIdToSign(),\r\n        stateTypeId: \"A9E360F0-EED1-4FF6-9AB8-E4255C62CE4A\"\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"setStateDied\" },\r\n          doc: { value: JSON.stringify(docsToSetState) }\r\n          // doc: {\r\n          //   value: {\r\n          //     docIdList: this.getDocsIdToSign(),\r\n          //     stateTypeId: \"A9E360F0-EED1-4FF6-9AB8-E4255C62CE4A\"\r\n          //   }\r\n          // }\r\n        }\r\n      }\r\n      console.log(\"button setStateDied: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (event.currentTarget.name === \"backToMedakt\") {\r\n      let Document = {\r\n        attributes: [\r\n          {\r\n            name: \"AdultsMedicalCart\",\r\n            value: this.state.fieldValue[\"AdultsMedicalCart\"],\r\n            type: \"Doc\"\r\n          }]\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"backToMedakt\" },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole },\r\n          docDefId: { value: this.state.Form.docDefId },\r\n          doc: { value: JSON.stringify(Document) },\r\n          docId: { value: this.state.fieldValue[\"AdultsMedicalCart\"] },\r\n          size: { value: 10 },\r\n          page: { value: 1 }\r\n        }\r\n      }\r\n      console.log(\"button backToMedakt: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (event.currentTarget.name === \"transferDocuments\") {\r\n      if (Object.keys(this.state.docList).length !== 0) {\r\n        var age = this.getPersonAge()\r\n        console.log(\"AGE\", age)\r\n        if (age >= 18) {\r\n          var docDefId = this.state.Form.adultsMedaktDocDefId\r\n        }\r\n        else if (age < 18) {\r\n          var docDefId = this.state.Form.childMedaktDocDefId\r\n        }\r\n        this.setOrgIdToMedakt()\r\n\r\n        let commandJson =\r\n        {\r\n          commandType: \"transferDocuments\",\r\n          session_id: this.state.session_id,\r\n          process_id: this.state.process_id,\r\n          taskID: this.state.taskID,\r\n          medaktDocDefId: docDefId,\r\n          IPRDocDefId: this.state.IPRGridForm.Form.docDefId,\r\n          medakts: JSON.stringify(this.state.docList),\r\n          IPR: JSON.stringify(this.state.docListIPR),\r\n          userId: this.state.userId,\r\n          userRole: this.state.userRole\r\n        }\r\n        if (this.state.fieldValue[\"MseName\"] !== null && this.state.fieldValue[\"MseName\"] !== undefined) {\r\n          console.log(\"button transfeDocuments: \", commandJson)\r\n          this.sendFieldValues(commandJson)\r\n          this.clearTabData(this.state.process_id)\r\n        }\r\n        else {\r\n          this.props.callErrorToast(\"Выберите МСЭК для передачи данных\")\r\n        }\r\n      }\r\n      else this.props.callErrorToast(\"Нет данных для передачи\")\r\n    }\r\n    else if (event.currentTarget.name === \"downloadMemo\") {\r\n      this.downloadDocument(\"downloadPDF\")\r\n    }\r\n    else if (event.currentTarget.name === \"viewRegForm\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"viewRegForm\" },\r\n          userId: { value: this.state.userId },\r\n          size: { value: 10 },\r\n          page: { value: 1 }\r\n        }\r\n      }\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (event.currentTarget.name === \"acceptComplaint\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"acceptComplaint\" },\r\n        }\r\n      }\r\n      console.log(\"button acceptComplaint: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (event.currentTarget.name === \"rejectComplaint\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"rejectComplaint\" },\r\n        }\r\n      }\r\n      console.log(\"button rejectComplaint: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (event.currentTarget.name === \"back\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"back\" },\r\n        }\r\n      }\r\n      console.log(\"button back: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (event.currentTarget.name === \"finish\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"finish\" },\r\n        }\r\n      }\r\n      console.log(\"button finish: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (event.currentTarget.name === \"cancel\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"cancel\" },\r\n        }\r\n      }\r\n      console.log(\"button cancel: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n  }\r\n  // Handler of amount of rows per page of grid form\r\n  rowsPageChange(size, page) {\r\n    console.log(\"Rows changed: \", size)\r\n    let filterDocument = { attributes: this.getFieldValuesToSearch() }\r\n    let commandJson =\r\n    {\r\n      commandType: \"completeTask\",\r\n      session_id: this.state.session_id,\r\n      process_id: this.state.process_id,\r\n      taskID: this.state.taskID,\r\n      docDefId: this.state.Form.docDefId,\r\n      variables: {\r\n        userAction: { value: \"findDocument\" },\r\n        doc: { value: JSON.stringify(filterDocument) },\r\n        size: { value: size },\r\n        page: { value: page }\r\n      }\r\n    }\r\n    console.log(\"JSON Collected: \", commandJson)\r\n    this.sendFieldValues(commandJson)\r\n    this.clearTabData(this.state.process_id)\r\n  }\r\n  // Returns Button component\r\n  createButton(button, index) {\r\n    if (button.name === \"downloadExcel\" || button.name === \"downloadPDF\") {\r\n      return (\r\n        <Button variant=\"outlined\"\r\n          name={button.name}\r\n          onClick={() => this.downloadDocument(button.name)}\r\n          value={button.name}\r\n          style={{\r\n            margin: 3,\r\n            backgroundColor: button.backgroundColor,\r\n            height: 32,\r\n            fontSize: 12\r\n          }}\r\n        >\r\n          {button.label}\r\n        </Button>\r\n      )\r\n    }\r\n    else if (button.name === \"attachDocument\") {\r\n      return (\r\n        <Button variant=\"outlined\"\r\n          name={button.name}\r\n          key={index}\r\n          onClick={() => this.showScanComponentClick()}\r\n          value={button.name}\r\n          style={{\r\n            margin: 3,\r\n            backgroundColor: button.backgroundColor,\r\n            height: 32,\r\n            fontSize: 12\r\n          }}\r\n        >\r\n          {button.label}\r\n        </Button>\r\n      )\r\n    }\r\n    else return (\r\n      <Button variant=\"outlined\"\r\n        name={button.name}\r\n        key={index}\r\n        onClick={this.buttonClick}\r\n        style={{\r\n          margin: 3,\r\n          backgroundColor: button.backgroundColor,\r\n          height: 32,\r\n          fontSize: 12\r\n        }}\r\n        value={button.name}\r\n      >\r\n        {button.label}\r\n      </Button>\r\n    )\r\n  }\r\n  getEnumValueText(enumName) {\r\n    for (let i = 0; i < this.state.selectedDoc.attributes.length; i++) {\r\n      if (this.state.selectedDoc.attributes[i].name === enumName) {\r\n        return this.state.selectedDoc.attributes[i].enumValueText\r\n      }\r\n    }\r\n  }\r\n  // Create sections with labels and call bodyBuilder function\r\n  sectionBuilder(section, index) {\r\n    return (\r\n      <Table size=\"small\" key={index + \"table\"}>\r\n        <TableHead>\r\n          <TableRow style={{ height: 30 }}>\r\n            <TableCell\r\n              key={index = \"head\"}\r\n              style={{\r\n                color: \"black\",\r\n                fontSize: 14,\r\n                backgroundColor: \"#D3D3FE\",\r\n                width: \"100%\"\r\n              }}>\r\n              {section.label}\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        {this.bodyBuilder(section)}\r\n      </Table>\r\n    )\r\n  }\r\n  // Create body of each section and call contentBuilder function\r\n  bodyBuilder(section) {\r\n    return (\r\n      <Table size=\"small\">\r\n        <TableBody>\r\n          {section.contents.map((contentItem, index) => (\r\n            <TableRow key={index} style={{ height: 30 }}>\r\n              {contentItem.name !== \"PersonDetailFormAddress\" && contentItem.name !== \"PersonData\" &&\r\n                contentItem.label !== \"\" &&\r\n                <TableCell\r\n                  key={index + \"cell1\"}\r\n                  align=\"left\"\r\n                  style={{ width: \"40%\" }}>\r\n                  {contentItem.label}\r\n                </TableCell>\r\n              }\r\n              <TableCell\r\n                key={index + \"cell2\"}\r\n                align=\"left\"\r\n                style={{ width: \"60%\", height: (this.state.Form.formName === \"TransferMedicalCertificateForm\") ? 100 : 30 }}\r\n              >{this.contentBuilder(contentItem)}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    )\r\n  }\r\n  // Create component by it's type\r\n  contentBuilder(contentItem) {\r\n    if (contentItem.type === \"Text\" || contentItem.type === \"BLOB\") {\r\n      // if (contentItem.name === \"RegNoAct\") {\r\n      //   return (\r\n      //     <FormControl>\r\n      //       <Input\r\n      //         name={contentItem.name}\r\n      //         value={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\r\n      //         // onChange={this.componentChange}\r\n      //         onBlur={this.regNoChange}\r\n      //         style={{ width: \"100%\", height: 30 }}\r\n      //         disabled={(this.props.formType === \"view\" || this.props.edit === false) ? true : false}\r\n      //         inputComponent={RegNoMask}\r\n      //       />\r\n      //     </FormControl>\r\n      //   )\r\n      // }\r\n      // else {\r\n      return (\r\n        <TextField\r\n          multiline\r\n          // onChange={this.componentChange}\r\n          // onBlur={this.handleChange}\r\n          // defaultValue={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\r\n          onChange={this.handleChange}\r\n          value={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\r\n          name={contentItem.name}\r\n          style={{ width: \"100%\" }}\r\n          disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n        />\r\n      )\r\n      // }\r\n    }\r\n    else if (contentItem.type === \"Int\") {\r\n      return (\r\n        <TextField\r\n          disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n          style={{ width: \"100%\" }}\r\n          // defaultValue = {(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name]: \"\"}\r\n          value={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\r\n          onChange={this.componentIntChange}\r\n          // onBlur={this.handleChange}\r\n          name={contentItem.name}\r\n          InputProps={{ inputComponent: NumberFormatCustom }}\r\n        />\r\n      )\r\n    }\r\n    else if (contentItem.type === \"DateTime\") {\r\n      return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\r\n          <DatePicker\r\n            clearable\r\n            cancelLabel=\"Отмена\"\r\n            okLabel=\"Ок\"\r\n            clearLabel=\"Очистить\"\r\n            invalidDateMessage=\"неверный формат\"\r\n            name={contentItem.name}\r\n            margin=\"small\"\r\n            format=\"dd.MM.yyyy\"\r\n            disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n            value={(this.state.fieldValue[contentItem.name] !== undefined) ? this.parseDate(this.state.fieldValue[contentItem.name]) : null}\r\n            onChange={date => this.handleDateTimeChange(date, contentItem.name)}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      )\r\n    }\r\n    else if (contentItem.type === \"Enum\") {\r\n      // console.log(\"EN DATA\", this.state.enumData)\r\n      let options = []\r\n      options.push({\r\n        \"value\": null,\r\n        \"label\": null,\r\n        \"name\": contentItem.name\r\n      })\r\n      for (let i = 0; i < this.state.enumData.length; i++) {\r\n        if (contentItem.enumDef === this.state.enumData[i].enumDef) {\r\n          for (let l = 0; l < this.state.enumData[i].data.length; l++) {\r\n            options.push({\r\n              \"value\": this.state.enumData[i].data[l].Id,\r\n              \"label\": this.state.enumData[i].data[l].Text,\r\n              \"name\": contentItem.name\r\n            })\r\n          }\r\n          break\r\n        }\r\n      }\r\n      // console.log(\"OPTOPNS\", options)\r\n      // console.log(\"S OPTOPNS\", this.state.fieldValue[contentItem.name])\r\n      var selectedOption = {}\r\n      if (this.state.fieldValue[contentItem.name] !== undefined) {\r\n        for (let i = 0; i < options.length; i++) {\r\n          if (options[i].value === this.state.fieldValue[contentItem.name]) {\r\n            selectedOption = {\r\n              \"value\": options[i].value,\r\n              \"name\": options[i].name,\r\n              \"label\": options[i].label\r\n            }\r\n            break\r\n          }\r\n          else selectedOption = {\r\n            \"value\": null,\r\n            \"label\": null,\r\n            \"name\": contentItem.name\r\n          }\r\n        }\r\n      }\r\n      return (\r\n        <Select\r\n          name={contentItem.name}\r\n          value={selectedOption}\r\n          onChange={this.handleSelectChange}\r\n          style={{ height: 30, width: \"100%\" }}\r\n          options={options}\r\n          isDisabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n        />\r\n      )\r\n    }\r\n    else if (contentItem.type === \"Currency\" || contentItem.type === \"Float\") {\r\n      return (\r\n        <TextField\r\n          value={this.state.fieldValue[contentItem.name] ? this.state.fieldValue[contentItem.name] : \"\"}\r\n          // onChange = {this.componentChange}\r\n          onBlur={this.handleChange}\r\n          name={contentItem.name}\r\n          style={{ width: \"100%\" }}\r\n          disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n          InputProps={{ inputComponent: NumberFormatCustom }}\r\n        />\r\n      )\r\n    }\r\n    else if (contentItem.type === \"Bool\") {\r\n      return (\r\n        <Checkbox\r\n          // key={this.getUUID()}\r\n          style={{ maxWidth: 20, height: 15, color: (this.state.formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\" }}\r\n          name={contentItem.name}\r\n          onChange={this.handCheckboxChange}\r\n          disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n          checked={(this.state.fieldValue[contentItem.name] === \"True\" || this.state.fieldValue[contentItem.name] === true) ? true : false}\r\n        />\r\n      )\r\n    }\r\n    else if (contentItem.type === \"PersonData\") {\r\n      return (\r\n        <Person\r\n          userId={this.state.userId}\r\n          userRole={this.state.userRole}\r\n          process_id={this.state.process_id}\r\n          session_id={this.state.session_id}\r\n          selectedDoc={this.state.person}\r\n          documentViewForm={this.state.documentViewForm}\r\n          taskID={this.state.taskID}\r\n          subDocument={true}\r\n          changeSubDocument={this.changeSubDocument}\r\n          formType={this.state.personFormType}\r\n          enumData={this.state.personEnumData}\r\n          // formType = {this.state.formName === \"AdultsIPRForm\" ? \"view\" : \"edit\"}\r\n          docList={null}\r\n        >\r\n        </Person>\r\n      )\r\n    }\r\n    else if (contentItem.type === \"Address\") {\r\n      return (\r\n        <Address\r\n          SOAT={this.state.SOAT}\r\n          // countryChange = {this.countryChange}\r\n          regionChange={this.regionChange}\r\n          districtChange={this.districtChange}\r\n          subDistrictChange={this.subDistrictChange}\r\n          villageChange={this.villageChange}\r\n          handleChange={this.handleChange}\r\n          Country={this.state.fieldValue.Country}\r\n          Region={this.state.fieldValue.Region}\r\n          District={this.state.fieldValue.District}\r\n          subDistrict={this.state.fieldValue.subDistrict}\r\n          Village={this.state.fieldValue.Village}\r\n          ResidentialAddress={this.state.fieldValue.ResidentialAddress}\r\n          Phone={this.state.fieldValue.Phone}\r\n          formType={this.state.formType}\r\n          edit={contentItem.edit}\r\n          formName={this.state.Form.formName}\r\n        />\r\n      )\r\n    }\r\n  }\r\n  // custom allerts\r\n  swAlert(text) {\r\n    return (\r\n      swal({\r\n        text: text,\r\n        icon: \"warning\",\r\n        buttons: { ok: \"Ок\" },\r\n        // dangerMode: true,\r\n      })\r\n        .then((click) => {\r\n          if (click === \"ok\") {\r\n            console.log(\"CLICK OK\", click)\r\n          }\r\n        })\r\n    )\r\n  }\r\n  render() {\r\n    try {\r\n      if (!this.state.Form) return <div>No Form</div>\r\n      if (this.state.buttons === undefined) return <div>No Buttons</div>\r\n      // console.log(\"ViewForm State\", this.state)\r\n      // console.log(\"ViewForm Props\", this.props)\r\n      return (\r\n        <Grid>\r\n          <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\r\n            <Grid item xs={10}>\r\n              <Paper>\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                  <TableHead>\r\n                    <TableRow style={{ maxHeight: 25 }}>\r\n                      <TableCell style={{ fontSize: 16, color: \"black\" }}>{this.state.Form.label}</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                </Grid>\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                  {this.state.Form.sections.map((section, index) => {\r\n                    return this.sectionBuilder(section, index)\r\n                  })}\r\n                </Grid>\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n                  {this.state.buttons.map((button, index) => {\r\n                    return this.createButton(button, index)\r\n                  })}\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <br></br>\r\n\r\n          {this.state.docList !== null && this.state.docList !== \"null\" &&\r\n            this.state.docList !== undefined ?\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n              <GridForm key=\"grid form\"\r\n                process_id={this.state.process_id}\r\n                session_id={this.state.session_id}\r\n                taskID={this.state.taskID}\r\n                userId={this.state.userId}\r\n                organizationId={this.state.organizationId}\r\n                userRole={this.state.userRole}\r\n                docList={this.state.docList}\r\n                size={this.state.size}\r\n                page={this.state.page}\r\n                Form={this.state.gridForm}\r\n                gridFormButtons={this.state.gridFormButtons}\r\n                rowsPageChange={this.rowsPageChange}\r\n                sendFieldValues={this.sendFieldValues}\r\n                SOAT={this.state.SOAT}\r\n                handleCloseCurrentTab={this.handleCloseCurrentTab}\r\n                clearTabData={this.clearTabData}\r\n                callSuccessToast={this.props.callSuccessToast}\r\n                callErrorToast={this.props.callErrorToast}\r\n              >\r\n              </GridForm>\r\n            </Grid>\r\n            :\r\n            <br></br>\r\n          }\r\n          {this.state.docListIPR !== null && this.state.docListIPR !== \"null\" &&\r\n            this.state.docListIPR !== undefined ?\r\n            <GridForm\r\n              key=\"grid form\"\r\n              process_id={this.state.process_id}\r\n              session_id={this.state.session_id}\r\n              taskID={this.state.taskID}\r\n              userId={this.state.userId}\r\n              organizationId={this.state.organizationId}\r\n              userRole={this.state.userRole}\r\n              docListIPR={this.state.docListIPR}\r\n              size={this.state.size}\r\n              page={this.state.page}\r\n              Form={this.state.IPRGridForm} // {this.state.gridForm.Form}\r\n              medicalCardId={this.state.docId}\r\n              gridFormButtons={this.state.gridFormButtons}\r\n              rowsPageChange={this.rowsPageChange}\r\n              sendFieldValues={this.sendFieldValues}\r\n              SOAT={this.state.SOAT}\r\n              handleCloseCurrentTab={this.handleCloseCurrentTab}\r\n              clearTabData={this.clearTabData}\r\n              callSuccessToast={this.props.callSuccessToast}\r\n              callErrorToast={this.props.callErrorToast}\r\n            >\r\n            </GridForm>\r\n            :\r\n            <br></br>\r\n          }\r\n          <br></br>\r\n          {this.state.download === \"downloadExcel\" &&\r\n            <Download\r\n              downloadType={this.state.download}\r\n              Form={this.state.Form}\r\n              fieldValue={this.state.fieldValue}\r\n              person={this.state.person}\r\n              SOAT={this.state.SOAT}\r\n              selectedDoc={this.state.selectedDoc}\r\n\r\n            />\r\n          }\r\n          {this.state.download === \"downloadPDF\" &&\r\n            <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} id=\"TableToDownload\">\r\n              <Grid item xs={12}>\r\n                <Card>\r\n                  <Download\r\n                    downloadType={this.state.download}\r\n                    Form={this.state.Form}\r\n                    fieldValue={this.state.fieldValue}\r\n                    person={this.state.person}\r\n                    SOAT={this.state.SOAT}\r\n                    selectedDoc={this.state.selectedDoc}\r\n                    enumData={this.state.enumData}\r\n                  />\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          }\r\n        </Grid>\r\n      )\r\n    }\r\n    catch (error) {\r\n      console.log(\"ERROR\", error)\r\n      return <div>error</div>\r\n    }\r\n  }\r\n}\r\nexport default ViewForm"]},"metadata":{},"sourceType":"module"}