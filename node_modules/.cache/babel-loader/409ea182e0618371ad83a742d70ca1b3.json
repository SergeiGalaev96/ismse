{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\ismse\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\ismse\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\ismse\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\ismse\\\\src\\\\pages\\\\Home.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\"; // import { ToastContainer, toast } from 'react-toastify'; // https://fkhadra.github.io/react-toastify/introduction/\n\nimport toast, { Toaster } from 'react-hot-toast'; // https://react-hot-toast.com/docs\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\"; // import ListItemText from \"@material-ui/core/ListItemText\";\n\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport MainComponent from \"../components/MainComponent/MainComponent.jsx\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToAppOutlined\";\nimport Box from \"@material-ui/core/Box\"; // import TextField from \"@material-ui/core/TextField\";\n// import KcAdminClient from \"keycloak-admin\";\n\nimport CloseIcon from \"@material-ui/icons/Close\"; // import Button from \"@material-ui/core/Button\";\n\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport Notification from \"@material-ui/icons/Notifications\";\nimport Badge from '@material-ui/core/Badge';\nimport { useKeycloak } from \"../lib\";\nimport swal from \"sweetalert\"; // https://sweetalert.js.org/guides/\n\nimport Button from \"@material-ui/core/Button\";\nimport { Paper, Table, TableHead, TableBody, TableRow, TableCell } from \"@material-ui/core\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport Modal from \"@material-ui/core/Modal\"; // import { createFolders } from \"@linways/table-to-excel\";\n\nimport Card from \"@material-ui/core/Card\";\nimport LinearProgress from '@material-ui/core/LinearProgress'; // import CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport ScannerIcon from '@material-ui/icons/Scanner';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport SearchIcon from '@material-ui/icons/Search';\n\nfunction TabPanel(props) {\n  const children = props.children,\n        currentTab = props.currentTab,\n        selectedTab = props.selectedTab,\n        other = _objectWithoutProperties(props, [\"children\", \"currentTab\", \"selectedTab\"]);\n\n  return React.createElement(Typography, Object.assign({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: currentTab !== selectedTab,\n    id: \"scrollable-auto-tabpanel-\".concat(selectedTab),\n    \"aria-labelledby\": \"scrollable-auto-tab-\".concat(selectedTab)\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Box, {\n    p: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, children));\n}\n\nfunction a11yProps(id) {\n  return {\n    id: \"scrollable-auto-tab-\".concat(id),\n    \"aria-controls\": \"scrollable-auto-tabpanel-\".concat(id)\n  };\n}\n\nvar HashMap = require(\"hashmap\");\n\nconst drawerWidth = 260;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n\n  },\n  toolbarIcon: _objectSpread({\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\"\n  }, theme.mixins.toolbar),\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: \"none\"\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: \"fixed\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\"\n  },\n  imagePaper: {\n    position: \"fixed\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  modal: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  hrefStyleTop: {\n    position: 'absolute',\n    backgroundColor: \"white\",\n    border: '1px solid grey',\n    height: \"35px\",\n    width: \"35px\"\n  },\n  hrefStyleBottom: {\n    position: 'absolute',\n    backgroundColor: \"white\",\n    border: '1px solid grey',\n    height: \"35px\",\n    width: \"35px\"\n  }\n}));\nconst useStylesnav = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  listItemText: {\n    fontSize: 13,\n    paddingLeft: \"2px\"\n  },\n  level1: {\n    paddingLeft: theme.spacing(0),\n    maxHeight: 25\n  },\n  level2: {\n    paddingLeft: theme.spacing(2),\n    maxHeight: 25\n  },\n  level3: {\n    paddingLeft: theme.spacing(4),\n    maxHeight: 25\n  },\n  tabs: {\n    flexGrow: 1,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nfunction getHrefStyleTop() {\n  const bottom = 7;\n  const right = 2;\n  return {\n    bottom: \"\".concat(bottom, \"%\"),\n    right: \"\".concat(right, \"%\"),\n    transform: \"translate(-\".concat(bottom, \"%, -\").concat(right, \"%)\")\n  };\n}\n\nfunction getHrefStyleBottom() {\n  const bottom = 2;\n  const right = 2;\n  return {\n    bottom: \"\".concat(bottom, \"%\"),\n    right: \"\".concat(right, \"%\"),\n    transform: \"translate(-\".concat(bottom, \"%, -\").concat(right, \"%)\")\n  };\n}\n\nvar scannedImages = [];\nvar scannedBlobs = [];\nvar loadedImages = [];\nvar selectedTabDocId = null;\nvar selectedImg = {};\nvar showImage = null;\nexport default (() => {\n  const _useKeycloak = useKeycloak(),\n        keycloak = _useKeycloak.keycloak; // This.state\n\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedTab = _useState2[0],\n        setSelectedTab = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tabs = _useState4[0],\n        setTabs = _useState4[1]; // const [endpoint] = useState(\"ws://192.168.0.64:3120\")//Server\n  // const [endpoint] = useState(\"ws://192.168.0.72:3120\")//Test Server\n\n\n  const _useState5 = useState(\"ws://192.168.2.109:3320\"),\n        _useState6 = _slicedToArray(_useState5, 1),\n        endpoint = _useState6[0]; //Local\n\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        routes = _useState8[0],\n        setRoutes = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        session_id = _useState10[0],\n        setSession_id = _useState10[1];\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        webSocketMessage = _useState12[0],\n        setWebSocketMessage = _useState12[1];\n\n  const _useState13 = useState(\"\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        currTaskId = _useState14[0],\n        setCurrTaskId = _useState14[1]; // const [SOAT, setSOAT] = useState(null)\n\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        opennav = _useState16[0],\n        setOpennav = _useState16[1];\n\n  const _useState17 = useState(true),\n        _useState18 = _slicedToArray(_useState17, 2),\n        openDrawer = _useState18[0],\n        setOpenDrawer = _useState18[1];\n\n  const _useState19 = useState(null),\n        _useState20 = _slicedToArray(_useState19, 2),\n        processInfo = _useState20[0],\n        setProcessInfo = _useState20[1];\n\n  const _useState21 = useState(1),\n        _useState22 = _slicedToArray(_useState21, 2),\n        tabCounter = _useState22[0],\n        setTabCounter = _useState22[1];\n\n  const _useState23 = useState([]),\n        _useState24 = _slicedToArray(_useState23, 2),\n        menuItemStates = _useState24[0],\n        setMenuItemStates = _useState24[1];\n\n  const _useState25 = useState(null),\n        _useState26 = _slicedToArray(_useState25, 2),\n        socket = _useState26[0],\n        setSocket = _useState26[1];\n\n  const _useState27 = useState(null),\n        _useState28 = _slicedToArray(_useState27, 2),\n        tabData = _useState28[0],\n        setTabData = _useState28[1];\n\n  const _useState29 = useState(0),\n        _useState30 = _slicedToArray(_useState29, 2),\n        childList = _useState30[0],\n        setChildList = _useState30[1]; // User\n\n\n  const _useState31 = useState(null),\n        _useState32 = _slicedToArray(_useState31, 2),\n        userId = _useState32[0],\n        setUserId = _useState32[1];\n\n  const _useState33 = useState(null),\n        _useState34 = _slicedToArray(_useState33, 2),\n        organizationId = _useState34[0],\n        setOrganizationId = _useState34[1];\n\n  const _useState35 = useState(null),\n        _useState36 = _slicedToArray(_useState35, 2),\n        userRole = _useState36[0],\n        setUserRole = _useState36[1];\n\n  const _useState37 = useState(null),\n        _useState38 = _slicedToArray(_useState37, 2),\n        userName = _useState38[0],\n        setUserName = _useState38[1]; // Scanner\n\n\n  const _useState39 = useState(false),\n        _useState40 = _slicedToArray(_useState39, 2),\n        showScanComponent = _useState40[0],\n        setShowScanComponent = _useState40[1];\n\n  const _useState41 = useState(false),\n        _useState42 = _slicedToArray(_useState41, 2),\n        connectionFailed = _useState42[0],\n        setConnectionFailed = _useState42[1];\n\n  const _useState43 = useState(null),\n        _useState44 = _slicedToArray(_useState43, 2),\n        updateState = _useState44[0],\n        setUpdateState = _useState44[1];\n\n  const _useState45 = useState(false),\n        _useState46 = _slicedToArray(_useState45, 2),\n        openModal = _useState46[0],\n        setOpenModal = _useState46[1];\n\n  const _useState47 = useState(false),\n        _useState48 = _slicedToArray(_useState47, 2),\n        showLoading = _useState48[0],\n        setShowLoading = _useState48[1];\n\n  const _useState49 = useState(false),\n        _useState50 = _slicedToArray(_useState49, 2),\n        warningShowed = _useState50[0],\n        setWarningShowed = _useState50[1];\n\n  const _useState51 = useState(getHrefStyleTop),\n        _useState52 = _slicedToArray(_useState51, 1),\n        hrefStyleTop = _useState52[0];\n\n  const _useState53 = useState(getHrefStyleBottom),\n        _useState54 = _slicedToArray(_useState53, 1),\n        hrefStyleBottom = _useState54[0];\n\n  const classes = useStyles();\n  const classesnav = useStylesnav();\n\n  const handleDrawerOpen = () => {\n    setOpenDrawer(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpenDrawer(false);\n  };\n\n  const handleOpenModal = () => {\n    setOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setOpenModal(false);\n  }; // Main socket connection and data receiving\n\n\n  if (socket === null && userRole !== null) {\n    setSocket(new WebSocket(endpoint));\n  }\n\n  if (socket !== null) {\n    socket.onmessage = async function (message) {\n      var incomingJson = JSON.parse(message.data);\n      console.log(\"Socket message\", incomingJson);\n\n      if (incomingJson.messageType === \"session_id\") {\n        setSession_id(incomingJson.session_id);\n        socket.send(JSON.stringify({\n          commandType: \"userRole\",\n          userRole: userRole,\n          \"session_id\": incomingJson.session_id,\n          \"userId\": userId\n        }));\n        console.log(\"session_id\", incomingJson.session_id);\n      } else if (incomingJson.messageType === \"Menu\") {\n        setRoutes(incomingJson.routes); // console.log(\"Menu Items\", incomingJson)\n\n        let updatedMenuItemStates = menuItemStates.slice();\n\n        for (let i = 0; i < incomingJson.routes.length; i++) {\n          if (incomingJson.routes[i].level2 !== undefined) {\n            // console.log(\"menuItemStates\", incomingJson.routes[i].level2)\n            let name = incomingJson.routes[i].name;\n            let state = incomingJson.routes[i].state;\n            let newMenuItem = {\n              name: name,\n              state: state\n            };\n            updatedMenuItemStates.push(newMenuItem);\n\n            for (let l = 0; l < incomingJson.routes[i].level2.length; l++) {\n              if (incomingJson.routes[i].level2[l].level3 !== undefined) {\n                let name = incomingJson.routes[i].level2[l].name;\n                let state = incomingJson.routes[i].level2[l].state;\n                let newMenuItem2 = {\n                  name: name,\n                  state: state\n                };\n                updatedMenuItemStates.push(newMenuItem2);\n              }\n            }\n          }\n        } // console.log(\"MENU States\", updatedMenuItemStates)\n\n\n        setMenuItemStates(updatedMenuItemStates);\n        socket.send(JSON.stringify({\n          commandType: \"restoreSession\",\n          \"userId\": userId,\n          \"session_id\": session_id,\n          \"userRole\": userRole\n        }));\n      } else if (incomingJson.messageType === \"ChildList\") {\n        setChildList(incomingJson.total);\n      } else if (incomingJson.messageType === \"processInfo\") {\n        setProcessInfo(incomingJson); // console.log(\"processInfo\", incomingJson)\n      } else if (incomingJson.messageType === \"completeTask\") {\n        console.log(\"Task complited \", incomingJson);\n      } else if (incomingJson.messageType === \"userTask\") {\n        console.log(\"USER TASK\", incomingJson);\n\n        if (tabData.get(incomingJson.process_id) !== undefined) {\n          await clearTabData(incomingJson.process_id);\n        }\n\n        await tabData.set(incomingJson.process_id, incomingJson);\n        await setCurrTaskId(incomingJson.taskID);\n        await setWebSocketMessage(incomingJson);\n      } else if (incomingJson.messageType === \"restoreTab\") {\n        // console.log(\"EXISTED DATA\", tabData.get(incomingJson.process_id))\n        if (tabData.get(incomingJson.process_id) === undefined) {\n          await tabData.set(incomingJson.process_id, incomingJson);\n          let updatedTabs = tabs.slice();\n          updatedTabs.push({\n            id: incomingJson.process_id,\n            name: incomingJson.process_id,\n            label: incomingJson.tabLabel + \" \" + tabCounter\n          });\n          await setTabs(updatedTabs);\n          await setSelectedTab(incomingJson.process_id);\n          await setTabCounter(tabCounter + 1);\n          await setCurrTaskId(incomingJson.taskID);\n          await setWebSocketMessage(incomingJson); // // console.log(\"restoreTab\", incomingJson)\n        }\n      } else if (incomingJson.messageType === \"error\") {\n        // setWebSocketMessage(incomingJson)\n        console.log(\"webSocket ERROR\", incomingJson); // tabData.set(incomingJson.process_id, incomingJson)\n        // setCurrTaskId(incomingJson.taskID)\n        // handleCloseCurrentTab(incomingJson.process_id)\n      } else if (incomingJson.messageType === \"LoadImages\") {\n        // console.log(\"IMAGES FROM SOCKET\", incomingJson)\n        var base64Image = 'data:image/png;base64,' + incomingJson.content;\n        let incomigImg = {\n          item: React.createElement(\"img\", {\n            docId: incomingJson.docId,\n            name: incomingJson.name,\n            height: \"200\",\n            width: \"auto\",\n            src: base64Image,\n            onClick: () => loadedImgClick(incomingJson.name),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 370\n            },\n            __self: this\n          })\n        };\n        loadedImages.push(incomigImg);\n        setShowLoading(false);\n        let newId = getUUID();\n        setUpdateState(newId);\n      } else if (incomingJson.messageType === \"notification\") {\n        setShowLoading(false);\n        callSuccessToast(incomingJson.toastText);\n      } else if (incomingJson.messageType === \"toast\") {\n        if (incomingJson.toastType === \"success\") {\n          callSuccessToast(incomingJson.toastText);\n        } else if (incomingJson.toastType === \"error\") {\n          // console.log(\"ERR TOAST\", incomingJson.toastText)\n          callErrorToast(incomingJson.toastText);\n        }\n      } else {\n        console.log(\"Unknown RESTMessage\", incomingJson);\n      }\n    };\n\n    socket.onclose = function (er) {\n      console.log(\"CONNECTION CLOSED \");\n      setSocket(null);\n    };\n  } // Functions of Document Scanner\n  // Keep updated doc id of selected tab document\n\n\n  if (selectedTab !== null) {\n    let selectedTabData = tabData.get(selectedTab);\n\n    if (selectedTabData !== undefined) {\n      let selectedTabDataDocId = selectedTabData.docId;\n      selectedTabDocId = selectedTabDataDocId; // console.log(\"DOC ID\", selectedTabDocId)\n    }\n  }\n\n  useEffect(() => {\n    // console.log(\"DOC ID\", selectedTabDocId)\n    setTabData(new HashMap()); // socket for scanner\n\n    var wsImpl = window.WebSocket || window.MozWebSocket;\n    window.ws = new wsImpl(\"ws://localhost:8181/\");\n\n    window.ws.onmessage = async function (e) {\n      if (e.data instanceof Blob) {\n        console.log(\"SCAN MSG\", e);\n        let f = e.data;\n        f.name = getUUID(); // await pushNewBlob(f)\n\n        await pushNewImage(e, f);\n      }\n    };\n\n    window.ws.onclose = function () {\n      setConnectionFailed(true);\n    };\n  }, []);\n\n  function callSuccessToast(text) {\n    // toast(text, {\n    //   position: \"top-right\",\n    //   autoClose: 6000,\n    //   hideProgressBar: false,\n    //   closeOnClick: true,\n    //   pauseOnHover: true,\n    //   draggable: true,\n    //   progress: undefined,\n    // })\n    toast.success(text, {\n      duration: 3000,\n      position: 'top-right'\n    });\n  }\n\n  function callErrorToast(text) {\n    // toast.error(text, {\n    //   position: \"top-right\",\n    //   autoClose: 7000,\n    //   hideProgressBar: false,\n    //   closeOnClick: true,\n    //   pauseOnHover: true,\n    //   draggable: true,\n    //   progress: undefined,\n    // })\n    toast.error(text, {\n      duration: 8000,\n      position: 'top-right'\n    });\n  }\n\n  async function pushNewImage(e, f) {\n    let reader = new FileReader();\n\n    reader.onload = async function (e) {\n      // console.log(\"WRITING IMAGES\")\n      // push new images to list and show in UI\n      let image = {\n        item: React.createElement(\"img\", {\n          docId: selectedTabDocId,\n          name: f.name,\n          height: \"200\",\n          width: \"auto\",\n          src: e.target.result,\n          onClick: () => scannedImgClick(f.name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 468\n          },\n          __self: this\n        })\n      };\n      scannedImages.push(image);\n      console.log(\"IMGLIST\", scannedImages);\n      let newId = getUUID();\n      setUpdateState(newId);\n    };\n\n    reader.readAsDataURL(f);\n  }\n\n  async function pushNewBlob(f) {\n    // console.log(\"WRITING BLOBS\")\n    var blobToBase64 = function (f, cb) {\n      let reader = new FileReader();\n\n      reader.onload = function () {\n        // converts blob to base64\n        var dataUrl = reader.result;\n        var base64 = dataUrl.split(\",\")[1];\n        cb(base64);\n      };\n\n      reader.readAsDataURL(f);\n    };\n\n    blobToBase64(f, async function (base64) {\n      // encode blobs to send to socket\n      let newBlob = {\n        \"docId\": selectedTabDocId,\n        \"name\": f.name,\n        \"blob\": base64,\n        \"size\": f.size\n      };\n      scannedBlobs.push(newBlob);\n      console.log(\"BLOBS\", scannedBlobs);\n    });\n  } // Handler of scanner buttons\n\n\n  function scannerButtonClick(name) {\n    if (name === \"scanImage\") {\n      if (scannedImages.length >= 7) {\n        swal({\n          text: \"Внимание, не сканируйте больше 7 документов за раз, сохранение может вызвать потерю сканированных файлов!\",\n          icon: \"warning\"\n        });\n        window.ws.send(\"1100\");\n      } else {\n        console.log(\"SCAN\", selectedTabDocId);\n        window.ws.send(\"1100\");\n      }\n    } else if (name === \"saveDocument\") {\n      if (Object.keys(scannedBlobs).length === 0) {\n        swal({\n          text: \"Нет файлов для сохранения!\",\n          icon: \"warning\"\n        });\n      } else {\n        let blobsToBeSaved = [];\n\n        for (let k = 0; k < scannedBlobs.length; k++) {\n          if (scannedBlobs[k].docId === selectedTabDocId) {\n            blobsToBeSaved.push(scannedBlobs[k]);\n          }\n        }\n\n        console.log(\"BLOBS TO SAVE\", blobsToBeSaved);\n        deleteSavedImages();\n        sendFieldValues({\n          commandType: \"saveImages\",\n          path: selectedTabDocId,\n          blobs: blobsToBeSaved,\n          docId: selectedTabDocId,\n          session_id: session_id\n        });\n        swal({\n          text: \"Процесс сохранения запущен, это займет некоторое время, дождитесь уведомления системы!\",\n          icon: \"success\"\n        });\n      }\n    } else if (name === \"loadPreviouslyScannedImages\") {\n      console.log(\"LOAD\", selectedTabDocId);\n      loadedImages = [];\n      sendFieldValues({\n        commandType: \"loadPreviouslyScannedImages\",\n        path: selectedTabDocId,\n        session_id: session_id,\n        docId: selectedTabDocId\n      });\n      setShowLoading(true);\n    }\n  }\n\n  function deleteSavedImages() {\n    // console.log(\"DELETE\", name)\n    let newList = [];\n    let newBlobs = [];\n\n    for (let l = 0; l < scannedImages.length; l++) {\n      if (scannedImages[l].item.props.docId === selectedTabDocId) {\n        console.log(\"DELETE\", scannedImages[l].item.props.docId);\n      } else {\n        newList.push(scannedImages[l]);\n      }\n    }\n\n    for (let k = 0; k < scannedBlobs.length; k++) {\n      if (scannedBlobs[k].docId === selectedTabDocId) {\n        console.log(\"DELETE\", scannedBlobs[k].docId, selectedTabDocId);\n      } else {\n        newBlobs.push(scannedBlobs[k]);\n      }\n    }\n\n    scannedBlobs = newBlobs;\n    scannedImages = newList;\n    let newId = getUUID();\n    setUpdateState(newId);\n  }\n\n  function deleteScannedImage(item) {\n    // console.log(\"DELETE\", item.props.name)\n    let newList = [];\n    let newBlobs = [];\n\n    for (let l = 0; l < scannedImages.length; l++) {\n      if (scannedImages[l].item.props.name === item.props.name) {\n        console.log(\"DELETE\", scannedImages[l].item.props.name, item.props.name);\n        loadedImages.push(scannedImages[l]);\n      } else {\n        newList.push(scannedImages[l]);\n      }\n    }\n\n    for (let k = 0; k < scannedBlobs.length; k++) {\n      if (scannedBlobs[k].name === item.props.name) {\n        console.log(\"DELETE\", scannedBlobs[k].name, item.props.name);\n      } else {\n        newBlobs.push(scannedBlobs[k]);\n      }\n    }\n\n    scannedBlobs = newBlobs;\n    scannedImages = newList;\n    let newId = getUUID();\n    setUpdateState(newId);\n  }\n\n  function deleteLoadedImage(item) {\n    // console.log(\"DELETE\", item.props.name)\n    swal({\n      text: \"Вы уверены что хотите удалить этот скан?\",\n      icon: \"warning\",\n      buttons: {\n        yes: \"Да\",\n        no: \"Отмена\"\n      }\n    }).then(click => {\n      if (click === \"yes\") {\n        let newList = [];\n\n        for (let l = 0; l < loadedImages.length; l++) {\n          if (loadedImages[l].item.props.name === item.props.name) {\n            console.log(\"DELETE\", loadedImages[l].item.props.name, item.props.name);\n            sendFieldValues({\n              commandType: \"deleteScannedImage\",\n              path: selectedTabDocId,\n              session_id: session_id,\n              fileName: loadedImages[l].item.props.name + \".png\"\n            });\n          } else {\n            newList.push(loadedImages[l]);\n          }\n        }\n\n        loadedImages = newList;\n        let newId = getUUID();\n        setUpdateState(newId);\n      }\n    });\n  }\n\n  function returnImageList() {\n    var imgs = [];\n\n    for (let l = 0; l < scannedImages.length; l++) {\n      if (scannedImages[l].item.props.docId === selectedTabDocId) {\n        imgs.push(React.createElement(TableBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 622\n          },\n          __self: this\n        }, React.createElement(TableRow, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 623\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 624\n          },\n          __self: this\n        }, scannedImages[l].item)), React.createElement(TableRow, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 628\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 629\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          onClick: () => deleteScannedImage(scannedImages[l].item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 630\n          },\n          __self: this\n        }, React.createElement(DeleteForeverIcon, {\n          fontSize: \"Large\",\n          style: {\n            color: \"black\",\n            margin: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 631\n          },\n          __self: this\n        }))))));\n      }\n    }\n\n    if (Object.keys(imgs).length !== 0) {\n      return React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"flex-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641\n        },\n        __self: this\n      }, imgs);\n    }\n  }\n\n  function returnLoadedImageList() {\n    var imgs = [];\n\n    for (let l = 0; l < loadedImages.length; l++) {\n      if (loadedImages[l].item.props.docId === selectedTabDocId) {\n        imgs.push(React.createElement(TableBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 652\n          },\n          __self: this\n        }, React.createElement(TableRow, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 653\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 654\n          },\n          __self: this\n        }, loadedImages[l].item)), React.createElement(TableRow, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 658\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 659\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          onClick: () => deleteLoadedImage(loadedImages[l].item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 660\n          },\n          __self: this\n        }, React.createElement(DeleteForeverIcon, {\n          fontSize: \"Large\",\n          style: {\n            color: \"black\",\n            margin: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 661\n          },\n          __self: this\n        }))))));\n      }\n    }\n\n    if (Object.keys(imgs).length !== 0) {\n      return React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"flex-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671\n        },\n        __self: this\n      }, imgs);\n    }\n  }\n\n  function scannedImgClick(name) {\n    for (let l = 0; l < scannedImages.length; l++) {\n      if (scannedImages[l].item.props.name === name) {\n        console.log(\"IMG\", scannedImages[l]);\n        selectedImg = {\n          name: scannedImages[l].item.props.name,\n          height: \"750\",\n          width: \"auto\",\n          src: scannedImages[l].item.props.src\n        };\n      }\n    }\n\n    handleOpenModal();\n    let newId = getUUID();\n    setUpdateState(newId);\n  }\n\n  function loadedImgClick(name) {\n    for (let l = 0; l < loadedImages.length; l++) {\n      if (loadedImages[l].item.props.name === name) {\n        console.log(\"IMG\", loadedImages[l]);\n        selectedImg = {\n          name: loadedImages[l].item.props.name,\n          height: \"750\",\n          width: \"auto\",\n          src: loadedImages[l].item.props.src\n        };\n      }\n    }\n\n    handleOpenModal();\n    let newId = getUUID();\n    setUpdateState(newId);\n  }\n\n  function showScanComponentClick() {\n    setShowScanComponent(true);\n  }\n\n  if (connectionFailed === true && showScanComponent === true && warningShowed === false) {\n    setWarningShowed(true);\n    swal({\n      text: \"Программа для сканирования не найдена на вашем компьютере. Пожалуйста, скачайте, установите и запустите программу, затем обновите страницу\",\n      icon: \"warning\"\n    });\n  }\n\n  const uploadFile = e => {\n    console.log(\"UPLOAD\", e.target.files[0]);\n    let nameId = getUUID();\n    let imgUrl = URL.createObjectURL(e.target.files[0]);\n    let image = {\n      item: React.createElement(\"img\", {\n        docId: selectedTabDocId,\n        name: nameId,\n        height: \"200\",\n        width: \"auto\",\n        src: imgUrl,\n        onClick: () => scannedImgClick(nameId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723\n        },\n        __self: this\n      })\n    };\n    fetch(imgUrl).then(res => res.blob()).then(blob => {\n      let f = blob;\n      f.name = nameId;\n      pushNewBlob(f); // console.log(\"BL\", f)\n    });\n    scannedImages.push(image);\n    setUpdateState(nameId);\n  }; // End of Document scanner functions\n\n\n  function handleCloseCurrentTab(tabId) {\n    // await setSelectedTab(tabId)\n    var selectedTabData = tabData.get(tabId);\n\n    if (selectedTabData !== undefined) {\n      var commandJson = {\n        commandType: \"completeTask\",\n        session_id: selectedTabData.session_id,\n        process_id: selectedTabData.process_id,\n        taskID: selectedTabData.taskID,\n        variables: {\n          userAction: {\n            value: \"cancel\"\n          },\n          userId: {\n            value: userId\n          },\n          userRole: {\n            value: userRole\n          }\n        }\n      };\n\n      if (userRole === \"Администратор\") {\n        sendFieldValues(commandJson);\n        closeTab(tabId);\n      } else {\n        if (selectedTabData.taskType === \"showRegSearchForm\" || selectedTabData.taskType === \"showDetailedSearchForm\" || selectedTabData.taskType === \"showIPRSearchForm\" || selectedTabData.taskType === \"showChildRegSearchForm\" || selectedTabData.taskType === \"showChildDetailedSearchForm\" || selectedTabData.taskType === \"showChildIPRSearchForm\" || selectedTabData.taskType === \"searchChildDetailedForm\" || selectedTabData.taskType === \"searchAdultsDetailedForm\" || selectedTabData.taskType === \"showSearchUser\" || selectedTabData.taskType === \"showSearchAppealsForm\" || selectedTabData.taskType === \"showSearchComplaintsForm\" || selectedTabData.taskType === \"error\") {\n          sendFieldValues(commandJson);\n          closeTab(tabId);\n        } else if (selectedTabData.taskType === \"showRegForm\" && selectedTabData.formType === \"view\") {\n          sendFieldValues(commandJson);\n          closeTab(tabId);\n        } else if (selectedTabData.taskType === \"showPersonForm\" && selectedTabData.selectedDoc === null) {\n          sendFieldValues(commandJson);\n          closeTab(tabId);\n        } else handleOpenSwal(\"Вы действительно хотите закрыть вкладку?\", {\n          yes: \"Да\",\n          no: \"Нет\"\n        }, tabId);\n      }\n    }\n  } // Custom allert component\n\n\n  function handleOpenSwal(text, swalButtons, tabId) {\n    return swal({\n      text: text,\n      icon: \"warning\",\n      buttons: swalButtons\n    }).then(click => {\n      if (click === \"yes\") {\n        console.log(\"CLICK\", click);\n        handleCloseCurrentTabModal(tabId);\n      } else {\n        console.log(\"CLICK\", click);\n      }\n    });\n  } // Close current tab from opened alert component\n\n\n  function handleCloseCurrentTabModal(tabId) {\n    var selectedTabData = tabData.get(tabId);\n    var commandJson = {\n      commandType: \"completeTask\",\n      session_id: selectedTabData.session_id,\n      process_id: selectedTabData.process_id,\n      taskID: selectedTabData.taskID,\n      variables: {\n        userAction: {\n          value: \"cancel\"\n        },\n        userId: {\n          value: userId\n        },\n        userRole: {\n          value: userRole\n        }\n      }\n    }; // if(selectedTabData.taskType === \"showDetailedForm\" && selectedTabData.docListIPR.length === 0){\n    //   // handleModalClose()\n    //   handleOpenSwal(\"Необходимо создать ИПР!\", {ok: \"Ок\"})\n    // } \n    // else if(selectedTabData.taskType === \"showDetailedForm\" && selectedTabData.docListIPR === \"null\" && selectedTabData.formType === \"view\"){\n    //   // handleModalClose()\n    //   handleOpenSwal(\"Необходимо создать ИПР!\", {ok: \"Ок\"})\n    // } \n    // else if(selectedTabData.taskType === \"showIPRForm\" && selectedTabData.userAction === \"ipr\" && selectedTabData.formType === \"edit\"){\n    //   // handleModalClose()\n    //   handleOpenSwal(\"Необходимо создать ИПР!\", {ok: \"Ок\"})\n    // } \n    // else {\n\n    sendFieldValues(commandJson); // handleModalClose()\n\n    closeTab(tabId); // }\n    // else if(selectedTabData.taskType === \"showDetailedForm\" && selectedTabData.formType === \"view\"){\n    //   alert(\"\")\n    // } \n  }\n\n  function sendFieldValues(commandJson) {\n    if (socket.readyState === socket.OPEN) {\n      clearTabData(commandJson.process_id);\n\n      if (commandJson.variables !== undefined) {\n        if (commandJson.variables[\"userAction\"][\"value\"] === \"cancel\") {\n          closeTab(selectedTab);\n          socket.send(JSON.stringify(commandJson));\n        } else if (commandJson.variables[\"authorization\"] !== undefined) {\n          commandJson.variables[\"authorization\"][\"value\"] = \"Bearer \" + keycloak.token;\n          socket.send(JSON.stringify(commandJson));\n          console.log(\"HOME AUTH\", commandJson);\n        } else {\n          socket.send(JSON.stringify(commandJson));\n          console.log(\"HOME SEND\", commandJson);\n        }\n      } else {\n        socket.send(JSON.stringify(commandJson));\n        console.log(\"HOME SEND\", commandJson);\n      }\n    } else {\n      // alert(\"Проблема с соединением повторная попытка...\")\n      setSocket(null);\n    }\n\n    setCurrTaskId(\"\");\n  } // wrap up menu items\n\n\n  function handleOpenMenuClick(name) {\n    // console.log(\"Event\", name)\n    for (var i = 0; i < menuItemStates.length; i++) {\n      if (menuItemStates[i].name === name) {\n        if (menuItemStates[i].state === true) {\n          menuItemStates[i].state = false;\n        } else {\n          menuItemStates[i].state = true;\n        }\n      }\n    }\n\n    setOpennav(!opennav);\n  } // launch process related to menu button\n\n\n  function handleMenuButtonClick(button) {\n    console.log(\"Menu button clicked\", button);\n\n    if (button.name === \"ClearEnumData\" || button.name === \"Redeploy\") {\n      const commandJson = {\n        commandType: button.commandType,\n        userRole: userRole,\n        userId: userId\n      };\n      sendFieldValues(commandJson);\n    } else {\n      if (tabs.length >= 5) {\n        callErrorToast(\"ВНИМАНИЕ не открывайте более 5 вкладок это приводит к замедлению работы системы!\");\n      } else {\n        var process_id = getUUID();\n        let updatedTabs = tabs.slice();\n        updatedTabs.push({\n          id: process_id,\n          name: process_id,\n          label: button.parentLabel + \" \" + tabCounter\n        });\n        setTabs(updatedTabs);\n        setSelectedTab(process_id);\n        const commandJson = {\n          commandType: button.commandType,\n          processKey: button.processKey,\n          process_id: process_id,\n          session_id: session_id,\n          variables: {\n            user_session_id: {\n              value: session_id\n            },\n            process_id: {\n              value: process_id\n            },\n            userAction: {\n              value: \"findDocument\"\n            },\n            docDef: {\n              value: button.docDef\n            },\n            userId: {\n              value: userId\n            },\n            userRole: {\n              value: userRole\n            },\n            tabLabel: {\n              value: button.parentLabel\n            },\n            authorization: {\n              value: \"Bearer \" + keycloak.token\n            }\n          }\n        };\n        sendFieldValues(commandJson);\n        console.log(\"Menu Button \", commandJson);\n        setTabCounter(tabCounter + 1);\n      }\n    }\n  }\n\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  }\n\n  async function handleTabChange(event, newValue) {\n    setSelectedTab(newValue);\n    setShowScanComponent(false);\n    console.log(\"TAB CHANGE\", newValue);\n  }\n\n  function clearTabData(process_id) {\n    tabData.remove(process_id);\n    setCurrTaskId(\"\");\n    console.log(\"Clearing TabData\", tabData, \"ID\", process_id);\n  } // close selected tab clear it\"s data from cache & change tab counter\n\n\n  function closeTab(process_id) {\n    if (process_id !== undefined) {\n      console.log(\"Closing TAB\", process_id);\n      let updatedTabs = tabs.slice();\n\n      for (var i = 0; i < updatedTabs.length; i++) {\n        if (updatedTabs[i].id === process_id) {\n          // console.log(\"INDEX\", i)\n          updatedTabs.splice(i, 1);\n        }\n      }\n\n      if (updatedTabs[0] === undefined) {\n        setSelectedTab(null);\n        setTabCounter(1);\n      } else setSelectedTab(updatedTabs[0].id);\n\n      setTabs(updatedTabs);\n    } // console.log(\"Closing TAB\", process_id)\n\n\n    let updatedTabs = tabs.slice();\n\n    for (i = 0; i < updatedTabs.length; i++) {\n      if (updatedTabs[i].id === process_id) {\n        // console.log(\"INDEX\", i)\n        updatedTabs.splice(i, 1);\n      }\n    }\n\n    if (Object.keys(updatedTabs).length === 0) {\n      setSelectedTab(null);\n      setTabCounter(1);\n    } else {\n      setSelectedTab(updatedTabs[0].id);\n      setTabs(updatedTabs);\n    }\n  } // Creating Menu Levels 1-3\n\n\n  function getLevel1Items(level1, index) {\n    // console.log(\"Creating Menu menuItemStates\", menuItemStates)\n    if (level1.level2 === undefined) {\n      if (level1.name === \"ClearEnumData\") {\n        if (userId === \"dced7bea-8a93-4baf-964b-232e75a758c5\") {\n          return React.createElement(ListItem, {\n            button: true,\n            className: classesnav.level1,\n            onClick: () => handleMenuButtonClick(level1),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 986\n            },\n            __self: this\n          }, React.createElement(ExitToAppIcon, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 990\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: classesnav.listItemText,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 991\n            },\n            __self: this\n          }, openDrawer === true ? level1.label : \"\"));\n        }\n      } else {\n        return React.createElement(ListItem, {\n          button: true,\n          className: classesnav.level1,\n          onClick: () => handleMenuButtonClick(level1),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 998\n          },\n          __self: this\n        }, React.createElement(ExitToAppIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1002\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: classesnav.listItemText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1003\n          },\n          __self: this\n        }, openDrawer === true ? level1.label : \"\"));\n      }\n    } else {\n      for (var i = 0; i < menuItemStates.length; i++) {\n        if (menuItemStates[i].name === level1.name) {\n          return React.createElement(List, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1013\n            },\n            __self: this\n          }, React.createElement(ListItem, {\n            button: true,\n            className: classesnav.level1,\n            onClick: () => handleOpenMenuClick(level1.name),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1014\n            },\n            __self: this\n          }, React.createElement(AddCircleIcon, {\n            style: {\n              height: 20,\n              width: 20\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1018\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: classesnav.listItemText,\n            style: {\n              \"fontWeight\": \"bold\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1019\n            },\n            __self: this\n          }, openDrawer === true ? level1.label : \"\"), menuItemStates[i].state === true ? React.createElement(ExpandLess, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1020\n            },\n            __self: this\n          }) : React.createElement(ExpandMore, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1020\n            },\n            __self: this\n          })), React.createElement(Collapse, {\n            in: menuItemStates[i].state,\n            timeout: \"auto\",\n            unmountOnExit: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1022\n            },\n            __self: this\n          }, level1.level2.map((level2Item, index) => getLevel2Items(level2Item, index))));\n        }\n      }\n    }\n  }\n\n  function getLevel2Items(level2, index) {\n    // console.log(\"Level2\", level2)\n    if (level2.level3 === undefined) {\n      return React.createElement(ListItem, {\n        button: true,\n        className: classesnav.level2,\n        onClick: () => handleMenuButtonClick(level2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037\n        },\n        __self: this\n      }, React.createElement(ExitToAppIcon, {\n        style: {\n          height: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classesnav.listItemText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1042\n        },\n        __self: this\n      }, openDrawer === true ? level2.label : \"\"));\n    } else {\n      for (var i = 0; i < menuItemStates.length; i++) {\n        if (menuItemStates[i].name === level2.name) {\n          return React.createElement(List, {\n            component: \"div\",\n            disablePadding: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1050\n            },\n            __self: this\n          }, React.createElement(ListItem, {\n            button: true,\n            className: classesnav.level2,\n            onClick: () => handleOpenMenuClick(level2.name),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1051\n            },\n            __self: this\n          }, React.createElement(AddCircleIcon, {\n            style: {\n              height: 20\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1055\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: classesnav.listItemText,\n            style: {\n              \"fontWeight\": \"bold\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1056\n            },\n            __self: this\n          }, openDrawer === true ? level2.label : \"\"), menuItemStates[i].state === true ? React.createElement(ExpandLess, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1057\n            },\n            __self: this\n          }) : React.createElement(ExpandMore, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1057\n            },\n            __self: this\n          })), React.createElement(Collapse, {\n            in: menuItemStates[i].state,\n            timeout: \"auto\",\n            unmountOnExit: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1059\n            },\n            __self: this\n          }, level2.level3.map((level3Item, index) => getLevel3Items(level3Item, index))));\n        }\n      }\n    }\n  }\n\n  function getLevel3Items(level3, index) {\n    return React.createElement(ListItem, {\n      button: true,\n      className: classesnav.level3,\n      onClick: () => handleMenuButtonClick(level3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1072\n      },\n      __self: this\n    }, React.createElement(ExitToAppIcon, {\n      style: {\n        height: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1076\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classesnav.listItemText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1077\n      },\n      __self: this\n    }, openDrawer === true ? level3.label : \"\"));\n  } // Getting authenticated user profile\n\n\n  if (userId === null) {\n    keycloak.loadUserProfile().success(function (profile) {\n      let curUserId = profile.attributes.userId[0];\n      let curOrganizationId = profile.attributes.organizationId[0];\n      let curUserRole = profile.attributes.userRole[0];\n      let curUserFirstName = profile.firstName;\n      let curUserLastName = profile.lastName;\n      let curUserName = curUserFirstName + \" \" + curUserLastName.substring(0, 1) + \".\";\n      setUserId(curUserId);\n      setOrganizationId(curOrganizationId);\n      setUserRole(curUserRole);\n      setUserName(curUserName);\n      console.log(\"PROFILE: \", profile);\n    }).error(function () {\n      console.log(\"Failed to load user profile\");\n    });\n  }\n\n  if (menuItemStates.length === 0) {\n    return React.createElement(\"div\", {\n      align: \"center\",\n      style: {\n        paddingTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1101\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1102\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1103\n      },\n      __self: this\n    }, \"loading...\"));\n  } // if (userId === null) return <div>No user</div>\n  // console.log(\"Home\", selectedTab)\n\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1110\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1111\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    position: \"absolute\",\n    className: clsx(classes.appBar, openDrawer && classes.appBarShift),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1112\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1113\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerOpen,\n    className: clsx(classes.menuButton, openDrawer && classes.menuButtonHidden),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1114\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1121\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h6\",\n    color: \"inherit\",\n    noWrap: true,\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1123\n    },\n    __self: this\n  }, \"\\u0418\\u0421\\u041C\\u0421\\u042D\\u041A\"), React.createElement(\"td\", {\n    style: {\n      paddingRight: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1126\n    },\n    __self: this\n  }, React.createElement(Badge, {\n    badgeContent: childList,\n    color: childList > 0 ? \"secondary\" : \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1127\n    },\n    __self: this\n  }, React.createElement(Notification, {\n    style: {\n      cursor: \"pointer\"\n    },\n    fontSize: \"large\" // color={urgentUnreadInstructions === true ? \"secondary\" : \"white\"}\n    ,\n    onClick: () => handleMenuButtonClick({\n      commandType: \"launchProcess\",\n      processKey: \"process_203b2yt8-b7kv-1e45-6rrt-ub403kj9dla0\",\n      parentLabel: \"Мед акты(Дт)\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1128\n    },\n    __self: this\n  }))), React.createElement(AccountCircleIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1136\n    },\n    __self: this\n  }), !!keycloak.authenticated && React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1138\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1139\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1140\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1141\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1142\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1143\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1144\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    style: {\n      fontSize: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1145\n    },\n    __self: this\n  }, \"\\u0424\\u0418\\u041E:\"), React.createElement(\"td\", {\n    style: {\n      fontSize: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1146\n    },\n    __self: this\n  }, userName)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1148\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    style: {\n      fontSize: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1149\n    },\n    __self: this\n  }, \"\\u0420\\u043E\\u043B\\u044C:\"), React.createElement(\"td\", {\n    style: {\n      fontSize: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1150\n    },\n    __self: this\n  }, userRole))))), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1155\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1156\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    style: {\n      fontSize: 14\n    },\n    onClick: () => keycloak.logout(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1157\n    },\n    __self: this\n  }, \"\\u0412\\u044B\\u0439\\u0442\\u0438\")))))) // <Typography>\n  //   {userName}\n  //   <IconButton color=\"inherit\" style={{ fontSize: 14 }} onClick={() => keycloak.logout()}>\n  //     Выйти\n  //   </IconButton>\n  // </Typography>\n  )), React.createElement(Drawer, {\n    variant: \"permanent\",\n    classes: {\n      paper: clsx(classes.drawerPaper, !openDrawer && classes.drawerPaperClose)\n    },\n    open: openDrawer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1174\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbarIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1181\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleDrawerClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1182\n    },\n    __self: this\n  }, React.createElement(ChevronLeftIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1183\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1186\n    },\n    __self: this\n  }), routes.map((level1, index) => getLevel1Items(level1, index))), React.createElement(\"main\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1191\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    name: \"top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1192\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    style: {\n      paddingLeft: openDrawer === true ? drawerWidth : 65\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1194\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    color: \"default\",\n    style: {\n      paddingLeft: openDrawer === true ? drawerWidth : 65\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1195\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    key: currTaskId,\n    style: {\n      height: \"110px\",\n      paddingTop: \"160px\"\n    },\n    position: \"fixed\",\n    value: selectedTab // onChange={(event, newValue)=> handleTabChange(event, newValue)}\n    ,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"scrollable\",\n    scrollButtons: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1206\n    },\n    __self: this\n  }, tabs.map((tab, index) => React.createElement(Tab, Object.assign({\n    key: tab.id,\n    label: React.createElement(\"div\", {\n      style: {\n        fontSize: 11\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1220\n      },\n      __self: this\n    }, tab.label, React.createElement(IconButton, {\n      onClick: () => handleCloseCurrentTab(tab.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1220\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      style: {\n        fontSize: \"medium\",\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1221\n      },\n      __self: this\n    }))),\n    value: tab.id\n  }, a11yProps(tab.id), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1218\n    },\n    __self: this\n  }))))), webSocketMessage !== null && tabs.map((tab, index) => React.createElement(TabPanel, {\n    position: \"fixed\",\n    currentTab: tab.id,\n    selectedTab: selectedTab,\n    key: tab.id,\n    style: {\n      paddingTop: 60,\n      paddingLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1233\n    },\n    __self: this\n  }, React.createElement(MainComponent, {\n    userId: userId,\n    organizationId: organizationId,\n    userRole: userRole,\n    selectedTab: selectedTab,\n    showScanComponent: showScanComponent,\n    id: tab.id,\n    key: tab.id,\n    adminMessage: tabData.get(tab.id),\n    sendFieldValues: sendFieldValues,\n    handleCloseCurrentTab: handleCloseCurrentTab,\n    clearTabData: clearTabData,\n    showScanComponentClick: showScanComponentClick,\n    callSuccessToast: callSuccessToast,\n    callErrorToast: callErrorToast // closeTab = {closeTab}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1240\n    },\n    __self: this\n  }))), showScanComponent === true && React.createElement(\"div\", {\n    id: \"scanner\",\n    style: {\n      paddingLeft: 40,\n      paddingBottom: 40,\n      paddingRight: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1262\n    },\n    __self: this\n  }, connectionFailed === false && React.createElement(Button, {\n    id: \"1234\",\n    variant: \"outlined\",\n    onClick: () => scannerButtonClick(\"scanImage\"),\n    style: {\n      margin: 3,\n      backgroundColor: \"#D3D3FE\"\n    },\n    startIcon: React.createElement(ScannerIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1272\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1264\n    },\n    __self: this\n  }, \"\\u0421\\u043A\\u0430\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"), connectionFailed === true && React.createElement(Button, {\n    component: \"a\",\n    href: \"../Scan_App_SetUp.msi\",\n    download: true,\n    variant: \"outlined\",\n    style: {\n      margin: 3,\n      backgroundColor: \"#D3D3FE\"\n    },\n    startIcon: React.createElement(GetAppIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1286\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1277\n    },\n    __self: this\n  }, \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C\"), React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: () => scannerButtonClick(\"saveDocument\"),\n    style: {\n      margin: 3,\n      backgroundColor: \"#D1FBD1\"\n    },\n    startIcon: React.createElement(SaveIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1297\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1290\n    },\n    __self: this\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: () => scannerButtonClick(\"loadPreviouslyScannedImages\"),\n    style: {\n      margin: 3,\n      backgroundColor: \"#D1FBD1\"\n    },\n    startIcon: React.createElement(CloudDownloadIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1307\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1300\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0440\\u0430\\u043D\\u0435\\u0435 \\u043E\\u0442\\u0441\\u043A\\u0430\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0435\"), React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    id: \"contained-button-file\",\n    multiple: true,\n    type: \"file\",\n    onChange: uploadFile,\n    style: {\n      display: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1310\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1319\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\" // color=\"primary\" \n    ,\n    component: \"span\",\n    startIcon: React.createElement(SearchIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1324\n      },\n      __self: this\n    }),\n    style: {\n      margin: 3,\n      backgroundColor: \"#D1FBD1\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1320\n    },\n    __self: this\n  }, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C\")), React.createElement(Table, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1333\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    style: {\n      backgroundColor: \"#D3D3FE\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1334\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1335\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1336\n    },\n    __self: this\n  }, \"\\u041E\\u0442\\u0441\\u043A\\u0430\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0435/\\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0444\\u0430\\u0439\\u043B\\u044B\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1339\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1340\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1341\n    },\n    __self: this\n  }, returnImageList())))), React.createElement(Table, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1346\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    style: {\n      backgroundColor: \"#D3D3FE\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1347\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1348\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1349\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0444\\u0430\\u0439\\u043B\\u044B\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1352\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1353\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1354\n    },\n    __self: this\n  }, showLoading === true && React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    spacing: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1355\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1356\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1357\n    },\n    __self: this\n  }, React.createElement(LinearProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1358\n    },\n    __self: this\n  })))), returnLoadedImageList())))), React.createElement(Modal, {\n    style: {\n      paddingLeft: \"500px\"\n    },\n    open: openModal,\n    onClose: handleCloseModal,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1368\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.imagePaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1375\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    name: selectedImg.name,\n    height: selectedImg.height,\n    width: \"auto\",\n    src: selectedImg.src,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1376\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1379\n    },\n    __self: this\n  }, showImage))), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1383\n    },\n    __self: this\n  }, \"Copyright © \", new Date().getFullYear(), \".\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1389\n    },\n    __self: this\n  }, React.createElement(Toaster, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1389\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    href: \"#top\",\n    style: hrefStyleTop,\n    className: classes.hrefStyleTop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1390\n    },\n    __self: this\n  }, React.createElement(ArrowUpwardIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1391\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    href: \"#bottom\",\n    style: hrefStyleBottom,\n    className: classes.hrefStyleBottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1393\n    },\n    __self: this\n  }, React.createElement(ArrowDownwardIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1394\n    },\n    __self: this\n  })), React.createElement(\"a\", {\n    name: \"bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1396\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["C:\\Users\\SERGO\\Desktop\\ismse\\src\\pages\\Home.js"],"names":["React","useState","useEffect","clsx","toast","Toaster","makeStyles","CssBaseline","Drawer","AppBar","Toolbar","List","Typography","Divider","IconButton","ArrowUpwardIcon","ArrowDownwardIcon","Grid","MenuIcon","ChevronLeftIcon","ListItem","ListItemIcon","CircularProgress","Collapse","ExpandLess","ExpandMore","Tabs","Tab","MainComponent","AddCircleIcon","ExitToAppIcon","Box","CloseIcon","AccountCircleIcon","Notification","Badge","useKeycloak","swal","Button","Paper","Table","TableHead","TableBody","TableRow","TableCell","DeleteForeverIcon","Modal","Card","LinearProgress","SaveIcon","CloudDownloadIcon","ScannerIcon","GetAppIcon","SearchIcon","TabPanel","props","children","currentTab","selectedTab","other","a11yProps","id","HashMap","require","drawerWidth","useStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","paper","flexDirection","imagePaper","backgroundColor","palette","background","border","boxShadow","shadows","modal","hrefStyleTop","hrefStyleBottom","useStylesnav","maxWidth","listItemText","fontSize","paddingLeft","level1","maxHeight","level2","level3","tabs","getHrefStyleTop","bottom","right","transform","getHrefStyleBottom","scannedImages","scannedBlobs","loadedImages","selectedTabDocId","selectedImg","showImage","keycloak","setSelectedTab","setTabs","endpoint","routes","setRoutes","session_id","setSession_id","webSocketMessage","setWebSocketMessage","currTaskId","setCurrTaskId","opennav","setOpennav","openDrawer","setOpenDrawer","processInfo","setProcessInfo","tabCounter","setTabCounter","menuItemStates","setMenuItemStates","socket","setSocket","tabData","setTabData","childList","setChildList","userId","setUserId","organizationId","setOrganizationId","userRole","setUserRole","userName","setUserName","showScanComponent","setShowScanComponent","connectionFailed","setConnectionFailed","updateState","setUpdateState","openModal","setOpenModal","showLoading","setShowLoading","warningShowed","setWarningShowed","classes","classesnav","handleDrawerOpen","handleDrawerClose","handleOpenModal","handleCloseModal","WebSocket","onmessage","message","incomingJson","JSON","parse","data","console","log","messageType","send","stringify","commandType","updatedMenuItemStates","slice","i","length","undefined","name","state","newMenuItem","push","l","newMenuItem2","total","get","process_id","clearTabData","set","taskID","updatedTabs","label","tabLabel","base64Image","incomigImg","item","docId","loadedImgClick","newId","getUUID","callSuccessToast","toastText","toastType","callErrorToast","onclose","er","selectedTabData","selectedTabDataDocId","wsImpl","window","MozWebSocket","ws","e","Blob","f","pushNewImage","text","success","error","reader","FileReader","onload","image","target","result","scannedImgClick","readAsDataURL","pushNewBlob","blobToBase64","cb","dataUrl","base64","split","newBlob","size","scannerButtonClick","icon","Object","keys","blobsToBeSaved","k","deleteSavedImages","sendFieldValues","path","blobs","newList","newBlobs","deleteScannedImage","deleteLoadedImage","buttons","yes","no","then","click","fileName","returnImageList","imgs","color","margin","returnLoadedImageList","src","showScanComponentClick","uploadFile","files","nameId","imgUrl","URL","createObjectURL","fetch","res","blob","handleCloseCurrentTab","tabId","commandJson","variables","userAction","value","closeTab","taskType","formType","selectedDoc","handleOpenSwal","swalButtons","handleCloseCurrentTabModal","readyState","OPEN","token","handleOpenMenuClick","handleMenuButtonClick","button","parentLabel","processKey","user_session_id","docDef","authorization","uuidv1","handleTabChange","event","newValue","remove","splice","getLevel1Items","index","map","level2Item","getLevel2Items","level3Item","getLevel3Items","loadUserProfile","profile","curUserId","attributes","curOrganizationId","curUserRole","curUserFirstName","firstName","curUserLastName","lastName","curUserName","substring","paddingTop","cursor","authenticated","logout","tab","paddingBottom","input","Date","getFullYear"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\n// import { ToastContainer, toast } from 'react-toastify'; // https://fkhadra.github.io/react-toastify/introduction/\nimport toast, { Toaster } from 'react-hot-toast'; // https://react-hot-toast.com/docs\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport MainComponent from \"../components/MainComponent/MainComponent.jsx\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToAppOutlined\";\nimport Box from \"@material-ui/core/Box\";\n// import TextField from \"@material-ui/core/TextField\";\n// import KcAdminClient from \"keycloak-admin\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n// import Button from \"@material-ui/core/Button\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport Notification from \"@material-ui/icons/Notifications\";\nimport Badge from '@material-ui/core/Badge';\nimport { useKeycloak } from \"../lib\";\nimport swal from \"sweetalert\" // https://sweetalert.js.org/guides/\nimport Button from \"@material-ui/core/Button\";\nimport { Paper, Table, TableHead, TableBody, TableRow, TableCell } from \"@material-ui/core\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport Modal from \"@material-ui/core/Modal\";\n// import { createFolders } from \"@linways/table-to-excel\";\nimport Card from \"@material-ui/core/Card\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\n// import CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport ScannerIcon from '@material-ui/icons/Scanner';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport SearchIcon from '@material-ui/icons/Search';\n\nfunction TabPanel(props) {\n  const { children, currentTab, selectedTab, ...other } = props;\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={currentTab !== selectedTab}\n      id={`scrollable-auto-tabpanel-${selectedTab}`}\n      aria-labelledby={`scrollable-auto-tab-${selectedTab}`}\n      {...other}\n    >\n      <Box p={3}>{children}</Box>\n    </Typography>\n  )\n}\nfunction a11yProps(id) {\n  return {\n    id: `scrollable-auto-tab-${id}`,\n    \"aria-controls\": `scrollable-auto-tabpanel-${id}`\n  }\n}\nvar HashMap = require(\"hashmap\")\nconst drawerWidth = 260\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: \"none\"\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: \"fixed\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\"\n  },\n  imagePaper: {\n    position: \"fixed\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  modal: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"1px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  hrefStyleTop: {\n    position: 'absolute',\n    backgroundColor: \"white\",\n    border: '1px solid grey',\n    height: \"35px\",\n    width: \"35px\"\n  },\n  hrefStyleBottom: {\n    position: 'absolute',\n    backgroundColor: \"white\",\n    border: '1px solid grey',\n    height: \"35px\",\n    width: \"35px\"\n  }\n}))\n\nconst useStylesnav = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  listItemText: {\n    fontSize: 13,\n    paddingLeft: \"2px\",\n  },\n  level1: {\n    paddingLeft: theme.spacing(0),\n    maxHeight: 25\n  },\n  level2: {\n    paddingLeft: theme.spacing(2),\n    maxHeight: 25\n  },\n  level3: {\n    paddingLeft: theme.spacing(4),\n    maxHeight: 25\n  },\n  tabs: {\n    flexGrow: 1,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  }\n}))\nfunction getHrefStyleTop() {\n  const bottom = 7;\n  const right = 2;\n  return {\n    bottom: `${bottom}%`,\n    right: `${right}%`,\n    transform: `translate(-${bottom}%, -${right}%)`,\n  };\n}\nfunction getHrefStyleBottom() {\n  const bottom = 2;\n  const right = 2;\n  return {\n    bottom: `${bottom}%`,\n    right: `${right}%`,\n    transform: `translate(-${bottom}%, -${right}%)`,\n  };\n}\n\nvar scannedImages = []\nvar scannedBlobs = []\nvar loadedImages = []\nvar selectedTabDocId = null\nvar selectedImg = {}\nvar showImage = null\nexport default () => {\n  const { keycloak } = useKeycloak();\n  // This.state\n  const [selectedTab, setSelectedTab] = useState(null)\n  const [tabs, setTabs] = useState([])\n  // const [endpoint] = useState(\"ws://192.168.0.64:3120\")//Server\n  // const [endpoint] = useState(\"ws://192.168.0.72:3120\")//Test Server\n  const [endpoint] = useState(\"ws://192.168.2.109:3320\")//Local\n  const [routes, setRoutes] = useState([])\n  const [session_id, setSession_id] = useState(null)\n  const [webSocketMessage, setWebSocketMessage] = useState(null)\n  const [currTaskId, setCurrTaskId] = useState(\"\")\n  // const [SOAT, setSOAT] = useState(null)\n  const [opennav, setOpennav] = useState(false)\n  const [openDrawer, setOpenDrawer] = useState(true)\n  const [processInfo, setProcessInfo] = useState(null)\n  const [tabCounter, setTabCounter] = useState(1)\n  const [menuItemStates, setMenuItemStates] = useState([])\n  const [socket, setSocket] = useState(null)\n  const [tabData, setTabData] = useState(null)\n  const [childList, setChildList] = useState(0)\n  // User\n  const [userId, setUserId] = useState(null)\n  const [organizationId, setOrganizationId] = useState(null)\n  const [userRole, setUserRole] = useState(null)\n  const [userName, setUserName] = useState(null)\n  // Scanner\n  const [showScanComponent, setShowScanComponent] = useState(false)\n  const [connectionFailed, setConnectionFailed] = useState(false)\n  const [updateState, setUpdateState] = useState(null)\n  const [openModal, setOpenModal] = useState(false)\n  const [showLoading, setShowLoading] = useState(false)\n  const [warningShowed, setWarningShowed] = useState(false)\n\n  const [hrefStyleTop] = useState(getHrefStyleTop)\n  const [hrefStyleBottom] = useState(getHrefStyleBottom)\n  const classes = useStyles()\n  const classesnav = useStylesnav()\n  const handleDrawerOpen = () => {\n    setOpenDrawer(true)\n  }\n  const handleDrawerClose = () => {\n    setOpenDrawer(false)\n  }\n  const handleOpenModal = () => {\n    setOpenModal(true)\n  }\n  const handleCloseModal = () => {\n    setOpenModal(false)\n  }\n\n  // Main socket connection and data receiving\n  if (socket === null && userRole !== null) {\n    setSocket(new WebSocket(endpoint))\n  }\n  if (socket !== null) {\n    socket.onmessage = async function (message) {\n      var incomingJson = JSON.parse(message.data)\n      console.log(\"Socket message\", incomingJson)\n      if (incomingJson.messageType === \"session_id\") {\n        setSession_id(incomingJson.session_id)\n        socket.send(JSON.stringify({ commandType: \"userRole\", userRole: userRole, \"session_id\": incomingJson.session_id, \"userId\": userId }))\n        console.log(\"session_id\", incomingJson.session_id)\n      }\n      else if (incomingJson.messageType === \"Menu\") {\n        setRoutes(incomingJson.routes)\n        // console.log(\"Menu Items\", incomingJson)\n        let updatedMenuItemStates = menuItemStates.slice()\n        for (let i = 0; i < incomingJson.routes.length; i++) {\n          if (incomingJson.routes[i].level2 !== undefined) {\n            // console.log(\"menuItemStates\", incomingJson.routes[i].level2)\n            let name = incomingJson.routes[i].name\n            let state = incomingJson.routes[i].state\n            let newMenuItem = {\n              name: name,\n              state: state\n            }\n            updatedMenuItemStates.push(newMenuItem)\n            for (let l = 0; l < incomingJson.routes[i].level2.length; l++) {\n              if (incomingJson.routes[i].level2[l].level3 !== undefined) {\n                let name = incomingJson.routes[i].level2[l].name\n                let state = incomingJson.routes[i].level2[l].state\n                let newMenuItem2 = {\n                  name: name,\n                  state: state\n                }\n                updatedMenuItemStates.push(newMenuItem2)\n              }\n            }\n          }\n        }\n        // console.log(\"MENU States\", updatedMenuItemStates)\n        setMenuItemStates(updatedMenuItemStates)\n        socket.send(JSON.stringify({ commandType: \"restoreSession\", \"userId\": userId, \"session_id\": session_id, \"userRole\": userRole }))\n      }\n      else if (incomingJson.messageType === \"ChildList\") {\n        setChildList(incomingJson.total)\n      }\n      else if (incomingJson.messageType === \"processInfo\") {\n        setProcessInfo(incomingJson)\n        // console.log(\"processInfo\", incomingJson)\n      }\n      else if (incomingJson.messageType === \"completeTask\") {\n        console.log(\"Task complited \", incomingJson)\n      }\n      else if (incomingJson.messageType === \"userTask\") {\n        console.log(\"USER TASK\", incomingJson)\n        if (tabData.get(incomingJson.process_id) !== undefined) {\n          await clearTabData(incomingJson.process_id)\n        }\n        await tabData.set(incomingJson.process_id, incomingJson)\n        await setCurrTaskId(incomingJson.taskID)\n        await setWebSocketMessage(incomingJson)\n      }\n      else if (incomingJson.messageType === \"restoreTab\") {\n        // console.log(\"EXISTED DATA\", tabData.get(incomingJson.process_id))\n        if (tabData.get(incomingJson.process_id) === undefined) {\n          await tabData.set(incomingJson.process_id, incomingJson)\n          let updatedTabs = tabs.slice()\n          updatedTabs.push({ id: incomingJson.process_id, name: incomingJson.process_id, label: incomingJson.tabLabel + \" \" + tabCounter })\n          await setTabs(updatedTabs)\n          await setSelectedTab(incomingJson.process_id)\n          await setTabCounter(tabCounter + 1)\n          await setCurrTaskId(incomingJson.taskID)\n          await setWebSocketMessage(incomingJson)\n          // // console.log(\"restoreTab\", incomingJson)\n        }\n      }\n      else if (incomingJson.messageType === \"error\") {\n        // setWebSocketMessage(incomingJson)\n        console.log(\"webSocket ERROR\", incomingJson)\n        // tabData.set(incomingJson.process_id, incomingJson)\n        // setCurrTaskId(incomingJson.taskID)\n        // handleCloseCurrentTab(incomingJson.process_id)\n      }\n      else if (incomingJson.messageType === \"LoadImages\") {\n        // console.log(\"IMAGES FROM SOCKET\", incomingJson)\n        var base64Image = 'data:image/png;base64,' + incomingJson.content\n        let incomigImg = { item: <img docId={incomingJson.docId} name={incomingJson.name} height=\"200\" width=\"auto\" src={base64Image} onClick={() => loadedImgClick(incomingJson.name)} /> }\n        loadedImages.push(incomigImg)\n        setShowLoading(false)\n        let newId = getUUID()\n        setUpdateState(newId)\n      }\n      else if (incomingJson.messageType === \"notification\") {\n        setShowLoading(false)\n        callSuccessToast(incomingJson.toastText)\n      }\n      else if (incomingJson.messageType === \"toast\") {\n        if (incomingJson.toastType === \"success\") {\n          callSuccessToast(incomingJson.toastText)\n        }\n        else if (incomingJson.toastType === \"error\") {\n          // console.log(\"ERR TOAST\", incomingJson.toastText)\n          callErrorToast(incomingJson.toastText)\n        }\n      }\n      else {\n        console.log(\"Unknown RESTMessage\", incomingJson)\n      }\n    }\n    socket.onclose = function (er) {\n      console.log(\"CONNECTION CLOSED \")\n      setSocket(null)\n    }\n  }\n\n  // Functions of Document Scanner\n  // Keep updated doc id of selected tab document\n  if (selectedTab !== null) {\n    let selectedTabData = tabData.get(selectedTab)\n    if (selectedTabData !== undefined) {\n      let selectedTabDataDocId = selectedTabData.docId\n      selectedTabDocId = selectedTabDataDocId\n      // console.log(\"DOC ID\", selectedTabDocId)\n    }\n  }\n  useEffect(() => {\n    // console.log(\"DOC ID\", selectedTabDocId)\n    setTabData(new HashMap())\n    // socket for scanner\n    var wsImpl = window.WebSocket || window.MozWebSocket\n    window.ws = new wsImpl(\"ws://localhost:8181/\")\n    window.ws.onmessage = async function (e) {\n      if (e.data instanceof Blob) {\n        console.log(\"SCAN MSG\", e)\n        let f = e.data\n        f.name = getUUID()\n        // await pushNewBlob(f)\n        await pushNewImage(e, f)\n      }\n    }\n    window.ws.onclose = function () {\n      setConnectionFailed(true)\n    }\n  }, [])\n\n  function callSuccessToast(text) {\n    // toast(text, {\n    //   position: \"top-right\",\n    //   autoClose: 6000,\n    //   hideProgressBar: false,\n    //   closeOnClick: true,\n    //   pauseOnHover: true,\n    //   draggable: true,\n    //   progress: undefined,\n    // })\n\n    toast.success(text, {\n      duration: 3000,\n      position: 'top-right',\n    });\n\n  }\n\n  function callErrorToast(text) {\n    // toast.error(text, {\n    //   position: \"top-right\",\n    //   autoClose: 7000,\n    //   hideProgressBar: false,\n    //   closeOnClick: true,\n    //   pauseOnHover: true,\n    //   draggable: true,\n    //   progress: undefined,\n    // })\n    toast.error(text, {\n      duration: 8000,\n      position: 'top-right',\n    });\n  }\n\n  async function pushNewImage(e, f) {\n    let reader = new FileReader()\n    reader.onload = async function (e) {\n      // console.log(\"WRITING IMAGES\")\n      // push new images to list and show in UI\n      let image = { item: <img docId={selectedTabDocId} name={f.name} height=\"200\" width=\"auto\" src={e.target.result} onClick={() => scannedImgClick(f.name)} /> }\n      scannedImages.push(image)\n      console.log(\"IMGLIST\", scannedImages)\n      let newId = getUUID()\n      setUpdateState(newId)\n    }\n    reader.readAsDataURL(f)\n  }\n  async function pushNewBlob(f) {\n    // console.log(\"WRITING BLOBS\")\n    var blobToBase64 = function (f, cb) {\n      let reader = new FileReader()\n      reader.onload = function () {\n        // converts blob to base64\n        var dataUrl = reader.result\n        var base64 = dataUrl.split(\",\")[1]\n        cb(base64)\n      }\n      reader.readAsDataURL(f)\n    }\n    blobToBase64(f, async function (base64) {\n      // encode blobs to send to socket\n      let newBlob = { \"docId\": selectedTabDocId, \"name\": f.name, \"blob\": base64, \"size\": f.size }\n      scannedBlobs.push(newBlob)\n      console.log(\"BLOBS\", scannedBlobs)\n    })\n  }\n  // Handler of scanner buttons\n  function scannerButtonClick(name) {\n    if (name === \"scanImage\") {\n      if (scannedImages.length >= 7) {\n        swal({\n          text: \"Внимание, не сканируйте больше 7 документов за раз, сохранение может вызвать потерю сканированных файлов!\",\n          icon: \"warning\"\n        })\n        window.ws.send(\"1100\")\n      }\n      else {\n        console.log(\"SCAN\", selectedTabDocId)\n        window.ws.send(\"1100\")\n      }\n    }\n    else if (name === \"saveDocument\") {\n      if (Object.keys(scannedBlobs).length === 0) {\n        swal({\n          text: \"Нет файлов для сохранения!\",\n          icon: \"warning\"\n        })\n      }\n      else {\n        let blobsToBeSaved = []\n        for (let k = 0; k < scannedBlobs.length; k++) {\n          if (scannedBlobs[k].docId === selectedTabDocId) {\n            blobsToBeSaved.push(scannedBlobs[k])\n          }\n        }\n        console.log(\"BLOBS TO SAVE\", blobsToBeSaved)\n        deleteSavedImages()\n        sendFieldValues({ commandType: \"saveImages\", path: selectedTabDocId, blobs: blobsToBeSaved, docId: selectedTabDocId, session_id: session_id })\n        swal({\n          text: \"Процесс сохранения запущен, это займет некоторое время, дождитесь уведомления системы!\",\n          icon: \"success\"\n        })\n      }\n    }\n    else if (name === \"loadPreviouslyScannedImages\") {\n      console.log(\"LOAD\", selectedTabDocId)\n      loadedImages = []\n      sendFieldValues({ commandType: \"loadPreviouslyScannedImages\", path: selectedTabDocId, session_id: session_id, docId: selectedTabDocId })\n      setShowLoading(true)\n    }\n  }\n  function deleteSavedImages() {\n    // console.log(\"DELETE\", name)\n    let newList = []\n    let newBlobs = []\n    for (let l = 0; l < scannedImages.length; l++) {\n      if (scannedImages[l].item.props.docId === selectedTabDocId) {\n        console.log(\"DELETE\", scannedImages[l].item.props.docId)\n      }\n      else {\n        newList.push(scannedImages[l])\n      }\n    }\n    for (let k = 0; k < scannedBlobs.length; k++) {\n      if (scannedBlobs[k].docId === selectedTabDocId) {\n        console.log(\"DELETE\", scannedBlobs[k].docId, selectedTabDocId)\n      }\n      else {\n        newBlobs.push(scannedBlobs[k])\n      }\n    }\n    scannedBlobs = newBlobs\n    scannedImages = newList\n    let newId = getUUID()\n    setUpdateState(newId)\n  }\n  function deleteScannedImage(item) {\n    // console.log(\"DELETE\", item.props.name)\n    let newList = []\n    let newBlobs = []\n    for (let l = 0; l < scannedImages.length; l++) {\n      if (scannedImages[l].item.props.name === item.props.name) {\n        console.log(\"DELETE\", scannedImages[l].item.props.name, item.props.name)\n        loadedImages.push(scannedImages[l])\n      }\n      else {\n        newList.push(scannedImages[l])\n      }\n    }\n    for (let k = 0; k < scannedBlobs.length; k++) {\n      if (scannedBlobs[k].name === item.props.name) {\n        console.log(\"DELETE\", scannedBlobs[k].name, item.props.name)\n      }\n      else {\n        newBlobs.push(scannedBlobs[k])\n      }\n    }\n    scannedBlobs = newBlobs\n    scannedImages = newList\n    let newId = getUUID()\n    setUpdateState(newId)\n  }\n  function deleteLoadedImage(item) {\n    // console.log(\"DELETE\", item.props.name)\n    swal({\n      text: \"Вы уверены что хотите удалить этот скан?\",\n      icon: \"warning\",\n      buttons: { yes: \"Да\", no: \"Отмена\" }\n    })\n      .then((click) => {\n        if (click === \"yes\") {\n          let newList = []\n          for (let l = 0; l < loadedImages.length; l++) {\n            if (loadedImages[l].item.props.name === item.props.name) {\n              console.log(\"DELETE\", loadedImages[l].item.props.name, item.props.name)\n              sendFieldValues({ commandType: \"deleteScannedImage\", path: selectedTabDocId, session_id: session_id, fileName: loadedImages[l].item.props.name + \".png\" })\n            }\n            else {\n              newList.push(loadedImages[l])\n            }\n          }\n          loadedImages = newList\n          let newId = getUUID()\n          setUpdateState(newId)\n        }\n      })\n\n  }\n  function returnImageList() {\n    var imgs = []\n    for (let l = 0; l < scannedImages.length; l++) {\n      if (scannedImages[l].item.props.docId === selectedTabDocId) {\n        imgs.push(\n          <TableBody>\n            <TableRow>\n              <TableCell>\n                {scannedImages[l].item}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell align=\"center\">\n                <IconButton onClick={() => deleteScannedImage(scannedImages[l].item)}>\n                  <DeleteForeverIcon fontSize=\"Large\" style={{ color: \"black\", margin: 0 }} />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        )\n      }\n    }\n    if (Object.keys(imgs).length !== 0) {\n      return (\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n          {imgs}\n        </Grid>\n      )\n    }\n  }\n  function returnLoadedImageList() {\n    var imgs = []\n    for (let l = 0; l < loadedImages.length; l++) {\n      if (loadedImages[l].item.props.docId === selectedTabDocId) {\n        imgs.push(\n          <TableBody>\n            <TableRow>\n              <TableCell>\n                {loadedImages[l].item}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell align=\"center\">\n                <IconButton onClick={() => deleteLoadedImage(loadedImages[l].item)}>\n                  <DeleteForeverIcon fontSize=\"Large\" style={{ color: \"black\", margin: 0 }} />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        )\n      }\n    }\n    if (Object.keys(imgs).length !== 0) {\n      return (\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\n          {imgs}\n        </Grid>\n      )\n    }\n  }\n  function scannedImgClick(name) {\n    for (let l = 0; l < scannedImages.length; l++) {\n      if (scannedImages[l].item.props.name === name) {\n        console.log(\"IMG\", scannedImages[l])\n        selectedImg = {\n          name: scannedImages[l].item.props.name,\n          height: \"750\",\n          width: \"auto\",\n          src: scannedImages[l].item.props.src\n        }\n      }\n    }\n    handleOpenModal()\n    let newId = getUUID()\n    setUpdateState(newId)\n  }\n  function loadedImgClick(name) {\n    for (let l = 0; l < loadedImages.length; l++) {\n      if (loadedImages[l].item.props.name === name) {\n        console.log(\"IMG\", loadedImages[l])\n        selectedImg = {\n          name: loadedImages[l].item.props.name,\n          height: \"750\",\n          width: \"auto\",\n          src: loadedImages[l].item.props.src\n        }\n      }\n    }\n    handleOpenModal()\n    let newId = getUUID()\n    setUpdateState(newId)\n  }\n  function showScanComponentClick() {\n    setShowScanComponent(true)\n  }\n  if (connectionFailed === true && showScanComponent === true && warningShowed === false) {\n    setWarningShowed(true)\n    swal({\n      text: \"Программа для сканирования не найдена на вашем компьютере. Пожалуйста, скачайте, установите и запустите программу, затем обновите страницу\",\n      icon: \"warning\"\n    })\n  }\n  const uploadFile = e => {\n    console.log(\"UPLOAD\", e.target.files[0])\n    let nameId = getUUID()\n    let imgUrl = URL.createObjectURL(e.target.files[0])\n    let image = { item: <img docId={selectedTabDocId} name={nameId} height=\"200\" width=\"auto\" src={imgUrl} onClick={() => scannedImgClick(nameId)} /> }\n    fetch(imgUrl)\n      .then(res => res.blob())\n      .then(blob => {\n        let f = blob\n        f.name = nameId\n        pushNewBlob(f)\n        // console.log(\"BL\", f)\n      })\n    scannedImages.push(image)\n    setUpdateState(nameId)\n  }\n  // End of Document scanner functions\n\n  function handleCloseCurrentTab(tabId) {\n    // await setSelectedTab(tabId)\n    var selectedTabData = tabData.get(tabId)\n    if (selectedTabData !== undefined) {\n      var commandJson =\n      {\n        commandType: \"completeTask\",\n        session_id: selectedTabData.session_id,\n        process_id: selectedTabData.process_id,\n        taskID: selectedTabData.taskID,\n        variables: {\n          userAction: { value: \"cancel\" },\n          userId: { value: userId },\n          userRole: { value: userRole }\n        }\n      }\n      if (userRole === \"Администратор\") {\n        sendFieldValues(commandJson)\n        closeTab(tabId)\n      }\n      else {\n        if (selectedTabData.taskType === \"showRegSearchForm\" ||\n          selectedTabData.taskType === \"showDetailedSearchForm\" ||\n          selectedTabData.taskType === \"showIPRSearchForm\" ||\n          selectedTabData.taskType === \"showChildRegSearchForm\" ||\n          selectedTabData.taskType === \"showChildDetailedSearchForm\" ||\n          selectedTabData.taskType === \"showChildIPRSearchForm\" ||\n          selectedTabData.taskType === \"searchChildDetailedForm\" ||\n          selectedTabData.taskType === \"searchAdultsDetailedForm\" ||\n          selectedTabData.taskType === \"showSearchUser\" ||\n          selectedTabData.taskType === \"showSearchAppealsForm\" ||\n          selectedTabData.taskType === \"showSearchComplaintsForm\" ||\n          selectedTabData.taskType === \"error\") {\n          sendFieldValues(commandJson)\n          closeTab(tabId)\n        }\n        else if (selectedTabData.taskType === \"showRegForm\" && selectedTabData.formType === \"view\") {\n          sendFieldValues(commandJson)\n          closeTab(tabId)\n        }\n        else if (selectedTabData.taskType === \"showPersonForm\" && selectedTabData.selectedDoc === null) {\n          sendFieldValues(commandJson)\n          closeTab(tabId)\n        }\n        else handleOpenSwal(\"Вы действительно хотите закрыть вкладку?\", { yes: \"Да\", no: \"Нет\" }, tabId)\n      }\n\n    }\n  }\n  // Custom allert component\n  function handleOpenSwal(text, swalButtons, tabId) {\n    return (\n      swal({\n        text: text,\n        icon: \"warning\",\n        buttons: swalButtons\n      })\n        .then((click) => {\n          if (click === \"yes\") {\n            console.log(\"CLICK\", click)\n            handleCloseCurrentTabModal(tabId)\n          } else {\n            console.log(\"CLICK\", click)\n          }\n        })\n    )\n  }\n  // Close current tab from opened alert component\n  function handleCloseCurrentTabModal(tabId) {\n    var selectedTabData = tabData.get(tabId)\n    var commandJson =\n    {\n      commandType: \"completeTask\",\n      session_id: selectedTabData.session_id,\n      process_id: selectedTabData.process_id,\n      taskID: selectedTabData.taskID,\n      variables: {\n        userAction: { value: \"cancel\" },\n        userId: { value: userId },\n        userRole: { value: userRole }\n      }\n    }\n    // if(selectedTabData.taskType === \"showDetailedForm\" && selectedTabData.docListIPR.length === 0){\n    //   // handleModalClose()\n    //   handleOpenSwal(\"Необходимо создать ИПР!\", {ok: \"Ок\"})\n    // } \n    // else if(selectedTabData.taskType === \"showDetailedForm\" && selectedTabData.docListIPR === \"null\" && selectedTabData.formType === \"view\"){\n    //   // handleModalClose()\n    //   handleOpenSwal(\"Необходимо создать ИПР!\", {ok: \"Ок\"})\n    // } \n    // else if(selectedTabData.taskType === \"showIPRForm\" && selectedTabData.userAction === \"ipr\" && selectedTabData.formType === \"edit\"){\n    //   // handleModalClose()\n    //   handleOpenSwal(\"Необходимо создать ИПР!\", {ok: \"Ок\"})\n    // } \n    // else {\n    sendFieldValues(commandJson)\n    // handleModalClose()\n    closeTab(tabId)\n    // }\n    // else if(selectedTabData.taskType === \"showDetailedForm\" && selectedTabData.formType === \"view\"){\n    //   alert(\"\")\n    // } \n  }\n  function sendFieldValues(commandJson) {\n    if (socket.readyState === socket.OPEN) {\n      clearTabData(commandJson.process_id)\n      if (commandJson.variables !== undefined) {\n        if (commandJson.variables[\"userAction\"][\"value\"] === \"cancel\") {\n          closeTab(selectedTab)\n          socket.send(JSON.stringify(commandJson))\n        }\n        else if (commandJson.variables[\"authorization\"] !== undefined) {\n          commandJson.variables[\"authorization\"][\"value\"] = \"Bearer \" + keycloak.token\n          socket.send(JSON.stringify(commandJson))\n          console.log(\"HOME AUTH\", commandJson)\n        }\n        else {\n          socket.send(JSON.stringify(commandJson))\n          console.log(\"HOME SEND\", commandJson)\n        }\n      }\n      else {\n        socket.send(JSON.stringify(commandJson))\n        console.log(\"HOME SEND\", commandJson)\n      }\n    }\n    else {\n      // alert(\"Проблема с соединением повторная попытка...\")\n      setSocket(null)\n    }\n    setCurrTaskId(\"\")\n  }\n  // wrap up menu items\n  function handleOpenMenuClick(name) {\n    // console.log(\"Event\", name)\n    for (var i = 0; i < menuItemStates.length; i++) {\n      if (menuItemStates[i].name === name) {\n        if (menuItemStates[i].state === true) {\n          menuItemStates[i].state = false\n        }\n        else {\n          menuItemStates[i].state = true\n        }\n      }\n    }\n    setOpennav(!opennav)\n  }\n  // launch process related to menu button\n  function handleMenuButtonClick(button) {\n    console.log(\"Menu button clicked\", button)\n    if (button.name === \"ClearEnumData\" || button.name === \"Redeploy\") {\n      const commandJson =\n      {\n        commandType: button.commandType,\n        userRole: userRole,\n        userId: userId\n      }\n      sendFieldValues(commandJson)\n    }\n    else {\n      if (tabs.length >= 5) {\n        callErrorToast(\"ВНИМАНИЕ не открывайте более 5 вкладок это приводит к замедлению работы системы!\")\n      }\n      else {\n        var process_id = getUUID()\n        let updatedTabs = tabs.slice()\n        updatedTabs.push({ id: process_id, name: process_id, label: button.parentLabel + \" \" + tabCounter })\n        setTabs(updatedTabs)\n        setSelectedTab(process_id)\n\n        const commandJson =\n        {\n          commandType: button.commandType,\n          processKey: button.processKey,\n          process_id: process_id,\n          session_id: session_id,\n          variables: {\n            user_session_id: { value: session_id },\n            process_id: { value: process_id },\n            userAction: { value: \"findDocument\" },\n            docDef: { value: button.docDef },\n            userId: { value: userId },\n            userRole: { value: userRole },\n            tabLabel: { value: button.parentLabel },\n            authorization: { value: \"Bearer \" + keycloak.token },\n          }\n        }\n        sendFieldValues(commandJson)\n        console.log(\"Menu Button \", commandJson)\n        setTabCounter(tabCounter + 1)\n      }\n    }\n  }\n  function getUUID() {\n    const uuidv1 = require(\"uuid/v1\")\n    return uuidv1()\n  }\n  async function handleTabChange(event, newValue) {\n    setSelectedTab(newValue)\n    setShowScanComponent(false)\n    console.log(\"TAB CHANGE\", newValue)\n  }\n  function clearTabData(process_id) {\n    tabData.remove(process_id)\n    setCurrTaskId(\"\")\n    console.log(\"Clearing TabData\", tabData, \"ID\", process_id)\n  }\n  // close selected tab clear it\"s data from cache & change tab counter\n  function closeTab(process_id) {\n    if (process_id !== undefined) {\n      console.log(\"Closing TAB\", process_id)\n      let updatedTabs = tabs.slice()\n      for (var i = 0; i < updatedTabs.length; i++) {\n        if (updatedTabs[i].id === process_id) {\n          // console.log(\"INDEX\", i)\n          updatedTabs.splice(i, 1)\n        }\n      }\n      if (updatedTabs[0] === undefined) {\n        setSelectedTab(null)\n        setTabCounter(1)\n      }\n      else setSelectedTab(updatedTabs[0].id)\n      setTabs(updatedTabs)\n    }\n    // console.log(\"Closing TAB\", process_id)\n    let updatedTabs = tabs.slice()\n    for (i = 0; i < updatedTabs.length; i++) {\n      if (updatedTabs[i].id === process_id) {\n        // console.log(\"INDEX\", i)\n        updatedTabs.splice(i, 1)\n      }\n    }\n    if (Object.keys(updatedTabs).length === 0) {\n      setSelectedTab(null)\n      setTabCounter(1)\n    }\n    else {\n      setSelectedTab(updatedTabs[0].id)\n      setTabs(updatedTabs)\n    }\n  }\n  // Creating Menu Levels 1-3\n  function getLevel1Items(level1, index) {\n    // console.log(\"Creating Menu menuItemStates\", menuItemStates)\n    if (level1.level2 === undefined) {\n      if (level1.name === \"ClearEnumData\") {\n        if (userId === \"dced7bea-8a93-4baf-964b-232e75a758c5\") {\n          return (\n            <ListItem button\n              className={classesnav.level1}\n              onClick={() => handleMenuButtonClick(level1)}\n            >\n              <ExitToAppIcon />\n              <div className={classesnav.listItemText}>{openDrawer === true ? level1.label : \"\"}</div>\n            </ListItem>\n          )\n        }\n      }\n      else {\n        return (\n          <ListItem button\n            className={classesnav.level1}\n            onClick={() => handleMenuButtonClick(level1)}\n          >\n            <ExitToAppIcon />\n            <div className={classesnav.listItemText}>{openDrawer === true ? level1.label : \"\"}</div>\n          </ListItem>\n        )\n      }\n\n    }\n    else {\n      for (var i = 0; i < menuItemStates.length; i++) {\n        if (menuItemStates[i].name === level1.name) {\n          return (\n            <List>\n              <ListItem button\n                className={classesnav.level1}\n                onClick={() => handleOpenMenuClick(level1.name)}\n              >\n                <AddCircleIcon style={{ height: 20, width: 20 }} />\n                <div className={classesnav.listItemText} style={{ \"fontWeight\": \"bold\" }}>{openDrawer === true ? level1.label : \"\"}</div>\n                {(menuItemStates[i].state === true) ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n              <Collapse in={menuItemStates[i].state} timeout=\"auto\" unmountOnExit>\n                {level1.level2.map((level2Item, index) =>\n                  getLevel2Items(level2Item, index)\n                )}\n              </Collapse>\n            </List>\n          )\n        }\n      }\n    }\n  }\n  function getLevel2Items(level2, index) {\n    // console.log(\"Level2\", level2)\n    if (level2.level3 === undefined) {\n      return (\n        <ListItem button\n          className={classesnav.level2}\n          onClick={() => handleMenuButtonClick(level2)}\n        >\n          <ExitToAppIcon style={{ height: 20 }} />\n          <div className={classesnav.listItemText}>{openDrawer === true ? level2.label : \"\"}</div>\n        </ListItem>\n      )\n    }\n    else {\n      for (var i = 0; i < menuItemStates.length; i++) {\n        if (menuItemStates[i].name === level2.name) {\n          return (\n            <List component=\"div\" disablePadding>\n              <ListItem button\n                className={classesnav.level2}\n                onClick={() => handleOpenMenuClick(level2.name)}\n              >\n                <AddCircleIcon style={{ height: 20 }} />\n                <div className={classesnav.listItemText} style={{ \"fontWeight\": \"bold\" }}>{openDrawer === true ? level2.label : \"\"}</div>\n                {(menuItemStates[i].state === true) ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n              <Collapse in={menuItemStates[i].state} timeout=\"auto\" unmountOnExit>\n                {level2.level3.map((level3Item, index) =>\n                  getLevel3Items(level3Item, index)\n                )}\n              </Collapse>\n            </List>\n          )\n        }\n      }\n    }\n  }\n  function getLevel3Items(level3, index) {\n    return (\n      <ListItem button\n        className={classesnav.level3}\n        onClick={() => handleMenuButtonClick(level3)}\n      >\n        <ExitToAppIcon style={{ height: 20 }} />\n        <div className={classesnav.listItemText}>{openDrawer === true ? level3.label : \"\"}</div>\n      </ListItem>\n    )\n  }\n  // Getting authenticated user profile\n  if (userId === null) {\n    keycloak.loadUserProfile().success(function (profile) {\n      let curUserId = profile.attributes.userId[0]\n      let curOrganizationId = profile.attributes.organizationId[0]\n      let curUserRole = profile.attributes.userRole[0]\n      let curUserFirstName = profile.firstName\n      let curUserLastName = profile.lastName\n      let curUserName = curUserFirstName + \" \" + curUserLastName.substring(0, 1) + \".\"\n      setUserId(curUserId)\n      setOrganizationId(curOrganizationId)\n      setUserRole(curUserRole)\n      setUserName(curUserName)\n      console.log(\"PROFILE: \", profile)\n    }).error(function () {\n      console.log(\"Failed to load user profile\")\n    })\n  }\n  if (menuItemStates.length === 0) {\n    return (\n      <div align=\"center\" style={{ paddingTop: 20 }}>\n        <CircularProgress />\n        <div>loading...</div>\n      </div>\n    )\n  }\n  // if (userId === null) return <div>No user</div>\n  // console.log(\"Home\", selectedTab)\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, openDrawer && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, openDrawer && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            ИСМСЭК\n          </Typography>\n          <td style={{ paddingRight: 15 }}>\n            <Badge badgeContent={childList} color={childList > 0 ? \"secondary\" : \"primary\"}>\n              <Notification\n                style={{ cursor: \"pointer\" }}\n                fontSize=\"large\"\n                // color={urgentUnreadInstructions === true ? \"secondary\" : \"white\"}\n                onClick={() => handleMenuButtonClick({ commandType: \"launchProcess\", processKey: \"process_203b2yt8-b7kv-1e45-6rrt-ub403kj9dla0\", parentLabel: \"Мед акты(Дт)\" })}\n              />\n            </Badge>\n          </td>\n          <AccountCircleIcon fontSize=\"large\" />\n          {!!keycloak.authenticated && (\n            <table>\n              <tbody>\n                <tr>\n                  <td>\n                    <table>\n                      <tbody>\n                        <tr>\n                          <td style={{ fontSize: 12 }}>ФИО:</td>\n                          <td style={{ fontSize: 12 }}>{userName}</td>\n                        </tr>\n                        <tr>\n                          <td style={{ fontSize: 12 }}>Роль:</td>\n                          <td style={{ fontSize: 12 }}>{userRole}</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </td>\n                  <td>\n                    <Typography>\n                      <IconButton color=\"inherit\" style={{ fontSize: 14 }} onClick={() => keycloak.logout()}>\n                        Выйти\n                      </IconButton>\n                    </Typography>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            // <Typography>\n            //   {userName}\n            //   <IconButton color=\"inherit\" style={{ fontSize: 14 }} onClick={() => keycloak.logout()}>\n            //     Выйти\n            //   </IconButton>\n            // </Typography>\n          )}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !openDrawer && classes.drawerPaperClose),\n        }}\n        open={openDrawer}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        {routes.map((level1, index) => (\n          getLevel1Items(level1, index)\n        ))}\n      </Drawer>\n      <main className={classes.content}>\n        <a name=\"top\" />\n        {/* <div className={classes.appBarSpacer} /> */}\n        <Grid style={{ paddingLeft: (openDrawer === true) ? drawerWidth : 65 }}>\n          <AppBar color=\"default\" style={{ paddingLeft: (openDrawer === true) ? drawerWidth : 65 }}>\n            {/* <Tabs\n              position=\"fixed\"\n              value={selectedTab}\n              onChange={handleTabChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n              aria-label=\"scrollable auto tabs example\"\n            > */}\n            <Tabs\n                key={currTaskId}\n                style={{ height: \"110px\", paddingTop: \"160px\" }}\n                position=\"fixed\"\n                value={selectedTab}\n                // onChange={(event, newValue)=> handleTabChange(event, newValue)}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n              >\n              {tabs.map((tab, index) => (\n                <Tab\n                  key={tab.id}\n                  label={<div style={{ fontSize: 11 }}>{tab.label}<IconButton onClick={() => handleCloseCurrentTab(tab.id)}>\n                    <CloseIcon style={{ fontSize: \"medium\", color: \"black\" }} />\n                  </IconButton></div>}\n                  value={tab.id}\n                  {...a11yProps(tab.id)}\n                >\n                </Tab>\n              ))}\n            </Tabs>\n          </AppBar>\n\n          {webSocketMessage !== null &&\n            tabs.map((tab, index) => (\n              <TabPanel\n                position=\"fixed\"\n                currentTab={tab.id}\n                selectedTab={selectedTab}\n                key={tab.id}\n                style={{ paddingTop: 60, paddingLeft: 10 }}\n              >\n                <MainComponent\n                  userId={userId}\n                  organizationId={organizationId}\n                  userRole={userRole}\n                  selectedTab={selectedTab}\n                  showScanComponent={showScanComponent}\n                  id={tab.id}\n                  key={tab.id}\n                  adminMessage={tabData.get(tab.id)}\n                  sendFieldValues={sendFieldValues}\n                  handleCloseCurrentTab={handleCloseCurrentTab}\n                  clearTabData={clearTabData}\n                  showScanComponentClick={showScanComponentClick}\n                  callSuccessToast={callSuccessToast}\n                  callErrorToast={callErrorToast}\n                // closeTab = {closeTab}\n                >\n                </MainComponent>\n              </TabPanel>\n            ))\n          }\n          {showScanComponent === true &&\n            <div id=\"scanner\" style={{ paddingLeft: 40, paddingBottom: 40, paddingRight: 40 }}>\n              {connectionFailed === false &&\n                <Button\n                  id=\"1234\"\n                  variant=\"outlined\"\n                  onClick={() => scannerButtonClick(\"scanImage\")}\n                  style={{\n                    margin: 3,\n                    backgroundColor: \"#D3D3FE\"\n                  }}\n                  startIcon={<ScannerIcon />}\n                >Сканировать\n                </Button>\n              }\n              {connectionFailed === true &&\n                <Button\n                  component=\"a\"\n                  href=\"../Scan_App_SetUp.msi\"\n                  download\n                  variant=\"outlined\"\n                  style={{\n                    margin: 3,\n                    backgroundColor: \"#D3D3FE\"\n                  }}\n                  startIcon={<GetAppIcon />}\n                >Скачать\n                </Button>\n              }\n              <Button\n                variant=\"outlined\"\n                onClick={() => scannerButtonClick(\"saveDocument\")}\n                style={{\n                  margin: 3,\n                  backgroundColor: \"#D1FBD1\"\n                }}\n                startIcon={<SaveIcon />}\n              >Сохранить\n              </Button>\n              <Button\n                variant=\"outlined\"\n                onClick={() => scannerButtonClick(\"loadPreviouslyScannedImages\")}\n                style={{\n                  margin: 3,\n                  backgroundColor: \"#D1FBD1\"\n                }}\n                startIcon={<CloudDownloadIcon />}\n              >Загрузить ранее отсканированные\n              </Button>\n              <input\n                accept=\"image/*\"\n                className={classes.input}\n                id=\"contained-button-file\"\n                multiple\n                type=\"file\"\n                onChange={uploadFile}\n                style={{ display: \"none\" }}\n              />\n              <label htmlFor=\"contained-button-file\">\n                <Button\n                  variant=\"outlined\"\n                  // color=\"primary\" \n                  component=\"span\"\n                  startIcon={<SearchIcon />}\n                  style={{\n                    margin: 3,\n                    backgroundColor: \"#D1FBD1\"\n                  }}\n                >Выбрать\n                </Button>\n              </label>\n\n              <Table size=\"small\">\n                <TableHead style={{ backgroundColor: \"#D3D3FE\" }}>\n                  <TableRow>\n                    <TableCell>Отсканированные/загруженные файлы</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell>{returnImageList()}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n\n              <Table size=\"small\">\n                <TableHead style={{ backgroundColor: \"#D3D3FE\" }}>\n                  <TableRow>\n                    <TableCell>Загруженные файлы</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell>{showLoading === true &&\n                      <Grid container direction=\"row\" justify=\"center\" spacing={0}>\n                        <Grid item xs={12}>\n                          <Card>\n                            <LinearProgress />\n                          </Card>\n                        </Grid>\n                      </Grid>\n                    }\n                      {returnLoadedImageList()}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n\n              <Modal\n                style={{ paddingLeft: \"500px\" }}\n                open={openModal}\n                onClose={handleCloseModal}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n              >\n                <div className={classes.imagePaper}>\n                  <img name={selectedImg.name} height={selectedImg.height} width=\"auto\" src={selectedImg.src} />\n                </div>\n              </Modal>\n              <div>{showImage}</div>\n            </div>\n          }\n        </Grid>\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n          {\"Copyright © \"}\n          {new Date().getFullYear()}\n          {\".\"}\n        </Typography>\n        {/* <ToastContainer /> */}\n        <div><Toaster /></div>\n        <IconButton href=\"#top\" style={hrefStyleTop} className={classes.hrefStyleTop}>\n          <ArrowUpwardIcon />\n        </IconButton>\n        <IconButton href=\"#bottom\" style={hrefStyleBottom} className={classes.hrefStyleBottom}>\n          <ArrowDownwardIcon />\n        </IconButton>\n        <a name=\"bottom\" />\n      </main>\n    </div >\n  );\n};\n"]},"metadata":{},"sourceType":"module"}