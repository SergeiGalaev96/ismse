{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\ismse\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\ismse\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\ismse\\\\src\\\\components\\\\ViewForm\\\\ViewForm.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Import material and react components\nimport React from \"react\";\nimport Select from 'react-select';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\"; // import Typography from '@material-ui/core/Typography';\n\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText'; // Import libraries\n\nimport TableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport ruLocale from \"date-fns/locale/ru\";\nimport moment from \"moment\"; // Import custom components\n\nimport Person from \"../Person/Person.jsx\";\nimport Address from \"../../components/Address/Address.jsx\";\nimport GridForm from \"../../components/GridForm/GridForm.jsx\";\nimport Download from \"../../components/Download/Download.jsx\";\n\nfunction NumberFormatCustom(props) {\n  const inputRef = props.inputRef,\n        onChange = props.onChange,\n        other = _objectWithoutProperties(props, [\"inputRef\", \"onChange\"]);\n\n  return React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    decimalSeparator: \",\",\n    isNumericString: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nasync function tableToPdf(tableId) {\n  let mywindow = window.open('', 'PRINT', 'height=650, width=900, top=100, left=150');\n  mywindow.document.write(\"<html><head><title>\".concat('Экспорт в PDF', \"</title>\"));\n  mywindow.document.write('</head><body >');\n  mywindow.document.write(document.getElementById(tableId).innerHTML);\n  mywindow.document.write('</body></html>');\n  mywindow.document.close(); // necessary for IE >= 10\n  // mywindow.focus(); // necessary for IE >= 10*/\n\n  mywindow.print(); // mywindow.close();\n\n  return true;\n}\n\nfunction RegNoMask(props) {\n  const inputRef = props.inputRef,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return React.createElement(MaskedInput, Object.assign({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    },\n    mask: [/[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/],\n    placeholderChar: '\\u2000',\n    showMask: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }));\n} // const useStyles = makeStyles((theme) => ({\n//   paper: {\n//     width: \"100%\",\n//     height: 200,\n//     overflow: 'auto',\n//   },\n//   button: {\n//     // width: \"5%\",\n//     margin: theme.spacing(0),\n//   }\n// }))\n\n\nclass ViewForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeSubDocument = (name, value) => {\n      let subDoc = this.state.subDocument;\n      subDoc[name] = value;\n      this.setState({\n        subDocument: subDoc\n      });\n      console.log(\"Person Data\", name, value);\n    };\n\n    this.componentChange = event => {\n      console.log(\"COM CHANGE\", event.target.name, event.target.value);\n    };\n\n    this.handleChange = event => {\n      // console.log(\"HANDLE TEXT CHANGE\", event.target.name, event.target.value)\n      let fieldValue = this.state.fieldValue;\n\n      if (event.target.name === \"RegNoAct\") {\n        let newValue = \"\";\n        let regex = /[0-9-№]/;\n\n        for (let key in event.target.value) {\n          if (regex.test(event.target.value[key]) === true) {\n            newValue = newValue + event.target.value[key];\n          }\n        }\n\n        fieldValue[event.target.name] = newValue; // console.log(\"newValue\", newValue, fieldValue)\n      } else {\n        fieldValue[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.regNoChange = event => {\n      // event.preventDefault()\n      var value = event.target.value.trim();\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = value;\n      this.setState({\n        fieldValue: fieldValue\n      }); // console.log(\"REGNOACT\", event.target.value)\n      // if(event.target.value === \"\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\"){\n      //   console.log(\"REGNO null\")\n      //   let fieldValue = this.state.fieldValue\n      //   fieldValue[event.target.name] = null\n      //   this.setState({fieldValue: fieldValue})\n      // }\n      // else{\n      //   for(let i=value.length; i>0; i--){\n      //     let lastChar = value.substring(i -1, i)\n      //     console.log(\"LAST\", lastChar)\n      //     if(lastChar !== '\\u2000'){\n      //       let fieldValue = this.state.fieldValue\n      //       fieldValue[event.target.name] = value\n      //       this.setState({fieldValue: fieldValue})\n      //       break\n      //     }\n      //     value = value.substring(0, value.length -1)\n      //   }\n      // }\n      // REGEX\n      // let regex = /[0-9-]/\n      // let lastChar = value.substring(value.length -1, value.length)\n      // console.log(\"LAST\", lastChar)\n      // // let chars = event.target.value.split('')\n      // // let char = chars.pop()\n      // if(!regex.test(lastChar)){\n      //   // value = chars.join('')\n      //   console.log(\"not valid\", lastChar)\n      // }\n      // else{\n      //   let fieldValue = this.state.fieldValue\n      //   fieldValue[event.target.name] = value\n      //   this.setState({fieldValue: fieldValue})\n      // }\n    };\n\n    this.componentIntChange = event => {\n      // console.log(\"CHANGE\", event.target.name, event.target.value)\n      if (event.target.value > 2147483646) {\n        let value = event.target.value;\n        let maxValue = value.substring(0, value.length - 1); // console.log(\"SLICE\", value, maxValue)\n\n        let fieldValue = this.state.fieldValue;\n        fieldValue[event.target.name] = maxValue;\n        this.setState({\n          fieldValue: fieldValue\n        });\n      } // else{\n      //   let fieldValue = this.state.fieldValue\n      //   console.log(\"CHANGE\", event.target.name, event.target.value)\n      //   fieldValue[event.target.name] = event.target.value\n      //   this.setState({fieldValue: fieldValue})\n      // }\n\n    };\n\n    this.handleSelectChange = event => {\n      let fstate = this.state;\n\n      if (event.name === \"Occupation\") {\n        if (event.value === \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\n          for (let i = 0; i < fstate.Form.sections.length; i++) {\n            if (fstate.Form.sections[i].name === \"HowToDoJob\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = true;\n              }\n            } else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = true;\n              }\n            }\n          }\n        }\n\n        if (event.value !== \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\n          for (let i = 0; i < fstate.Form.sections.length; i++) {\n            if (fstate.Form.sections[i].name === \"HowToDoJob\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = false;\n                fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false;\n              }\n            } else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = false;\n                fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false;\n              }\n            }\n          }\n        }\n      }\n\n      fstate.fieldValue[event.name] = event.value;\n      this.setState(fstate);\n      console.log(\"Option selected:\", event);\n    };\n\n    this.regionChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      fieldValue[\"District\"] = null;\n      fieldValue[\"subDistrict\"] = null;\n      fieldValue[\"Village\"] = null;\n      console.log(\"Region selected\", event.target.name);\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.districtChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      fieldValue[\"subDistrict\"] = null;\n      fieldValue[\"Village\"] = null;\n      console.log(\"District selected\", event.target.name);\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.subDistrictChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      fieldValue[\"Village\"] = null;\n      console.log(\"District selected\", event.target.name);\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.villageChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      console.log(\"Village selected\", event.target.name);\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.handCheckboxChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.checked;\n      this.setState({\n        fieldValue: fieldValue\n      }); // console.log(\"new checkbox status\", this.state.fieldValue[event.target.name])\n    };\n\n    this.handleToggle = (value, name) => () => {\n      const currentIndex = this.state.checked[name].indexOf(value);\n      const newChecked = [...this.state.checked[name]];\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      this.setState(_objectSpread({}, this.state.checked, {\n        [name]: newChecked\n      })); // setChecked({ ...checked, [name]: newChecked })\n    };\n\n    this.state = {\n      process_id: this.props.process_id,\n      session_id: this.props.session_id,\n      taskID: this.props.taskID,\n      taskType: this.props.taskType,\n      fieldValue: {},\n      subDocument: {},\n      enumData: this.props.enumData,\n      Form: null,\n      selectedDoc: JSON.parse(this.props.selectedDoc),\n      docId: null,\n      buttons: this.props.buttons,\n      gridForm: null,\n      IPRGridForm: this.props.IPRGridForm,\n      gridFormButtons: null,\n      userId: this.props.userId,\n      userRole: this.props.userRole,\n      organizationId: this.props.organizationId,\n      formType: this.props.formType,\n      person: null,\n      personFormType: this.props.personFormType,\n      personEnumData: this.props.personEnumData,\n      documentViewForm: this.props.documentViewForm,\n      docList: null,\n      docListIPR: null,\n      download: null,\n      size: this.props.size,\n      page: this.props.page,\n      SOAT: null,\n      // regNoMask: []\n      // TRANSFER LIST\n      transferList: {\n        \"cbd4b1f8-c225-48d6-997c-f2116f2d5122\": []\n      },\n      checked: {\n        \"cbd4b1f8-c225-48d6-997c-f2116f2d5122\": []\n      },\n      selectedTransferList: {\n        \"cbd4b1f8-c225-48d6-997c-f2116f2d5122\": []\n      } // classes: useStyles()\n\n    };\n    this.sendFieldValues = this.sendFieldValues.bind(this);\n    this.buttonClick = this.buttonClick.bind(this);\n    this.parseDate = this.parseDate.bind(this);\n    this.changeSubDocument = this.changeSubDocument.bind(this);\n    this.rowsPageChange = this.rowsPageChange.bind(this);\n    this.handleCloseCurrentTab = this.handleCloseCurrentTab.bind(this);\n    this.clearTabData = this.clearTabData.bind(this);\n    this.showScanComponentClick = this.showScanComponentClick.bind(this);\n    this.pushNewBlobs = this.pushNewBlobs.bind(this);\n    this.pushNewImages = this.pushNewImages.bind(this);\n  }\n\n  handleCloseCurrentTab(process_id) {\n    this.props.handleCloseCurrentTab(process_id);\n  }\n\n  showScanComponentClick() {\n    this.props.showScanComponentClick();\n  }\n\n  sendFieldValues(commandJson) {\n    this.props.sendFieldValues(commandJson);\n  }\n\n  pushNewBlobs(blobs) {\n    this.props.pushNewBlobs(blobs);\n  }\n\n  pushNewImages(images) {\n    this.props.pushNewImages(images);\n  }\n\n  async componentDidUpdate(prevProps) {\n    // if (!this.state.Form) {\n    //   this.setDataFromProps()\n    // }\n    if (this.state.download !== null) {\n      if (this.state.download === \"downloadExcel\") {\n        TableToExcel.convert(document.getElementById(\"TableToDownload\"));\n        this.setState({\n          download: null\n        });\n      } else {\n        tableToPdf(\"TableToDownload\");\n        this.setState({\n          download: null\n        });\n      }\n    }\n  }\n\n  async componentDidMount() {\n    console.log(\"VIEW FORM PROPS\", this.props); // Set data from props to local state\n\n    try {\n      let fstate = this.state;\n      fstate.Form = this.props.Form;\n      fstate.gridForm = this.props.gridForm;\n\n      if (this.props.selectedDoc !== undefined && this.props.selectedDoc !== \"null\" && this.props.selectedDoc !== null) {\n        var sDoc = JSON.parse(this.props.selectedDoc);\n        console.log(\"S DOC\", sDoc); //SET PERSON DATA TO PERSON\n\n        if (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\") {\n          for (let i = 0; i < sDoc.attributes.length; i++) {\n            if (sDoc.attributes[i].name === \"AdultsMedicalCart\") {\n              for (let l = 0; l < sDoc.attributes[i].subDocument.attributes.length; l++) {\n                if (sDoc.attributes[i].subDocument.attributes[l].name === \"Person\") {\n                  fstate.person = sDoc.attributes[i].subDocument.attributes[l].subDocument;\n                }\n              }\n            }\n          }\n        } else {\n          for (let i = 0; i < sDoc.attributes.length; i++) {\n            if (sDoc.attributes[i].name === \"Person\") {\n              // console.log(\"PERSON\", sDoc.attributes[i].subDocument)\n              if (sDoc.attributes[i].subDocument !== null && sDoc.attributes[i].subDocument !== undefined) {\n                fstate.person = sDoc.attributes[i].subDocument;\n              }\n            }\n          }\n        } // SET FIELD VALUES\n\n\n        for (let i = 0; i < sDoc.attributes.length; i++) {\n          if (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\") {\n            if (sDoc.attributes[i].name === \"AdultsMedicalCart\") {\n              fstate.fieldValue.AdultsMedicalCart = sDoc.attributes[i].subDocument.id;\n\n              for (let l = 0; l < sDoc.attributes[i].subDocument.attributes.length; l++) {\n                if (sDoc.attributes[i].subDocument.attributes[l].value !== null) {\n                  fstate.fieldValue[sDoc.attributes[i].subDocument.attributes[l].name] = sDoc.attributes[i].subDocument.attributes[l].value;\n                }\n              }\n            } else {\n              if (sDoc.attributes[i].value !== null) {\n                fstate.fieldValue[sDoc.attributes[i].name] = sDoc.attributes[i].value;\n              }\n            }\n          } else {\n            if (sDoc.attributes[i].value !== null) {\n              fstate.fieldValue[sDoc.attributes[i].name] = sDoc.attributes[i].value;\n            }\n          }\n        }\n      } // SET PERSON DATA INTO EMPTY IPR FORM\n\n\n      if (this.props.person !== undefined && this.props.person !== \"null\" && this.props.person !== null) {\n        var personData = JSON.parse(this.props.person);\n        fstate.person = personData;\n        fstate.fieldValue.Person = personData.id;\n      }\n\n      if (this.props.docList !== undefined) {\n        fstate.docList = JSON.parse(this.props.docList);\n      }\n\n      if (this.props.docListIPR !== undefined) {\n        fstate.docListIPR = JSON.parse(this.props.docListIPR);\n      }\n\n      if (this.props.SOAT !== undefined) {\n        fstate.SOAT = this.props.SOAT;\n      }\n\n      if (this.props.gridFormButtons !== undefined) {\n        fstate.gridFormButtons = this.props.gridFormButtons;\n      }\n\n      if (this.props.docId !== null || this.props.docId !== \"null\" || this.props.docId !== undefined) {\n        fstate.docId = this.props.docId;\n      } // this.setState(fstate)\n      // UPDAETE SOME DATA if nesessary\n\n\n      if (this.props.userAction === \"reexamination\") {\n        var newDate = new Date();\n        var dd = String(newDate.getDate()).padStart(2, '0');\n        var mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n        var yyyy = newDate.getFullYear();\n        var convertedDate = String(dd + '.' + mm + '.' + yyyy);\n        fstate.fieldValue[\"Date\"] = convertedDate;\n        fstate.fieldValue[\"RegNoAct\"] = null;\n        fstate.fieldValue[\"ExaminationPrRe\"] = \"8d71baae-b834-42e5-be87-7f5637cc46d8\";\n        fstate.fieldValue[\"goal1\"] = false;\n        fstate.fieldValue[\"goal2\"] = false;\n        fstate.fieldValue[\"goal3\"] = false;\n        fstate.fieldValue[\"goal4\"] = null;\n        fstate.fieldValue[\"goal5\"] = false;\n        fstate.fieldValue[\"goal6\"] = false;\n        fstate.fieldValue[\"goalAnother\"] = null;\n        fstate.fieldValue[\"DisabilityGroup\"] = null; // fstate.fieldValue[\"ExamDateFrom\"] = \"NaN.NaN.NaN\"\t\n        // fstate.fieldValue[\"ExamDateTo\"] = \"NaN.NaN.NaN\"\t\n        // fstate.fieldValue[\"ExamStartDate\"] = \"NaN.NaN.NaN\"\n        // fstate.fieldValue[\"ExamOfDate\"] = \"NaN.NaN.NaN\"\n        // fstate.fieldValue[\"ExamFinishDate\"] = \"NaN.NaN.NaN\"\n\n        fstate.fieldValue[\"ExamDateFrom\"] = undefined;\n        fstate.fieldValue[\"ExamDateTo\"] = undefined;\n        fstate.fieldValue[\"ExamStartDate\"] = undefined;\n        fstate.fieldValue[\"ExamOfDate\"] = undefined;\n        fstate.fieldValue[\"ExamFinishDate\"] = undefined;\n        fstate.fieldValue[\"ReferenceNumber\"] = undefined;\n      }\n\n      if (fstate.Form !== null) {\n        if ((fstate.Form.formName === \"AdultsIPRForm\" || fstate.Form.formName === \"ChildIPRForm\") && fstate.fieldValue.AdultsMedicalCart === undefined) {\n          fstate.fieldValue.AdultsMedicalCart = this.props.docId;\n        }\n\n        if ((fstate.person === null || this.props.person !== \"null\") && fstate.Form.formName === \"TransferMedicalCertificateForm\" && fstate.docList !== \"[]\") {\n          var docListData = JSON.parse(this.props.docList); // console.log(\"docListData\", docListData)\n\n          for (let l = 0; l < docListData[0].attributes.length; l++) {\n            if (docListData[0].attributes[l].name === \"Person\") {\n              fstate.person = docListData[0].attributes[l].subDocument;\n            }\n          }\n        }\n\n        if (fstate.fieldValue[\"MseName\"] === undefined && fstate.Form.formName !== \"TransferMedicalCertificateForm\" && fstate.Form.formName !== \"AdultsDetailedSearchForm\" && fstate.Form.formName !== \"AdultsIPRSearchForm\" && fstate.Form.formName !== \"ChildDetailedSearchForm\" && fstate.Form.formName !== \"AdultsIPRSearchForm\" && fstate.Form.formName !== \"AdultsRegistrationSearchForm\") {\n          fstate.fieldValue[\"MseName\"] = fstate.organizationId;\n        } // DISABLE 2 BLOCKS OF FORM /FROM INCOMING DATA\n\n\n        if (fstate.fieldValue[\"Occupation\"] !== \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\n          for (let i = 0; i < fstate.Form.sections.length; i++) {\n            if (fstate.Form.sections[i].name === \"HowToDoJob\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = false;\n                fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false;\n              }\n            } else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = false;\n                fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false;\n              }\n            }\n          }\n        }\n      }\n\n      if (this.props.taskType === \"showAdultsStatesSelectingForm\") {\n        fstate.fieldValue[\"userName\"] = this.props.userFullName;\n      }\n\n      if (fstate.fieldValue[\"Country\"] === undefined && this.props.SOAT !== null && this.props.SOAT !== undefined) {\n        fstate.fieldValue[\"Country\"] = \"4170000000000\";\n      } // SET PERSON DATA IF IT\"S null\n\n\n      if (fstate.person === null && (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\")) {\n        if (fstate.fieldValue[\"IPRNo\"] === undefined) {\n          fstate.fieldValue[\"IPRNo\"] = fstate.fieldValue[\"No\"];\n        }\n\n        for (let l = 0; l < fstate.selectedDoc.attributes.length; l++) {\n          if (fstate.selectedDoc.attributes[l].name === \"Person\") {\n            fstate.person = fstate.selectedDoc.attributes[l].subDocument; // fstate.fieldValue.Person = fstate.selectedDoc.attributes[l].subDocument.id\n          }\n        }\n      }\n\n      if (fstate.person === null && this.props.person !== undefined && this.props.person !== \"null\" && this.props.person !== null) {\n        personData = JSON.parse(this.props.person);\n        fstate.person = personData;\n        fstate.fieldValue.Person = personData.id;\n      } // SET DATE OF REGISTRATION DEFAULT CURRENT DAY\n\n\n      if (this.props.taskType === \"showRegForm\" || this.props.taskType === \"showChildRegForm\" || this.props.taskType === \"showDetailedForm\" || this.props.taskType === \"showChildDetailedForm\") {\n        if (fstate.fieldValue[\"Date\"] === undefined) {\n          let newDate = new Date();\n          let dd = String(newDate.getDate()).padStart(2, '0');\n          let mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n          let yyyy = newDate.getFullYear();\n          let convertedDate = String(dd + '.' + mm + '.' + yyyy);\n          fstate.fieldValue[\"Date\"] = convertedDate;\n        }\n      }\n\n      let newTrListOpts = this.createTransferListOptions(this.props.userTask.Form, this.props.userTask.enumData);\n      fstate.transferList = newTrListOpts.trList;\n      fstate.selectedTransferList = newTrListOpts.selTrList;\n      this.setState(fstate);\n    } catch (er) {\n      console.log(\"ERROR\", er);\n    }\n  }\n\n  createTransferListOptions(form, enums) {\n    let newTransferList = {};\n    let newSelectedTransferList = {};\n\n    for (let s = 0; s < form.sections.length; s++) {\n      for (let c = 0; c < form.sections[s].contents.length; c++) {\n        if (form.sections[s].contents[c].type === \"TransferList\") {\n          let newTrItems = [];\n          let newSelTrItems = [];\n          let enumDef = form.sections[s].contents[c].enumDef;\n\n          for (let e = 0; e < enums.length; e++) {\n            if (enums[e] !== null) {\n              if (enums[e].enumDef === enumDef) {\n                for (let d = 0; d < enums[e].data.length; d++) {\n                  newTrItems.push(enums[e].data[d].id);\n                }\n              }\n            } else {\n              this.props.callErrorToast(\"Ошибка сбора справочной информации \" + form.sections[s].contents[c].label);\n            }\n          }\n\n          newTransferList[enumDef] = newTrItems;\n          newSelectedTransferList[enumDef] = newSelTrItems;\n        }\n      }\n    }\n\n    return {\n      trList: newTransferList,\n      selTrList: newSelectedTransferList\n    };\n  }\n\n  async downloadDocument(type) {\n    this.setState({\n      download: type\n    });\n  } // Delete close component and delete its data from hash stared in home component\n\n\n  clearTabData(process_id) {\n    this.props.clearTabData(process_id);\n  } // Check field regNoAct if it's exist in database, it should be unique\n\n\n  async checkForRegNoAct(commandJson, length) {\n    if (this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined) {\n      this.props.callSuccessToast(\"Проверка № Медакта\");\n      var RegNoAct = {\n        attributes: [{\n          name: \"RegNoAct\",\n          value: this.state.fieldValue[\"RegNoAct\"],\n          type: \"Text\"\n        }]\n      };\n      console.log(\"BODY\", RegNoAct);\n      await fetch(\"api/Document/FilterDocumentsByDefId?defId=\" + this.state.Form.docDefId + \"&size=3&page=1&userId=\" + this.state.userId, {\n        headers: {\n          \"Accept\": \"application/x-www-form-urlencoded\",\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"POST\",\n        body: JSON.stringify(RegNoAct) // mode: 'no-cors'\n\n      }).then(response => {\n        response.text().then(stringResponse => {\n          var document = JSON.parse(stringResponse);\n          console.log(\"RESPONSE\", document); // this.sendFieldValues(commandJson)\n\n          if (document.length <= length) {\n            console.log(\"LENGTH\", document.length, length);\n            this.sendFieldValues(commandJson);\n            this.clearTabData(this.state.process_id);\n            this.props.callSuccessToast(\"Проверка завершена!\");\n          } else {\n            this.swAlert(\"Гражданин с таким № акта уже существует!\");\n          }\n        });\n      });\n    } else {\n      this.props.callErrorToast(\"Заполните поле \\\"№ акта по МСЭК\\\"\");\n    }\n  } // Handle changing of person document fields if it is enabled for input and set values to local state\n\n\n  // Returns random id\n  getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // Handling component changing without render all state, made for optimization\n\n\n  // DateTime component change handler\n  handleDateTimeChange(date, name) {\n    let fieldValue = this.state.fieldValue;\n\n    if (date !== null) {\n      var newDate = new Date(date);\n      var dd = String(newDate.getDate()).padStart(2, '0');\n      var mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n      var yyyy = newDate.getFullYear();\n      var convertedDate = String(dd + '.' + mm + '.' + yyyy); // console.log(\"CDATE\", convertedDate)\n\n      fieldValue[name] = convertedDate;\n      this.setState({\n        fieldValue: fieldValue\n      });\n    } else {\n      fieldValue[name] = undefined;\n      this.setState({\n        fieldValue: fieldValue\n      });\n    }\n  } // Convert date to approptiate format\n\n\n  parseDate(date) {\n    if (date !== undefined) {\n      var dd = date.substring(0, 2);\n      var mm = date.substring(3, 5);\n      var yyyy = date.substring(6, 10);\n      var convertedDate = String(yyyy + '-' + mm + '-' + dd);\n      var newDate = new Date(convertedDate); // \"2020-01-26\"\n\n      dd = String(newDate.getDate()).padStart(2, '0');\n      mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n      yyyy = newDate.getFullYear();\n      convertedDate = yyyy + '-' + mm + '-' + dd;\n    } // console.log(\"DATE\", convertedDate)\n\n\n    return convertedDate;\n  }\n\n  // Get name of address by its code\n  getAddressData(code) {\n    for (var i = 0; i < this.state.SOAT.countries.length; i++) {\n      if (code === this.state.SOAT.countries[i].code) {\n        return this.state.SOAT.countries[i].name;\n      } else {\n        for (var j = 0; j < this.state.SOAT.countries[i].regions.length; j++) {\n          if (code === this.state.SOAT.countries[i].regions[j].code) {\n            return this.state.SOAT.countries[i].regions[j].name;\n          } else {\n            for (var k = 0; k < this.state.SOAT.countries[i].regions[j].districts.length; k++) {\n              if (code === this.state.SOAT.countries[i].regions[j].districts[k].code) {\n                return this.state.SOAT.countries[i].regions[j].districts[k].name;\n              } else {\n                if (this.state.SOAT.countries[i].regions[j].districts[k].subDistricts !== undefined) {\n                  for (var l = 0; l < this.state.SOAT.countries[i].regions[j].districts[k].subDistricts.length; l++) {\n                    if (code === this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].code) {\n                      return this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].name;\n                    } else {\n                      if (this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages !== undefined) {\n                        for (var m = 0; m < this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages.length; m++) {\n                          if (code === this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages[m].code) {\n                            return this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages[m].name;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  } // Collecting all field values and return as attributes\n\n\n  getFieldValues() {\n    var attributes = [];\n\n    if (this.state.taskType === \"showIPRForm\" || this.state.taskType === \"showChildIPRForm\") {\n      console.log(\"IPR FORM\");\n\n      for (var key in this.state.fieldValue) {\n        if (key === \"AdultsMedicalCart\") {\n          attributes.push({\n            name: \"AdultsMedicalCart\",\n            value: this.state.fieldValue[key],\n            type: \"Doc\"\n          });\n        } else if (key === \"IPRNo\") {\n          attributes.push({\n            name: \"IPRNo\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else {\n          for (var section = 0; section < this.state.Form.sections.length; section++) {\n            for (var item = 0; item < this.state.Form.sections[section].contents.length; item++) {\n              if (key === this.state.Form.sections[section].contents[item].name) {\n                if (this.state.Form.sections[section].contents[item].edit === true) {\n                  attributes.push({\n                    name: this.state.Form.sections[section].contents[item].name,\n                    value: this.state.fieldValue[key],\n                    type: this.state.Form.sections[section].contents[item].type\n                  });\n                }\n              }\n            }\n          }\n        }\n      }\n    } else if (this.state.taskType === \"showIPRSearchForm\" || this.state.taskType === \"showChildIPRSearchForm\") {\n      var subDocumentAttributes = [];\n\n      for (key in this.state.fieldValue) {\n        if (this.state.fieldValue[key] !== null && this.state.fieldValue[key] !== \"\") {\n          if (key === \"Country\") {\n            subDocumentAttributes.push({\n              name: \"Country\",\n              value: this.state.fieldValue[key],\n              type: \"Text\"\n            });\n          } else if (key === \"Region\") {\n            subDocumentAttributes.push({\n              name: \"Region\",\n              value: this.state.fieldValue[key],\n              type: \"Text\"\n            });\n          } else if (key === \"District\") {\n            subDocumentAttributes.push({\n              name: \"District\",\n              value: this.state.fieldValue[key],\n              type: \"Text\"\n            });\n          }\n        }\n\n        for (let section = 0; section < this.state.Form.sections.length; section++) {\n          for (let item = 0; item < this.state.Form.sections[section].contents.length; item++) {\n            if (key === this.state.Form.sections[section].contents[item].name) {\n              subDocumentAttributes.push({\n                name: this.state.Form.sections[section].contents[item].name,\n                value: this.state.fieldValue[key],\n                type: this.state.Form.sections[section].contents[item].type\n              });\n            }\n          }\n        }\n      }\n\n      attributes.push({\n        name: \"AdultsMedicalCart\",\n        type: \"Doc\",\n        docDef: this.state.Form.medicalCardDocDefId,\n        \"subDocument\": {\n          \"attributes\": subDocumentAttributes\n        }\n      });\n\n      if (Object.keys(this.state.subDocument).length !== 0) {\n        var subDocumentPersonAttributes = [];\n\n        for (var key in this.state.subDocument) {\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\n            if (key === this.state.documentViewForm.attributes[i].name) {\n              subDocumentPersonAttributes.push({\n                name: this.state.documentViewForm.attributes[i].name,\n                value: this.state.subDocument[key],\n                type: this.state.documentViewForm.attributes[i].type\n              });\n              console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key]);\n            }\n          }\n        }\n\n        attributes.subDocumentAttributes.push({\n          name: \"Person\",\n          type: \"Doc\",\n          docDef: this.state.documentViewForm.docDefId,\n          \"subDocument\": {\n            \"attributes\": subDocumentPersonAttributes\n          }\n        });\n      }\n\n      console.log(\"IPRATRS\", attributes);\n    } else {\n      // console.log(\"Fiel Values\", this.state.fieldValue)\n      for (key in this.state.fieldValue) {\n        if (key === \"Country\") {\n          attributes.push({\n            name: \"Country\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"Region\") {\n          attributes.push({\n            name: \"Region\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"District\") {\n          attributes.push({\n            name: \"District\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"subDistrict\") {\n          attributes.push({\n            name: \"subDistrict\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"Village\") {\n          attributes.push({\n            name: \"Village\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"ResidentialAddress\") {\n          attributes.push({\n            name: \"ResidentialAddress\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else if (key === \"Phone\") {\n          attributes.push({\n            name: \"Phone\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else if (key === \"Person\") {\n          attributes.push({\n            name: \"Person\",\n            value: this.state.fieldValue[key],\n            type: \"Doc\"\n          });\n        } else {\n          for (section = 0; section < this.state.Form.sections.length; section++) {\n            for (item = 0; item < this.state.Form.sections[section].contents.length; item++) {\n              if (key === this.state.Form.sections[section].contents[item].name) {\n                attributes.push({\n                  name: this.state.Form.sections[section].contents[item].name,\n                  value: this.state.fieldValue[key],\n                  type: this.state.Form.sections[section].contents[item].type\n                });\n              }\n            }\n          }\n        }\n      }\n\n      if (Object.keys(this.state.subDocument).length !== 0) {\n        subDocumentAttributes = [];\n\n        for (key in this.state.subDocument) {\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\n            if (key === this.state.documentViewForm.attributes[i].name) {\n              subDocumentAttributes.push({\n                name: this.state.documentViewForm.attributes[i].name,\n                value: this.state.subDocument[key],\n                type: this.state.documentViewForm.attributes[i].type\n              });\n              console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key]);\n            }\n          }\n        }\n\n        attributes.push({\n          name: \"Person\",\n          type: \"Doc\",\n          docDef: this.state.documentViewForm.docDefId,\n          \"subDocument\": {\n            \"attributes\": subDocumentAttributes\n          }\n        });\n      }\n    } // console.log(\"ATTR\", attributes)\n\n\n    return attributes;\n  }\n\n  getFieldValuesToSearch() {\n    var attributes = [];\n\n    for (var key in this.state.fieldValue) {\n      if (this.state.fieldValue[key] !== null && this.state.fieldValue[key] !== \"\") {\n        //&& this.state.fieldValue[key] !== \"NaN.NaN.NaN\"\n        if (key === \"Country\") {\n          attributes.push({\n            name: \"Country\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"Region\") {\n          attributes.push({\n            name: \"Region\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"District\") {\n          attributes.push({\n            name: \"District\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"subDistrict\") {\n          attributes.push({\n            name: \"subDistrict\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"Village\") {\n          attributes.push({\n            name: \"Village\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"ResidentialAddress\") {\n          attributes.push({\n            name: \"ResidentialAddress\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else if (key === \"Phone\") {\n          attributes.push({\n            name: \"Phone\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else if (key === \"Person\") {\n          attributes.push({\n            name: \"Person\",\n            value: this.state.fieldValue[key],\n            type: \"Doc\"\n          });\n        } else {\n          for (var section = 0; section < this.state.Form.sections.length; section++) {\n            for (var item = 0; item < this.state.Form.sections[section].contents.length; item++) {\n              if (key === this.state.Form.sections[section].contents[item].name) {\n                attributes.push({\n                  name: this.state.Form.sections[section].contents[item].name,\n                  value: this.state.fieldValue[key],\n                  type: this.state.Form.sections[section].contents[item].type\n                });\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (Object.keys(this.state.subDocument).length !== 0) {\n      var subDocumentAttributes = [];\n\n      for (key in this.state.subDocument) {\n        if (this.state.subDocument[key] !== null && this.state.subDocument[key] !== \"\") {\n          //&& this.state.subDocument[key] !== \"NaN.NaN.NaN\"\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\n            if (key === this.state.documentViewForm.attributes[i].name) {\n              subDocumentAttributes.push({\n                name: this.state.documentViewForm.attributes[i].name,\n                value: this.state.subDocument[key],\n                type: this.state.documentViewForm.attributes[i].type\n              }); // console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key])\n            }\n          }\n        }\n      }\n\n      attributes.push({\n        name: \"Person\",\n        type: \"Doc\",\n        docDef: this.state.documentViewForm.docDefId,\n        \"subDocument\": {\n          \"attributes\": subDocumentAttributes\n        }\n      });\n    }\n\n    return attributes;\n  } // checkForEmptyFields(commandJson, length) {\n  //   //  Adulds Medakt || Reg Form\n  //   if (this.state.taskType === \"showRegForm\" || this.state.taskType === \"showDetailedForm\") {\n  //     // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\n  //     if (this.state.fieldValue[\"Country\"] !== null && this.state.fieldValue[\"Country\"] !== undefined) {\n  //       if (this.state.fieldValue[\"Region\"] !== null && this.state.fieldValue[\"Region\"] !== undefined) {\n  //         if (this.state.fieldValue[\"EducationAct\"] !== null && this.state.fieldValue[\"EducationAct\"] !== undefined) {\n  //           if (this.state.fieldValue[\"Occupation\"] !== null && this.state.fieldValue[\"Occupation\"] !== undefined) {\n  //             if (this.state.fieldValue[\"ExaminationPrRe\"] !== null && this.state.fieldValue[\"ExaminationPrRe\"] !== undefined) {\n  //               if (this.state.fieldValue[\"ExaminationPlace\"] !== null && this.state.fieldValue[\"ExaminationPlace\"] !== undefined) {\n  //                 if (this.state.fieldValue[\"PensionStatus\"] !== null && this.state.fieldValue[\"PensionStatus\"] !== undefined) {\n  //                   if (\n  //                     (this.state.fieldValue[\"goal1\"] !== false && this.state.fieldValue[\"goal1\"] !== undefined && this.state.fieldValue[\"goal1\"] !== \"False\") ||\n  //                     (this.state.fieldValue[\"goal2\"] !== false && this.state.fieldValue[\"goal2\"] !== undefined && this.state.fieldValue[\"goal2\"] !== \"False\") ||\n  //                     (this.state.fieldValue[\"goal3\"] !== false && this.state.fieldValue[\"goal3\"] !== undefined && this.state.fieldValue[\"goal3\"] !== \"False\") ||\n  //                     (this.state.fieldValue[\"goal4\"] !== null && this.state.fieldValue[\"goal4\"] !== undefined && this.state.fieldValue[\"goal4\"] !== \"False\") ||\n  //                     (this.state.fieldValue[\"goal5\"] !== false && this.state.fieldValue[\"goal5\"] !== undefined && this.state.fieldValue[\"goal5\"] !== \"False\") ||\n  //                     (this.state.fieldValue[\"goal6\"] !== false && this.state.fieldValue[\"goal6\"] !== undefined && this.state.fieldValue[\"goal6\"] !== \"False\") ||\n  //                     (this.state.fieldValue[\"goalAnother\"] !== \"\" && this.state.fieldValue[\"goalAnother\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"PlaceOfWork\"] !== \"\" && this.state.fieldValue[\"PlaceOfWork\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"Wage\"] !== \"\" && this.state.fieldValue[\"Wage\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"PensionAmount\"] !== \"\" && this.state.fieldValue[\"PensionAmount\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"Profession\"] !== \"\" && this.state.fieldValue[\"Profession\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined)\n  //                   ) {\n  //                     if (\n  //                       (this.state.fieldValue[\"Good\"] !== false && this.state.fieldValue[\"Good\"] !== undefined && this.state.fieldValue[\"Good\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"Satisfactory\"] !== false && this.state.fieldValue[\"Satisfactory\"] !== undefined && this.state.fieldValue[\"Satisfactory\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"goUnsatisfactoryal1\"] !== false && this.state.fieldValue[\"Unsatisfactory\"] !== undefined && this.state.fieldValue[\"Unsatisfactory\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"SeparateApartment\"] !== false && this.state.fieldValue[\"SeparateApartment\"] !== undefined && this.state.fieldValue[\"SeparateApartment\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"OwnHouse\"] !== false && this.state.fieldValue[\"OwnHouse\"] !== undefined && this.state.fieldValue[\"OwnHouse\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"Dormitory\"] !== false && this.state.fieldValue[\"Dormitory\"] !== undefined && this.state.fieldValue[\"Dormitory\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"LivingAreaRemovable\"] !== false && this.state.fieldValue[\"LivingAreaRemovable\"] !== undefined && this.state.fieldValue[\"LivingAreaRemovable\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"NoOwnAccommodation\"] !== false && this.state.fieldValue[\"NoOwnAccommodation\"] !== undefined && this.state.fieldValue[\"NoOwnAccommodation\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"Additionally\"] !== false && this.state.fieldValue[\"Additionally\"] !== undefined && this.state.fieldValue[\"Additionally\"] !== \"False\")\n  //                     ) {\n  //                       // if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\n  //                       if (this.state.taskType === \"showDetailedForm\" || this.state.taskType === \"showChildDetailedForm\") {\n  //                         if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\n  //                           if (this.state.fieldValue[\"ExamOfDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamOfDate\"] !== undefined) {\n  //                             this.checkForRegNoAct(commandJson, length)\n  //                             // this.sendFieldValues(commandJson)\n  //                           } else this.props.callErrorToast(\"Заполните поле \\\"Дата проведения экспертизы\\\"\")\n  //                         } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\n  //                       } else this.checkForRegNoAct(commandJson, length)\n  //                       // } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\n  //                     } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Жилищно-бытовые условия\\\"\")\n  //                   } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Цель освидетельствования\\\"\")\n  //                 } else this.props.callErrorToast(\"Заполните поле \\\"Получает пенсию\\\"\")\n  //               } else this.props.callErrorToast(\"Заполните поле \\\"Место освидетельствования\\\"\")\n  //             } else this.props.callErrorToast(\"Заполните поле \\\"Освидетельствование\\\"\")\n  //           } else this.props.callErrorToast(\"Заполните поле \\\"Род деятельности\\\"\")\n  //         } else this.props.callErrorToast(\"Заполните поле \\\"Образование\\\"\")\n  //       } else this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\")\n  //     } else this.props.callErrorToast(\"Заполните поле \\\"Страна\\\"\")\n  //     // } else this.props.callErrorToast(\"Заполните поле \\\"№ акта по МСЭ\\\"\")\n  //   }\n  //   // Child Medakt || Reg Form\n  //   else if (this.state.taskType === \"showChildRegForm\" || this.state.taskType === \"showChildDetailedForm\") {\n  //     // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\n  //     if (this.state.fieldValue[\"Country\"] !== null && this.state.fieldValue[\"Country\"] !== undefined) {\n  //       if (this.state.fieldValue[\"Region\"] !== null && this.state.fieldValue[\"Region\"] !== undefined) {\n  //         if (this.state.fieldValue[\"EducationAct\"] !== null && this.state.fieldValue[\"EducationAct\"] !== undefined) {\n  //           if (this.state.fieldValue[\"ExaminationPrRe\"] !== null && this.state.fieldValue[\"ExaminationPrRe\"] !== undefined) {\n  //             if (this.state.fieldValue[\"Examination4\"] !== null && this.state.fieldValue[\"Examination4\"] !== undefined) {\n  //               if (this.state.fieldValue[\"PensionStatus\"] !== null && this.state.fieldValue[\"PensionStatus\"] !== undefined) {\n  //                 if (\n  //                   (this.state.fieldValue[\"goal1\"] !== false && this.state.fieldValue[\"goal1\"] !== undefined && this.state.fieldValue[\"goal1\"] !== \"False\") ||\n  //                   (this.state.fieldValue[\"goal2\"] !== false && this.state.fieldValue[\"goal2\"] !== undefined && this.state.fieldValue[\"goal2\"] !== \"False\") ||\n  //                   (this.state.fieldValue[\"goal3\"] !== false && this.state.fieldValue[\"goal3\"] !== undefined && this.state.fieldValue[\"goal3\"] !== \"False\") ||\n  //                   (this.state.fieldValue[\"goal4\"] !== null && this.state.fieldValue[\"goal4\"] !== undefined && this.state.fieldValue[\"goal4\"] !== \"False\") ||\n  //                   (this.state.fieldValue[\"goal5\"] !== false && this.state.fieldValue[\"goal5\"] !== undefined && this.state.fieldValue[\"goal5\"] !== \"False\") ||\n  //                   (this.state.fieldValue[\"goal6\"] !== false && this.state.fieldValue[\"goal6\"] !== undefined && this.state.fieldValue[\"goal6\"] !== \"False\") ||\n  //                   (this.state.fieldValue[\"goalAnother\"] !== \"\" && this.state.fieldValue[\"goalAnother\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"PlaceOfWork\"] !== \"\" && this.state.fieldValue[\"PlaceOfWork\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"Wage\"] !== 0 && this.state.fieldValue[\"Wage\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"PensionAmount\"] !== 0 && this.state.fieldValue[\"PensionAmount\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"Profession\"] !== \"\" && this.state.fieldValue[\"Profession\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined)\n  //                 ) {\n  //                   if (this.state.taskType === \"showChildDetailedForm\") {\n  //                     if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\n  //                       if (this.state.fieldValue[\"ExamOfDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamOfDate\"] !== undefined) {\n  //                         this.checkForRegNoAct(commandJson, length)\n  //                         // this.sendFieldValues(commandJson)\n  //                       } else this.props.callErrorToast(\"Заполните поле \\\"Дата проведения экспертизы\\\"\")\n  //                     } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\n  //                   } else this.checkForRegNoAct(commandJson, length) // this.sendFieldValues(commandJson)\n  //                 } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Цель освидетельствования\\\"\")\n  //               } else this.props.callErrorToast(\"Заполните поле \\\"Получает пенсию\\\"\")\n  //             } else this.props.callErrorToast(\"Заполните поле \\\"Место освидетельствования\\\"\")\n  //           } else this.props.callErrorToast(\"Заполните поле \\\"Освидетельствование\\\"\")\n  //         } else this.props.callErrorToast(\"Заполните поле \\\"Образование\\\"\")\n  //       } else this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\")\n  //     } else this.props.callErrorToast(\"Заполните поле \\\"Страна\\\"\")\n  //     // }else this.swAlert(\"Заполните поле \\\"№ акта по МСЭ\\\"\")\n  //   }\n  //   else {\n  //     this.sendFieldValues(commandJson)\n  //     this.clearTabData(this.state.process_id)\n  //   }\n  // }\n\n\n  checkForRequieredFields() {\n    let checkedSuccessfuly = null;\n    let f = this.state.Form;\n    let fv = this.state.fieldValue;\n    let tt = this.state.taskType;\n\n    if (tt === \"showRegForm\" || tt === \"showDetailedForm\" || tt === \"showChildRegForm\" || tt === \"showChildDetailedForm\") {\n      // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\n      if (fv[\"Region\"] !== null && fv[\"Region\"] !== undefined) {\n        checkedSuccessfuly = true;\n      } else {\n        this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\");\n        return false;\n      }\n    }\n\n    for (let s = 0; s < f.sections.length; s++) {\n      if (f.sections[s].required === true) {\n        for (let c = 0; c < f.sections[s].contents.length; c++) {\n          let fieldName = f.sections[s].contents[c].name; // console.log(\"CH1\", fieldName, f.sections[s].contents[c].required)\n\n          if (fv[fieldName] === undefined || fv[fieldName] === null || fv[fieldName] === \"NaN.NaN.NaN\" || fv[fieldName] === \"\" || fv[fieldName] === \"01.01.1970\") {\n            checkedSuccessfuly = false;\n          } else {\n            checkedSuccessfuly = true;\n            break; // return checkedSuccessfuly\n          }\n        }\n\n        if (checkedSuccessfuly === false) {\n          this.props.callErrorToast(\"Заполните одно из полей секции \\\"\" + f.sections[s].label + \"\\\"\", \"warning\");\n        }\n      } else {\n        for (let c = 0; c < f.sections[s].contents.length; c++) {\n          let fieldName = f.sections[s].contents[c].name; // console.log(\"CH2\", fieldName, f.sections[s].contents[c].name)\n\n          if (f.sections[s].contents[c].required === true) {\n            if (fv[fieldName] === undefined || fv[fieldName] === null || fv[fieldName] === \"NaN.NaN.NaN\" || fv[fieldName] === \"\" || fv[fieldName] === \"\" || fv[fieldName] === \"01.01.1970\") {\n              checkedSuccessfuly = false;\n              this.props.callErrorToast(\"Внимание заполните поле \\\"\" + f.sections[s].contents[c].label + \"\\\"\", \"warning\"); // break\n\n              return false;\n            } else {\n              checkedSuccessfuly = true;\n            }\n          } else {\n            checkedSuccessfuly = true;\n          }\n        }\n      }\n    }\n\n    return checkedSuccessfuly;\n  } // Collect id of all documents that are in the local state\n\n\n  getDocsIdToSign() {\n    var docsId = [];\n    docsId.push(this.state.selectedDoc.id);\n\n    if (this.state.docListIPR !== null) {\n      for (var i = 0; i < this.state.docListIPR.length; i++) {\n        docsId.push(this.state.docListIPR[i].id);\n      }\n    }\n\n    return docsId;\n  } // Return person full age\n\n\n  getPersonAge() {\n    for (let i = 0; i < this.state.person.attributes.length; i++) {\n      if (this.state.person.attributes[i].name === \"Date_of_Birth\") {\n        let birthday = new Date(this.parseDate(this.state.person.attributes[i].value));\n        let ageDifMs = Date.now() - birthday.getTime();\n        let ageDate = new Date(ageDifMs); // miliseconds from epoch\n\n        let fullAge = Math.abs(ageDate.getUTCFullYear() - 1970);\n        console.log(\"AGE\", fullAge);\n        return fullAge;\n      }\n    }\n  } // Return label of select by it's id from fieldValue\n\n\n  getEnumValueTextByValue(value) {\n    for (let i = 0; i < this.state.enumData.length; i++) {\n      for (let l = 0; l < this.state.enumData[i].data.length; l++) {\n        if (this.state.enumData[i].data[l].Id === value) {\n          return this.state.enumData[i].data[l].Text;\n        }\n      }\n    }\n  } // Set new organization ID to all document in local state, prepare them to transfer to another Mse\n\n\n  setOrgIdToMedakt() {\n    let fstate = this.state;\n    var newDocList = []; // console.log(\"DOCLIST CUR\" , fstate.docList)\n\n    for (let i = 0; i < fstate.docList.length; i++) {\n      newDocList.push({\n        id: fstate.docList[i].id,\n        attributes: []\n      });\n\n      for (let l = 0; l < fstate.docList[i].attributes.length; l++) {\n        if (fstate.docList[i].attributes[l].name === \"MseName\") {\n          let newItem = {\n            name: fstate.docList[i].attributes[l].name,\n            type: fstate.docList[i].attributes[l].type,\n            value: fstate.fieldValue[\"MseName\"],\n            enumValueText: this.getEnumValueTextByValue(this.state.fieldValue[\"MseName\"])\n          };\n          newDocList[i].attributes.push(newItem);\n        } else {\n          if (fstate.docList[i].attributes[l].name !== \"State\" && fstate.docList[i].attributes[l].value !== null) {\n            let newItem = {\n              name: fstate.docList[i].attributes[l].name,\n              type: fstate.docList[i].attributes[l].type,\n              value: fstate.docList[i].attributes[l].value\n            };\n            newDocList[i].attributes.push(newItem);\n          }\n        }\n      }\n    }\n\n    fstate.docList = newDocList;\n    var newDocListIPR = [];\n\n    for (let i = 0; i < fstate.docListIPR.length; i++) {\n      newDocListIPR.push({\n        id: fstate.docListIPR[i].id,\n        attributes: []\n      });\n\n      for (let l = 0; l < fstate.docListIPR[i].attributes.length; l++) {\n        if (fstate.docListIPR[i].attributes[l].name !== \"State\" && fstate.docListIPR[i].attributes[l].value !== null) {\n          var newItem = {\n            value: fstate.docListIPR[i].attributes[l].value,\n            name: fstate.docListIPR[i].attributes[l].name,\n            type: fstate.docListIPR[i].attributes[l].type\n          };\n          newDocListIPR[i].attributes.push(newItem);\n        }\n      }\n    }\n\n    fstate.docListIPR = newDocListIPR;\n    this.setState(fstate); // console.log(\"DOCLIST\", JSON.stringify(this.state.docList))\n    // console.log(\"DOCLISTIPR\", JSON.stringify(this.state.docListIPR))\n  } // Main button click handler\n\n\n  async buttonClick(name) {\n    console.log(\"Butt\", name);\n\n    if (name === \"createDocument\") {\n      let createDocument = {\n        attributes: this.getFieldValues()\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"createDocument\"\n          },\n          doc: {\n            value: JSON.stringify(createDocument)\n          },\n          docDefId: {\n            value: this.state.Form.docDefId\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          }\n        }\n      };\n      console.log(\"button createDocument: \", commandJson);\n      let checkResult = this.checkForRequieredFields();\n\n      if (checkResult === true) {\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } // this.checkForEmptyFields(commandJson, 0)\n\n    } else if (name === \"updateDocument\") {\n      let updateDocument = {\n        attributes: this.getFieldValues()\n      };\n      let filterIPR = {\n        attributes: [{\n          name: \"AdultsMedicalCart\",\n          value: this.state.docId,\n          type: \"Doc\"\n        }]\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          doc: {\n            value: JSON.stringify(updateDocument)\n          },\n          filterIPR: {\n            value: JSON.stringify(filterIPR)\n          },\n          docDefId: {\n            value: this.state.Form.docDefId\n          },\n          docId: {\n            value: this.state.docId\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          }\n        }\n      };\n      console.log(\"button updateDocument: \", commandJson);\n      let checkResult = this.checkForRequieredFields();\n\n      if (checkResult === true) {\n        console.log(\"FV\", this.state.fieldValue);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } // this.checkForEmptyFields(commandJson, 1)\n      // this.sendFieldValues(commandJson)\n\n    } else if (name === \"findDocument\") {\n      let filterDocument = {\n        attributes: this.getFieldValuesToSearch()\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        docDefId: this.state.Form.docDefId,\n        variables: {\n          userAction: {\n            value: \"findDocument\"\n          },\n          doc: {\n            value: JSON.stringify(filterDocument)\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          },\n          size: {\n            value: this.state.size\n          },\n          page: {\n            value: 1\n          }\n        }\n      };\n      console.log(\"button findDocument: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"findIPR\") {\n      let filterDocument = {\n        attributes: [{\n          name: \"AdultsMedicalCart\",\n          type: \"Doc\",\n          docDef: this.state.Form.medicalCardDocDefId,\n          subDocument: {\n            attributes: this.getFieldValuesToSearch()\n          }\n        }]\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        docDefId: this.state.Form.docDefId,\n        variables: {\n          userAction: {\n            value: \"findDocument\"\n          },\n          doc: {\n            value: JSON.stringify(filterDocument)\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          },\n          size: {\n            value: this.state.size\n          },\n          page: {\n            value: this.state.page\n          }\n        }\n      };\n      console.log(\"button findIPR: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"editDocument\") {\n      let editDocument = {\n        attributes: this.getFieldValues()\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"editDocument\"\n          },\n          doc: {\n            value: JSON.stringify(editDocument)\n          },\n          docId: {\n            value: this.state.docId\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          }\n        }\n      };\n      console.log(\"button editDocument: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"reexamination\") {\n      let updateDocument = {\n        attributes: this.getFieldValues()\n      };\n      let age = this.getPersonAge();\n      let Adult = age >= 18 ? \"True\" : \"False\";\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"reexamination\"\n          },\n          doc: {\n            value: JSON.stringify(updateDocument)\n          },\n          docId: {\n            value: this.state.docId\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          },\n          adult: {\n            value: Adult\n          }\n        }\n      };\n      console.log(\"button reexamination: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"medakt\") {\n      // let updateDocument = {attributes: this.getFieldValues()}\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"medakt\"\n          },\n          docId: {\n            value: this.state.docId\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          }\n        }\n      };\n      console.log(\"button Medakt: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"ipr\") {\n      // if (this.state.docListIPR !== null && this.state.docListIPR !== \"null\") {\n      //   if (this.state.docListIPR.length > 0) {\n      //     this.props.callErrorToast(\"Данный Медакт уже имеет ИПР\")\n      //   }\n      // }\n      if (this.state.docListIPR === null || this.state.docListIPR === \"null\" || this.state.docListIPR.length === 0) {\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"ipr\"\n            },\n            docId: {\n              value: this.state.docId\n            },\n            userId: {\n              value: this.state.userId\n            },\n            userRole: {\n              value: this.state.userRole\n            }\n          }\n        };\n        console.log(\"button IPR: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else {\n        this.props.callErrorToast(\"Данный Медакт уже имеет ИПР!\");\n      }\n    } else if (name === \"deleteDocument\") {\n      swal({\n        text: \"Вы точно хотите удалить этот документ?\",\n        icon: \"warning\",\n        buttons: {\n          yes: \"Да\",\n          no: \"Нет\"\n        },\n        dangerMode: true\n      }).then(click => {\n        if (click === \"yes\") {\n          let commandJson = {\n            commandType: \"completeTask\",\n            session_id: this.state.session_id,\n            process_id: this.state.process_id,\n            taskID: this.state.taskID,\n            variables: {\n              userAction: {\n                value: \"deleteDocument\"\n              },\n              docId: {\n                value: this.state.docId\n              },\n              userId: {\n                value: this.state.userId\n              },\n              userRole: {\n                value: this.state.userRole\n              }\n            }\n          };\n          console.log(\"button deleteDocument: \", commandJson);\n          this.sendFieldValues(commandJson);\n          this.clearTabData(this.state.process_id);\n        }\n      });\n    } else if (name === \"signDocument\") {\n      let docsToSign = {\n        docIdList: this.getDocsIdToSign(),\n        stateTypeId: \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\"\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"signDocument\"\n          },\n          doc: {\n            value: JSON.stringify(docsToSign)\n          } // doc: {\n          //   value: {\n          //     docIdList: this.getDocsIdToSign(),\n          //     stateTypeId: \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\"\n          //   }\n          // }\n\n        }\n      };\n      console.log(\"button signDocument: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"registerDocument\") {\n      let docsToRegister = {\n        docIdList: this.getDocsIdToSign(),\n        stateTypeId: \"C1414D0C-417A-45AB-8B57-01D30A567F08\"\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"registerDocument\"\n          },\n          doc: {\n            value: JSON.stringify(docsToRegister)\n          }\n        }\n      };\n      console.log(\"button registerDocument: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"showStatusSelectingForm\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"showStatusSelectingForm\"\n          },\n          doc: {\n            value: JSON.stringify({\n              docIdList: this.getDocsIdToSign(),\n              stateTypeId: \"\"\n            })\n          }\n        }\n      };\n      console.log(\"button showStatusSelectingForm: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"setNewState\") {\n      let checkResult = this.checkForRequieredFields();\n\n      if (checkResult === true) {\n        let states = {\n          \"29a5cf05-30de-45b9-8526-69de5ea8ab12\": \"a9e360f0-eed1-4ff6-9ab8-e4255c62ce4a\",\n          // умер\n          \"6a0f2699-eb53-4175-ac07-71deb84ae641\": \"10a96e4b-df5d-4f55-9d81-83f9e3e51de5\",\n          // приостановлена инвалидность\n          \"3d2dd30f-3ab0-439f-a8dd-149431af67be\": \"d203372c-236b-4b3e-953a-11f09a4aca61\",\n          // истекший срок инвалидности\n          \"b042e77b-9a12-47f1-a6d2-cc85e9029e61\": \"c9cfe461-e822-4f97-b34d-9312f8917fa9\",\n          // переехал за переделами рт\n          \"c5f3563c-688f-44f1-9c01-70d190ae9edb\": \"1fa96e5b-908f-4c57-bc4a-b61423951081\",\n          // перешел на возрастную пенсию\n          \"d5e1a3aa-dfb3-4c49-8360-c1278e70429f\": \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\",\n          // вернуть в подписанные\n          \"83ade8bc-a070-4974-bea0-fe30e50422af\": \"C1414D0C-417A-45AB-8B57-01D30A567F08\" // зарегистрирован\n\n        }; // console.log(\"ST\", this.state.fieldValue[\"StatesName\"]);\n\n        if (this.state.Form.docDefId === \"5FDE415F-DB00-43B4-BA6E-FE439CFF6DA0\" && this.state.fieldValue[\"StatusName\"] === \"1fa96e5b-908f-4c57-bc4a-b61423951081\") {\n          this.props.callErrorToast(\"Не допустимое значение для детского документа\");\n        } else {\n          let stateBody = {\n            \"statusDate\": this.parseDate(this.state.fieldValue.statusDate),\n            //moment(new Date()).format(\"YYYY-MM-DD\"),\n            \"docId\": this.state.docId,\n            \"stateTypeId\": states[this.state.fieldValue[\"StatusName\"]]\n          };\n          let commandJson = {\n            commandType: \"completeTask\",\n            process_id: this.state.process_id,\n            session_id: this.state.session_id,\n            taskID: this.state.taskID,\n            variables: {\n              userAction: {\n                value: \"setNewState\"\n              },\n              // newState: { value: states[this.state.fieldValue[\"StatusName\"]] }\n              stateBody: {\n                value: JSON.stringify(stateBody)\n              }\n            }\n          };\n          console.log(\"button setNewState: \", commandJson);\n          this.sendFieldValues(commandJson);\n          this.clearTabData(this.state.process_id);\n        }\n      }\n    } // else if (name === \"setNewStateChild\") {\n    //   let states = {\n    //     \"adcb9640-51d0-4952-b196-27e87bb28d31\": \"10a96e4b-df5d-4f55-9d81-83f9e3e51de5\", // приостановлена инвалидность \n    //     \"a61fcb5d-e858-4183-b1cd-1fef00c6b4bc\": \"d203372c-236b-4b3e-953a-11f09a4aca61\", // истекший срок инвалидности\n    //     \"184e3fac-a6b6-4c60-89a8-517862ecd9c4\": \"c9cfe461-e822-4f97-b34d-9312f8917fa9\", // переехал за переделами рт          \n    //     \"05be1899-8d41-4dfd-ae72-41cba4aa9223\": \"a9e360f0-eed1-4ff6-9ab8-e4255c62ce4a\", // умер\n    //   }\n    //   // console.log(\"ST\", this.state.fieldValue[\"StatesName\"]);\n    //   let commandJson =\n    //   {\n    //     commandType: \"completeTask\",\n    //     process_id: this.state.process_id,\n    //     session_id: this.state.session_id,\n    //     taskID: this.state.taskID,\n    //     variables: {\n    //       userAction: { value: \"setNewStateChild\" },\n    //       newState: { value: states[this.state.fieldValue[\"StatesName\"]] }\n    //     }\n    //   }\n    //   console.log(\"button setNewStateChild: \", commandJson)\n    //   this.sendFieldValues(commandJson)\n    //   this.clearTabData(this.state.process_id)\n    // }\n    else if (name === \"setStateDied\") {\n        let docsToSetState = {\n          docIdList: this.getDocsIdToSign(),\n          stateTypeId: \"A9E360F0-EED1-4FF6-9AB8-E4255C62CE4A\"\n        };\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"setStateDied\"\n            },\n            doc: {\n              value: JSON.stringify(docsToSetState)\n            } // doc: {\n            //   value: {\n            //     docIdList: this.getDocsIdToSign(),\n            //     stateTypeId: \"A9E360F0-EED1-4FF6-9AB8-E4255C62CE4A\"\n            //   }\n            // }\n\n          }\n        };\n        console.log(\"button setStateDied: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (name === \"backToMedakt\") {\n        let Document = {\n          attributes: [{\n            name: \"AdultsMedicalCart\",\n            value: this.state.fieldValue[\"AdultsMedicalCart\"],\n            type: \"Doc\"\n          }]\n        };\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"backToMedakt\"\n            },\n            userId: {\n              value: this.state.userId\n            },\n            userRole: {\n              value: this.state.userRole\n            },\n            docDefId: {\n              value: this.state.Form.docDefId\n            },\n            doc: {\n              value: JSON.stringify(Document)\n            },\n            docId: {\n              value: this.state.fieldValue[\"AdultsMedicalCart\"]\n            },\n            size: {\n              value: 10\n            },\n            page: {\n              value: 1\n            }\n          }\n        };\n        console.log(\"button backToMedakt: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (name === \"transferDocuments\") {\n        if (Object.keys(this.state.docList).length !== 0) {\n          var age = this.getPersonAge();\n          console.log(\"AGE\", age);\n\n          if (age >= 18) {\n            var docDefId = this.state.Form.adultsMedaktDocDefId;\n          } else if (age < 18) {\n            var docDefId = this.state.Form.childMedaktDocDefId;\n          }\n\n          this.setOrgIdToMedakt();\n          let commandJson = {\n            commandType: \"transferDocuments\",\n            session_id: this.state.session_id,\n            process_id: this.state.process_id,\n            taskID: this.state.taskID,\n            medaktDocDefId: docDefId,\n            IPRDocDefId: this.state.IPRGridForm.docDefId,\n            medakts: JSON.stringify(this.state.docList),\n            IPR: JSON.stringify(this.state.docListIPR),\n            userId: this.state.userId,\n            userRole: this.state.userRole\n          };\n\n          if (this.state.fieldValue[\"MseName\"] !== null && this.state.fieldValue[\"MseName\"] !== undefined) {\n            console.log(\"button transfeDocuments: \", commandJson);\n            this.sendFieldValues(commandJson);\n            this.clearTabData(this.state.process_id);\n          } else {\n            this.props.callErrorToast(\"Выберите МСЭК для передачи данных\");\n          }\n        } else this.props.callErrorToast(\"Нет данных для передачи\");\n      } else if (name === \"downloadMemo\") {\n        this.downloadDocument(\"downloadPDF\");\n      } else if (name === \"viewRegForm\") {\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"viewRegForm\"\n            },\n            userId: {\n              value: this.state.userId\n            },\n            size: {\n              value: 10\n            },\n            page: {\n              value: 1\n            }\n          }\n        };\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (name === \"acceptComplaint\") {\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"acceptComplaint\"\n            }\n          }\n        };\n        console.log(\"button acceptComplaint: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (name === \"rejectComplaint\") {\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"rejectComplaint\"\n            }\n          }\n        };\n        console.log(\"button rejectComplaint: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (name === \"downloadMedakt\") {\n        let checkResult = this.checkForRequieredFields();\n\n        if (checkResult === true) {\n          this.props.callSuccessToast(\"Выгрузка начата дождитесь окончания процедуры!\");\n          let url = this.props.ismseApi + \"/api/ExportDataToXlsx/ExportChildByStatus\";\n          let age = \"(Детский)\";\n\n          if (this.state.taskType === \"showDownloadAdultsMedaktForm\") {\n            url = this.props.ismseApi + \"/api/ExportDataToXlsx/ExportGrownByStatus\";\n            age = \"(Взрослый)\";\n          }\n\n          let fv = this.state.fieldValue;\n          let body = {\n            \"state\": fv.state,\n            \"startDate\": this.parseDate(fv.startDate),\n            \"endDate\": this.parseDate(fv.endDate)\n          };\n\n          if (fv.msecId !== null && fv.msecId !== undefined) {\n            body.msecId = fv.msecId;\n          }\n\n          if (fv.regionId !== null && fv.regionId !== undefined) {\n            body.regionId = parseInt(fv.regionId);\n          }\n\n          if (fv.districtId !== null && fv.districtId !== undefined) {\n            body.districtId = parseInt(fv.districtId);\n          } // console.log(\"BBB\", body)\n\n\n          await fetch(url, {\n            headers: {\n              \"Accept\": \"application/json\",\n              \"Content-Type\": \"application/json\"\n            },\n            method: \"POST\",\n            body: JSON.stringify(body) // mode: 'no-cors'\n\n          }).then(response => response.blob()).then(bl => {\n            console.log(\"RES\", bl);\n            var docUrl = window.URL.createObjectURL(bl);\n            var a = document.createElement('a');\n            a.href = docUrl;\n            a.download = \"\\u0412\\u044B\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u041C\\u0435\\u0434\\u0430\\u043A\\u0442\\u043E\\u0432 \".concat(age, \".xls\");\n            document.body.appendChild(a);\n            a.click();\n            a.remove();\n          }).catch(error => console.log('error', error));\n        }\n      } else if (name === \"back\") {\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"back\"\n            }\n          }\n        };\n        console.log(\"button back: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (name === \"finish\") {\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"finish\"\n            }\n          }\n        };\n        console.log(\"button finish: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (name === \"cancel\") {\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"cancel\"\n            }\n          }\n        };\n        console.log(\"button cancel: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else {\n        console.log(\"Unknown button\", name);\n      }\n  } // Handler of amount of rows per page of grid form\n\n\n  rowsPageChange(size, page) {\n    console.log(\"Rows changed: \", size);\n    let filterDocument = {\n      attributes: this.getFieldValuesToSearch()\n    };\n    let commandJson = {\n      commandType: \"completeTask\",\n      session_id: this.state.session_id,\n      process_id: this.state.process_id,\n      taskID: this.state.taskID,\n      docDefId: this.state.Form.docDefId,\n      variables: {\n        userAction: {\n          value: \"findDocument\"\n        },\n        doc: {\n          value: JSON.stringify(filterDocument)\n        },\n        size: {\n          value: size\n        },\n        page: {\n          value: page\n        }\n      }\n    };\n    console.log(\"JSON Collected: \", commandJson);\n    this.sendFieldValues(commandJson);\n    this.clearTabData(this.state.process_id);\n  } // Returns Button component\n\n\n  createButton(button, index) {\n    if (button.name === \"downloadExcel\" || button.name === \"downloadPDF\") {\n      return React.createElement(Button, {\n        variant: \"outlined\",\n        name: button.name,\n        onClick: () => this.downloadDocument(button.name),\n        value: button.name,\n        style: {\n          margin: 3,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1945\n        },\n        __self: this\n      }, button.label);\n    } else if (button.name === \"attachDocument\") {\n      return React.createElement(Button, {\n        variant: \"outlined\",\n        name: button.name,\n        onClick: () => this.showScanComponentClick(),\n        value: button.name,\n        style: {\n          margin: 3,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1962\n        },\n        __self: this\n      }, button.label);\n    } else return React.createElement(Button, {\n      variant: \"outlined\",\n      name: button.name,\n      onClick: () => this.buttonClick(button.name),\n      style: {\n        margin: 3,\n        backgroundColor: button.backgroundColor,\n        height: 32,\n        fontSize: 12\n      },\n      value: button.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1978\n      },\n      __self: this\n    }, button.label);\n  }\n\n  getEnumValueText(enumName) {\n    for (let i = 0; i < this.state.selectedDoc.attributes.length; i++) {\n      if (this.state.selectedDoc.attributes[i].name === enumName) {\n        return this.state.selectedDoc.attributes[i].enumValueText;\n      }\n    }\n  } // Create sections with labels and call bodyBuilder function\n\n\n  sectionBuilder(section, index) {\n    return React.createElement(Table, {\n      size: \"small\",\n      key: index + \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2003\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2004\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2005\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      key: index = \"head\",\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: \"#D3D3FE\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2006\n      },\n      __self: this\n    }, section.label))), this.bodyBuilder(section));\n  } // Create body of each section and call contentBuilder function\n\n\n  bodyBuilder(section) {\n    return React.createElement(Table, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2025\n      },\n      __self: this\n    }, React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2026\n      },\n      __self: this\n    }, section.contents.map((contentItem, index) => contentItem.type === \"TransferList\" ? React.createElement(\"table\", {\n      size: \"small\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2029\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2030\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      colSpan: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2031\n      },\n      __self: this\n    }, contentItem.label)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2049\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      width: \"43%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2050\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2051\n      },\n      __self: this\n    }, this.getTransferList(this.state.transferList[contentItem.enumDef], contentItem.enumDef, contentItem.edit))), React.createElement(\"td\", {\n      width: \"4%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2053\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2054\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2055\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"small\" // className={classes.button}\n      // onClick={() => this.handleAllRight(contentItem.name)}\n      // disabled={this.state.transferList[contentItem.name].length === 0 ? true : false}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2056\n      },\n      __self: this\n    }, \"\\u226B\"), React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"small\" // className={classes.button}\n      // onClick={() => this.handleCheckedRight(contentItem.name)}\n      // disabled={this.state.leftChecked(contentItem.name).length === 0 ? true : false}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2065\n      },\n      __self: this\n    }, \">\"), React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"small\" // className={classes.button}\n      // onClick={() => this.handleCheckedLeft(contentItem.name)}\n      // disabled={this.state.rightChecked(contentItem.name).length === 0 ? true : false}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2074\n      },\n      __self: this\n    }, \"<\"), React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"small\" // className={classes.button}\n      // onClick={() => this.handleAllLeft(contentItem.name)}\n      // disabled={selectedTransferList[contentItem.name].length === 0 ? true : false}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2083\n      },\n      __self: this\n    }, \"\\u226A\")))), React.createElement(\"td\", {\n      width: \"43%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2095\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2096\n      },\n      __self: this\n    }, this.getTransferList(this.state.selectedTransferList[contentItem.enumDef], contentItem.enumDef, contentItem.edit))))) : React.createElement(Table, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2101\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      key: index,\n      style: {\n        height: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2102\n      },\n      __self: this\n    }, contentItem.name !== \"PersonDetailFormAddress\" && contentItem.name !== \"PersonData\" && contentItem.label !== \"\" && React.createElement(TableCell, {\n      key: index + \"cell1\",\n      align: \"left\",\n      style: {\n        width: \"40%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2105\n      },\n      __self: this\n    }, contentItem.label), React.createElement(TableCell, {\n      key: index + \"cell2\",\n      align: \"left\",\n      style: {\n        width: \"60%\",\n        height: this.state.Form.formName === \"TransferMedicalCertificateForm\" ? 100 : 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2112\n      },\n      __self: this\n    }, this.contentBuilder(contentItem)))))));\n  } // Create component by it's type\n\n\n  contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\" || contentItem.type === \"BLOB\") {\n      return React.createElement(TextField, {\n        multiline: true // onChange={this.componentChange}\n        // onBlur={this.handleChange}\n        // defaultValue={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\n        ,\n        onChange: this.handleChange,\n        value: this.state.fieldValue[contentItem.name] !== undefined ? this.state.fieldValue[contentItem.name] : \"\",\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2129\n        },\n        __self: this\n      }); // }\n    } else if (contentItem.type === \"Int\") {\n      return React.createElement(TextField, {\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        style: {\n          width: \"100%\"\n        } // defaultValue = {(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name]: \"\"}\n        ,\n        value: this.state.fieldValue[contentItem.name] !== undefined ? this.state.fieldValue[contentItem.name] : \"\",\n        onChange: this.componentIntChange // onBlur={this.handleChange}\n        ,\n        name: contentItem.name,\n        InputProps: {\n          inputComponent: NumberFormatCustom\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2145\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"DateTime\") {\n      return React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        locale: ruLocale,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2159\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        clearable: true,\n        cancelLabel: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\",\n        okLabel: \"\\u041E\\u043A\",\n        clearLabel: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\",\n        invalidDateMessage: \"\\u043D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\",\n        name: contentItem.name,\n        margin: \"small\",\n        format: \"dd.MM.yyyy\",\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        value: this.state.fieldValue[contentItem.name] !== undefined ? this.parseDate(this.state.fieldValue[contentItem.name]) : null,\n        onChange: date => this.handleDateTimeChange(date, contentItem.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2160\n        },\n        __self: this\n      }));\n    } else if (contentItem.type === \"Enum\") {\n      // console.log(\"EN DATA\", this.state.enumData)\n      let options = [];\n      options.push({\n        \"value\": null,\n        \"label\": null,\n        \"name\": contentItem.name\n      });\n\n      for (let i = 0; i < this.state.enumData.length; i++) {\n        if (contentItem.enumDef === this.state.enumData[i].enumDef) {\n          for (let l = 0; l < this.state.enumData[i].data.length; l++) {\n            options.push({\n              \"value\": this.state.enumData[i].data[l].Id,\n              \"label\": this.state.enumData[i].data[l].Text,\n              \"name\": contentItem.name\n            });\n          }\n\n          break;\n        }\n      } // console.log(\"OPTOPNS\", options)\n      // console.log(\"S OPTOPNS\", this.state.fieldValue[contentItem.name])\n\n\n      var selectedOption = {};\n\n      if (this.state.fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < options.length; i++) {\n          if (options[i].value === this.state.fieldValue[contentItem.name]) {\n            selectedOption = {\n              \"value\": options[i].value,\n              \"name\": options[i].name,\n              \"label\": options[i].label\n            };\n            break;\n          } else selectedOption = {\n            \"value\": null,\n            \"label\": null,\n            \"name\": contentItem.name\n          };\n        }\n      }\n\n      return React.createElement(Select, {\n        name: contentItem.name,\n        value: selectedOption,\n        onChange: this.handleSelectChange,\n        style: {\n          height: 30,\n          width: \"100%\"\n        },\n        options: options,\n        isDisabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2217\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"Currency\" || contentItem.type === \"Float\") {\n      return React.createElement(TextField, {\n        value: this.state.fieldValue[contentItem.name] ? this.state.fieldValue[contentItem.name] : \"\" // onChange = {this.componentChange}\n        ,\n        onBlur: this.handleChange,\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: NumberFormatCustom\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2229\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"Bool\") {\n      return React.createElement(Checkbox // key={this.getUUID()}\n      , {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: this.state.formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: this.handCheckboxChange,\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        checked: this.state.fieldValue[contentItem.name] === \"True\" || this.state.fieldValue[contentItem.name] === true ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2242\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"PersonData\") {\n      return React.createElement(Person, {\n        userId: this.state.userId,\n        userRole: this.state.userRole,\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        selectedDoc: this.state.person,\n        documentViewForm: this.state.documentViewForm,\n        taskID: this.state.taskID,\n        subDocument: true,\n        changeSubDocument: this.changeSubDocument,\n        formType: this.state.personFormType,\n        enumData: this.state.personEnumData // formType = {this.state.formName === \"AdultsIPRForm\" ? \"view\" : \"edit\"}\n        ,\n        docList: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2254\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"Address\") {\n      return React.createElement(Address, {\n        SOAT: this.state.SOAT // countryChange = {this.countryChange}\n        ,\n        regionChange: this.regionChange,\n        districtChange: this.districtChange,\n        subDistrictChange: this.subDistrictChange,\n        villageChange: this.villageChange,\n        handleChange: this.handleChange,\n        Country: this.state.fieldValue.Country,\n        Region: this.state.fieldValue.Region,\n        District: this.state.fieldValue.District,\n        subDistrict: this.state.fieldValue.subDistrict,\n        Village: this.state.fieldValue.Village,\n        ResidentialAddress: this.state.fieldValue.ResidentialAddress,\n        Phone: this.state.fieldValue.Phone,\n        formType: this.state.formType,\n        edit: contentItem.edit,\n        formName: this.state.Form.formName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2274\n        },\n        __self: this\n      });\n    }\n  } // custom allerts\n\n\n  swAlert(text) {\n    return swal({\n      text: text,\n      icon: \"warning\",\n      buttons: {\n        ok: \"Ок\"\n      } // dangerMode: true,\n\n    }).then(click => {\n      if (click === \"ok\") {\n        console.log(\"CLICK OK\", click);\n      }\n    });\n  } // Transfer List functions\n\n\n  // handleAllRight = (name) => {\n  //   setSelectedTransferList({ ...selectedTransferList, [name]: selectedTransferList[name].concat(transferList[name]) })\n  //   setTransferList({ ...transferList, [name]: [] })\n  // }\n  // handleCheckedRight(name) {\n  //   // console.log(\"CHECKED RIGHT\", name)\n  //   setSelectedTransferList({ ...selectedTransferList, [name]: selectedTransferList[name].concat(leftChecked(name)) })\n  //   setTransferList({ ...transferList, [name]: not(transferList[name], leftChecked(name)) })\n  //   setChecked({ ...checked, [name]: not(checked[name], leftChecked(name)) })\n  // }\n  // handleCheckedLeft(name) {\n  //   setTransferList({ ...transferList, [name]: transferList[name].concat(rightChecked(name)) })\n  //   setSelectedTransferList({ ...selectedTransferList, [name]: not(selectedTransferList[name], rightChecked(name)) })\n  //   setChecked({ ...checked, [name]: not(checked[name], rightChecked(name)) })\n  // }\n  // handleAllLeft = (name) => {\n  //   setTransferList({ ...transferList, [name]: transferList[name].concat(selectedTransferList[name]) })\n  //   setSelectedTransferList({ ...selectedTransferList, [name]: [] })\n  // }\n  getTransferList(items, enumDef, edit) {\n    console.log(\"G TR L\", items, enumDef);\n    return React.createElement(Paper, {\n      style: {\n        width: \"100%\",\n        height: 200,\n        overflow: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2348\n      },\n      __self: this\n    }, React.createElement(List, {\n      dense: true,\n      component: \"div\",\n      role: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2349\n      },\n      __self: this\n    }, items.map(value => {\n      const labelId = \"transfer-list-item-\".concat(value, \"-label\");\n      return React.createElement(ListItem, {\n        size: \"small\",\n        key: value,\n        role: \"listitem\",\n        button: true // onClick={this.handleToggle(value, name)}\n        ,\n        style: {\n          height: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2353\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        size: \"small\",\n        checked: this.state.checked[enumDef].indexOf(value) !== -1,\n        tabIndex: -1,\n        disableRipple: true,\n        inputProps: {\n          'aria-labelledby': labelId\n        },\n        style: {\n          height: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2361\n        },\n        __self: this\n      }), React.createElement(ListItemText, {\n        id: labelId,\n        primary: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2369\n        },\n        __self: this\n      }));\n    }), React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2374\n      },\n      __self: this\n    })));\n  } // getTranserListItemLabel(name, value) {\n  //   // console.log(\"G TRL LABEL\", name, value)\n  //   for (let e = 0; e < enumData.length; e++) {\n  //     if (enumData[e].name === name) {\n  //       for (let d = 0; d < enumData[e].data.length; d++) {\n  //         if (enumData[e].data[d].id === value) {\n  //           return enumData[e].data[d].label\n  //         }\n  //       }\n  //     }\n  //   }\n  // }\n\n\n  render() {\n    try {\n      // if (!this.state.Form) return <div>No Form</div>\n      // if (this.state.buttons === undefined) return <div>No Buttons</div>\n      // console.log(\"ViewForm State\", this.state)\n      // console.log(\"ViewForm Props\", this.props)\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2398\n        },\n        __self: this\n      }, this.state.Form !== null && React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2400\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2401\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2402\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2403\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2404\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        style: {\n          maxHeight: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2405\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        style: {\n          fontSize: 16,\n          color: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2406\n        },\n        __self: this\n      }, this.state.Form.label)))), React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2410\n        },\n        __self: this\n      }, this.state.Form.sections.map((section, index) => {\n        return this.sectionBuilder(section, index);\n      })), React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2415\n        },\n        __self: this\n      }, this.state.buttons.map((button, index) => {\n        return this.createButton(button, index);\n      }))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2424\n        },\n        __self: this\n      }), this.state.docList !== null && this.state.docList !== \"null\" && this.state.docList !== undefined ? React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2428\n        },\n        __self: this\n      }, React.createElement(GridForm, {\n        key: \"grid form\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        userId: this.state.userId,\n        organizationId: this.state.organizationId,\n        userRole: this.state.userRole,\n        docList: this.state.docList,\n        size: this.state.size,\n        page: this.state.page,\n        Form: this.state.gridForm,\n        gridFormButtons: this.state.gridFormButtons,\n        rowsPageChange: this.rowsPageChange,\n        sendFieldValues: this.sendFieldValues,\n        SOAT: this.state.SOAT,\n        handleCloseCurrentTab: this.handleCloseCurrentTab,\n        clearTabData: this.clearTabData,\n        callSuccessToast: this.props.callSuccessToast,\n        callErrorToast: this.props.callErrorToast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2429\n        },\n        __self: this\n      })) : React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2452\n        },\n        __self: this\n      }), this.state.docListIPR !== null && this.state.docListIPR !== \"null\" && this.state.docListIPR !== undefined ? React.createElement(GridForm, {\n        key: \"grid form\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        userId: this.state.userId,\n        organizationId: this.state.organizationId,\n        userRole: this.state.userRole,\n        docListIPR: this.state.docListIPR,\n        size: this.state.size,\n        page: this.state.page,\n        Form: this.state.IPRGridForm // {this.state.gridForm.Form}\n        ,\n        medicalCardId: this.state.docId,\n        gridFormButtons: this.state.gridFormButtons,\n        rowsPageChange: this.rowsPageChange,\n        sendFieldValues: this.sendFieldValues,\n        SOAT: this.state.SOAT,\n        handleCloseCurrentTab: this.handleCloseCurrentTab,\n        clearTabData: this.clearTabData,\n        callSuccessToast: this.props.callSuccessToast,\n        callErrorToast: this.props.callErrorToast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2456\n        },\n        __self: this\n      }) : React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2480\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2482\n        },\n        __self: this\n      }), this.state.download === \"downloadExcel\" && React.createElement(Download, {\n        downloadType: this.state.download,\n        Form: this.state.Form,\n        fieldValue: this.state.fieldValue,\n        person: this.state.person,\n        SOAT: this.state.SOAT,\n        selectedDoc: this.state.selectedDoc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2484\n        },\n        __self: this\n      }), this.state.download === \"downloadPDF\" && React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 1,\n        id: \"TableToDownload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2495\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2496\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2497\n        },\n        __self: this\n      }, React.createElement(Download, {\n        downloadType: this.state.download,\n        Form: this.state.Form,\n        fieldValue: this.state.fieldValue,\n        person: this.state.person,\n        SOAT: this.state.SOAT,\n        selectedDoc: this.state.selectedDoc,\n        enumData: this.state.enumData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2498\n        },\n        __self: this\n      })))));\n    } catch (error) {\n      console.log(\"ERROR\", error);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2516\n        },\n        __self: this\n      }, \"error\");\n    }\n  }\n\n}\n\nexport default ViewForm;","map":{"version":3,"sources":["C:\\Users\\SERGO\\Desktop\\ismse\\src\\components\\ViewForm\\ViewForm.jsx"],"names":["React","Select","MaskedInput","NumberFormat","PropTypes","Grid","Card","Paper","TextField","Button","Checkbox","Table","TableHead","TableBody","TableRow","TableCell","Input","FormControl","MuiPickersUtilsProvider","DatePicker","makeStyles","List","ListItem","ListItemText","TableToExcel","swal","DateFnsUtils","ruLocale","moment","Person","Address","GridForm","Download","NumberFormatCustom","props","inputRef","onChange","other","values","target","value","propTypes","func","isRequired","tableToPdf","tableId","mywindow","window","open","document","write","getElementById","innerHTML","close","print","RegNoMask","ref","inputElement","ViewForm","Component","constructor","changeSubDocument","name","subDoc","state","subDocument","setState","console","log","componentChange","event","handleChange","fieldValue","newValue","regex","key","test","regNoChange","trim","componentIntChange","maxValue","substring","length","handleSelectChange","fstate","i","Form","sections","l","contents","edit","regionChange","districtChange","subDistrictChange","villageChange","handCheckboxChange","checked","handleToggle","currentIndex","indexOf","newChecked","push","splice","process_id","session_id","taskID","taskType","enumData","selectedDoc","JSON","parse","docId","buttons","gridForm","IPRGridForm","gridFormButtons","userId","userRole","organizationId","formType","person","personFormType","personEnumData","documentViewForm","docList","docListIPR","download","size","page","SOAT","transferList","selectedTransferList","sendFieldValues","bind","buttonClick","parseDate","rowsPageChange","handleCloseCurrentTab","clearTabData","showScanComponentClick","pushNewBlobs","pushNewImages","commandJson","blobs","images","componentDidUpdate","prevProps","convert","componentDidMount","undefined","sDoc","attributes","AdultsMedicalCart","id","personData","userAction","newDate","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","convertedDate","formName","docListData","userFullName","newTrListOpts","createTransferListOptions","userTask","trList","selTrList","er","form","enums","newTransferList","newSelectedTransferList","s","c","type","newTrItems","newSelTrItems","enumDef","e","d","data","callErrorToast","label","downloadDocument","checkForRegNoAct","callSuccessToast","RegNoAct","fetch","docDefId","headers","method","body","stringify","then","response","text","stringResponse","swAlert","getUUID","uuidv1","require","handleDateTimeChange","date","getAddressData","code","countries","j","regions","k","districts","subDistricts","villages","m","getFieldValues","section","item","subDocumentAttributes","docDef","medicalCardDocDefId","Object","keys","subDocumentPersonAttributes","enumValueText","getFieldValuesToSearch","checkForRequieredFields","checkedSuccessfuly","f","fv","tt","required","fieldName","getDocsIdToSign","docsId","getPersonAge","birthday","ageDifMs","now","getTime","ageDate","fullAge","Math","abs","getUTCFullYear","getEnumValueTextByValue","Id","Text","setOrgIdToMedakt","newDocList","newItem","newDocListIPR","createDocument","commandType","variables","doc","checkResult","updateDocument","filterIPR","filterDocument","editDocument","age","Adult","adult","icon","yes","no","dangerMode","click","docsToSign","docIdList","stateTypeId","docsToRegister","states","stateBody","statusDate","docsToSetState","Document","adultsMedaktDocDefId","childMedaktDocDefId","medaktDocDefId","IPRDocDefId","medakts","IPR","url","ismseApi","startDate","endDate","msecId","regionId","parseInt","districtId","blob","bl","docUrl","URL","createObjectURL","a","createElement","href","appendChild","remove","catch","error","createButton","button","index","margin","backgroundColor","height","fontSize","getEnumValueText","enumName","sectionBuilder","color","width","bodyBuilder","map","contentItem","getTransferList","contentBuilder","inputComponent","options","selectedOption","maxWidth","Country","Region","District","subDistrict","Village","ResidentialAddress","Phone","ok","items","overflow","labelId","render","maxHeight"],"mappings":"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","sourcesContent":["// Import material and react components\r\nimport React from \"react\";\r\nimport Select from 'react-select';\r\nimport MaskedInput from 'react-text-mask';\r\nimport NumberFormat from 'react-number-format';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from '@material-ui/core/Card';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Input from '@material-ui/core/Input';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n// Import libraries\r\nimport TableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\r\nimport swal from 'sweetalert' // https://sweetalert.js.org/guides/\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport ruLocale from \"date-fns/locale/ru\";\r\nimport moment from \"moment\";\r\n\r\n// Import custom components\r\nimport Person from \"../Person/Person.jsx\";\r\nimport Address from \"../../components/Address/Address.jsx\";\r\nimport GridForm from \"../../components/GridForm/GridForm.jsx\";\r\nimport Download from \"../../components/Download/Download.jsx\";\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={values => {\r\n        onChange({\r\n          target: {\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      decimalSeparator={\",\"}\r\n      isNumericString\r\n    />\r\n  );\r\n}\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\nasync function tableToPdf(tableId) {\r\n  let mywindow = window.open('', 'PRINT', 'height=650, width=900, top=100, left=150');\r\n\r\n  mywindow.document.write(`<html><head><title>${'Экспорт в PDF'}</title>`);\r\n  mywindow.document.write('</head><body >');\r\n  mywindow.document.write(document.getElementById(tableId).innerHTML);\r\n  mywindow.document.write('</body></html>');\r\n\r\n  mywindow.document.close(); // necessary for IE >= 10\r\n  // mywindow.focus(); // necessary for IE >= 10*/\r\n\r\n  mywindow.print();\r\n  // mywindow.close();\r\n\r\n  return true;\r\n}\r\nfunction RegNoMask(props) {\r\n  const { inputRef, ...other } = props\r\n  return (\r\n    <MaskedInput\r\n      {...other}\r\n      ref={ref => {\r\n        inputRef(ref ? ref.inputElement : null)\r\n      }}\r\n      mask={[/[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/]}\r\n      placeholderChar={'\\u2000'}\r\n      showMask\r\n    />\r\n  )\r\n}\r\n// const useStyles = makeStyles((theme) => ({\r\n//   paper: {\r\n//     width: \"100%\",\r\n//     height: 200,\r\n//     overflow: 'auto',\r\n//   },\r\n//   button: {\r\n//     // width: \"5%\",\r\n//     margin: theme.spacing(0),\r\n//   }\r\n// }))\r\nclass ViewForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      process_id: this.props.process_id,\r\n      session_id: this.props.session_id,\r\n      taskID: this.props.taskID,\r\n      taskType: this.props.taskType,\r\n      fieldValue: {},\r\n      subDocument: {},\r\n      enumData: this.props.enumData,\r\n      Form: null,\r\n      selectedDoc: JSON.parse(this.props.selectedDoc),\r\n      docId: null,\r\n      buttons: this.props.buttons,\r\n      gridForm: null,\r\n      IPRGridForm: this.props.IPRGridForm,\r\n      gridFormButtons: null,\r\n      userId: this.props.userId,\r\n      userRole: this.props.userRole,\r\n      organizationId: this.props.organizationId,\r\n      formType: this.props.formType,\r\n      person: null,\r\n      personFormType: this.props.personFormType,\r\n      personEnumData: this.props.personEnumData,\r\n      documentViewForm: this.props.documentViewForm,\r\n      docList: null,\r\n      docListIPR: null,\r\n      download: null,\r\n      size: this.props.size,\r\n      page: this.props.page,\r\n      SOAT: null,\r\n      // regNoMask: []\r\n\r\n      // TRANSFER LIST\r\n      transferList: { \"cbd4b1f8-c225-48d6-997c-f2116f2d5122\": [] },\r\n      checked: { \"cbd4b1f8-c225-48d6-997c-f2116f2d5122\": [] },\r\n      selectedTransferList: { \"cbd4b1f8-c225-48d6-997c-f2116f2d5122\": [] },\r\n      // classes: useStyles()\r\n    }\r\n    this.sendFieldValues = this.sendFieldValues.bind(this)\r\n    this.buttonClick = this.buttonClick.bind(this)\r\n    this.parseDate = this.parseDate.bind(this)\r\n    this.changeSubDocument = this.changeSubDocument.bind(this)\r\n    this.rowsPageChange = this.rowsPageChange.bind(this)\r\n    this.handleCloseCurrentTab = this.handleCloseCurrentTab.bind(this)\r\n    this.clearTabData = this.clearTabData.bind(this)\r\n    this.showScanComponentClick = this.showScanComponentClick.bind(this)\r\n    this.pushNewBlobs = this.pushNewBlobs.bind(this)\r\n    this.pushNewImages = this.pushNewImages.bind(this)\r\n  }\r\n  \r\n  handleCloseCurrentTab(process_id) {\r\n    this.props.handleCloseCurrentTab(process_id)\r\n  }\r\n  showScanComponentClick() {\r\n    this.props.showScanComponentClick()\r\n  }\r\n  sendFieldValues(commandJson) {\r\n    this.props.sendFieldValues(commandJson)\r\n  }\r\n  pushNewBlobs(blobs) {\r\n    this.props.pushNewBlobs(blobs)\r\n  }\r\n  pushNewImages(images) {\r\n    this.props.pushNewImages(images)\r\n  }\r\n  async componentDidUpdate(prevProps) {\r\n    // if (!this.state.Form) {\r\n    //   this.setDataFromProps()\r\n    // }\r\n    if (this.state.download !== null) {\r\n      if (this.state.download === \"downloadExcel\") {\r\n        TableToExcel.convert(document.getElementById(\"TableToDownload\"))\r\n        this.setState({ download: null })\r\n      }\r\n      else {\r\n        tableToPdf(\"TableToDownload\")\r\n        this.setState({ download: null })\r\n      }\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    console.log(\"VIEW FORM PROPS\", this.props)\r\n    // Set data from props to local state\r\n    try {\r\n      let fstate = this.state\r\n      fstate.Form = this.props.Form\r\n      fstate.gridForm = this.props.gridForm\r\n      if (this.props.selectedDoc !== undefined && this.props.selectedDoc !== \"null\" && this.props.selectedDoc !== null) {\r\n        var sDoc = JSON.parse(this.props.selectedDoc)\r\n        console.log(\"S DOC\", sDoc)\r\n        //SET PERSON DATA TO PERSON\r\n        if (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\") {\r\n          for (let i = 0; i < sDoc.attributes.length; i++) {\r\n            if (sDoc.attributes[i].name === \"AdultsMedicalCart\") {\r\n              for (let l = 0; l < sDoc.attributes[i].subDocument.attributes.length; l++) {\r\n                if (sDoc.attributes[i].subDocument.attributes[l].name === \"Person\") {\r\n                  fstate.person = sDoc.attributes[i].subDocument.attributes[l].subDocument\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          for (let i = 0; i < sDoc.attributes.length; i++) {\r\n            if (sDoc.attributes[i].name === \"Person\") {\r\n              // console.log(\"PERSON\", sDoc.attributes[i].subDocument)\r\n              if (sDoc.attributes[i].subDocument !== null && sDoc.attributes[i].subDocument !== undefined) {\r\n                fstate.person = sDoc.attributes[i].subDocument\r\n              }\r\n            }\r\n          }\r\n        }\r\n        // SET FIELD VALUES\r\n        for (let i = 0; i < sDoc.attributes.length; i++) {\r\n          if (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\") {\r\n            if (sDoc.attributes[i].name === \"AdultsMedicalCart\") {\r\n              fstate.fieldValue.AdultsMedicalCart = sDoc.attributes[i].subDocument.id\r\n              for (let l = 0; l < sDoc.attributes[i].subDocument.attributes.length; l++) {\r\n                if (sDoc.attributes[i].subDocument.attributes[l].value !== null) {\r\n                  fstate.fieldValue[sDoc.attributes[i].subDocument.attributes[l].name] = sDoc.attributes[i].subDocument.attributes[l].value\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              if (sDoc.attributes[i].value !== null) {\r\n                fstate.fieldValue[sDoc.attributes[i].name] = sDoc.attributes[i].value\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            if (sDoc.attributes[i].value !== null) {\r\n              fstate.fieldValue[sDoc.attributes[i].name] = sDoc.attributes[i].value\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // SET PERSON DATA INTO EMPTY IPR FORM\r\n      if (this.props.person !== undefined && this.props.person !== \"null\" && this.props.person !== null) {\r\n        var personData = JSON.parse(this.props.person)\r\n        fstate.person = personData\r\n        fstate.fieldValue.Person = personData.id\r\n      }\r\n      if (this.props.docList !== undefined) {\r\n        fstate.docList = JSON.parse(this.props.docList)\r\n      }\r\n      if (this.props.docListIPR !== undefined) {\r\n        fstate.docListIPR = JSON.parse(this.props.docListIPR)\r\n      }\r\n      if (this.props.SOAT !== undefined) {\r\n        fstate.SOAT = this.props.SOAT\r\n      }\r\n      if (this.props.gridFormButtons !== undefined) {\r\n        fstate.gridFormButtons = this.props.gridFormButtons\r\n      }\r\n      if (this.props.docId !== null || this.props.docId !== \"null\" || this.props.docId !== undefined) {\r\n        fstate.docId = this.props.docId\r\n      }\r\n      // this.setState(fstate)\r\n      // UPDAETE SOME DATA if nesessary\r\n      if (this.props.userAction === \"reexamination\") {\r\n        var newDate = new Date()\r\n        var dd = String(newDate.getDate()).padStart(2, '0')\r\n        var mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\r\n        var yyyy = newDate.getFullYear()\r\n        var convertedDate = String(dd + '.' + mm + '.' + yyyy)\r\n        fstate.fieldValue[\"Date\"] = convertedDate\r\n        fstate.fieldValue[\"RegNoAct\"] = null\r\n        fstate.fieldValue[\"ExaminationPrRe\"] = \"8d71baae-b834-42e5-be87-7f5637cc46d8\"\r\n        fstate.fieldValue[\"goal1\"] = false\r\n        fstate.fieldValue[\"goal2\"] = false\r\n        fstate.fieldValue[\"goal3\"] = false\r\n        fstate.fieldValue[\"goal4\"] = null\r\n        fstate.fieldValue[\"goal5\"] = false\r\n        fstate.fieldValue[\"goal6\"] = false\r\n        fstate.fieldValue[\"goalAnother\"] = null\r\n        fstate.fieldValue[\"DisabilityGroup\"] = null\r\n        // fstate.fieldValue[\"ExamDateFrom\"] = \"NaN.NaN.NaN\"\t\r\n        // fstate.fieldValue[\"ExamDateTo\"] = \"NaN.NaN.NaN\"\t\r\n        // fstate.fieldValue[\"ExamStartDate\"] = \"NaN.NaN.NaN\"\r\n        // fstate.fieldValue[\"ExamOfDate\"] = \"NaN.NaN.NaN\"\r\n        // fstate.fieldValue[\"ExamFinishDate\"] = \"NaN.NaN.NaN\"\r\n        fstate.fieldValue[\"ExamDateFrom\"] = undefined\r\n        fstate.fieldValue[\"ExamDateTo\"] = undefined\r\n        fstate.fieldValue[\"ExamStartDate\"] = undefined\r\n        fstate.fieldValue[\"ExamOfDate\"] = undefined\r\n        fstate.fieldValue[\"ExamFinishDate\"] = undefined\r\n        fstate.fieldValue[\"ReferenceNumber\"] = undefined\r\n      }\r\n      if (fstate.Form !== null) {\r\n        if ((fstate.Form.formName === \"AdultsIPRForm\" || fstate.Form.formName === \"ChildIPRForm\") && fstate.fieldValue.AdultsMedicalCart === undefined) {\r\n          fstate.fieldValue.AdultsMedicalCart = this.props.docId\r\n        }\r\n        if ((fstate.person === null || this.props.person !== \"null\") && fstate.Form.formName === \"TransferMedicalCertificateForm\" && fstate.docList !== \"[]\") {\r\n          var docListData = JSON.parse(this.props.docList)\r\n          // console.log(\"docListData\", docListData)\r\n          for (let l = 0; l < docListData[0].attributes.length; l++) {\r\n            if (docListData[0].attributes[l].name === \"Person\") {\r\n              fstate.person = docListData[0].attributes[l].subDocument\r\n            }\r\n          }\r\n        }\r\n        if (fstate.fieldValue[\"MseName\"] === undefined &&\r\n          fstate.Form.formName !== \"TransferMedicalCertificateForm\" &&\r\n          fstate.Form.formName !== \"AdultsDetailedSearchForm\" &&\r\n          fstate.Form.formName !== \"AdultsIPRSearchForm\" &&\r\n          fstate.Form.formName !== \"ChildDetailedSearchForm\" &&\r\n          fstate.Form.formName !== \"AdultsIPRSearchForm\" &&\r\n          fstate.Form.formName !== \"AdultsRegistrationSearchForm\"\r\n        ) {\r\n          fstate.fieldValue[\"MseName\"] = fstate.organizationId\r\n        }\r\n        // DISABLE 2 BLOCKS OF FORM /FROM INCOMING DATA\r\n        if (fstate.fieldValue[\"Occupation\"] !== \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\r\n          for (let i = 0; i < fstate.Form.sections.length; i++) {\r\n            if (fstate.Form.sections[i].name === \"HowToDoJob\") {\r\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n                fstate.Form.sections[i].contents[l].edit = false\r\n                fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false\r\n              }\r\n            }\r\n            else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\r\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n                fstate.Form.sections[i].contents[l].edit = false\r\n                fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (this.props.taskType === \"showAdultsStatesSelectingForm\") {\r\n        fstate.fieldValue[\"userName\"] = this.props.userFullName\r\n      }\r\n      if (fstate.fieldValue[\"Country\"] === undefined && this.props.SOAT !== null && this.props.SOAT !== undefined) {\r\n        fstate.fieldValue[\"Country\"] = \"4170000000000\"\r\n      }\r\n      // SET PERSON DATA IF IT\"S null\r\n      if (fstate.person === null && (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\")) {\r\n        if (fstate.fieldValue[\"IPRNo\"] === undefined) {\r\n          fstate.fieldValue[\"IPRNo\"] = fstate.fieldValue[\"No\"]\r\n        }\r\n        for (let l = 0; l < fstate.selectedDoc.attributes.length; l++) {\r\n          if (fstate.selectedDoc.attributes[l].name === \"Person\") {\r\n            fstate.person = fstate.selectedDoc.attributes[l].subDocument\r\n            // fstate.fieldValue.Person = fstate.selectedDoc.attributes[l].subDocument.id\r\n          }\r\n        }\r\n      }\r\n      if (fstate.person === null && this.props.person !== undefined && this.props.person !== \"null\" && this.props.person !== null) {\r\n        personData = JSON.parse(this.props.person)\r\n        fstate.person = personData\r\n        fstate.fieldValue.Person = personData.id\r\n      }\r\n\r\n\r\n      // SET DATE OF REGISTRATION DEFAULT CURRENT DAY\r\n      if (this.props.taskType === \"showRegForm\" || this.props.taskType === \"showChildRegForm\" ||\r\n        this.props.taskType === \"showDetailedForm\" || this.props.taskType === \"showChildDetailedForm\") {\r\n        if (fstate.fieldValue[\"Date\"] === undefined) {\r\n          let newDate = new Date()\r\n          let dd = String(newDate.getDate()).padStart(2, '0')\r\n          let mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\r\n          let yyyy = newDate.getFullYear()\r\n          let convertedDate = String(dd + '.' + mm + '.' + yyyy)\r\n          fstate.fieldValue[\"Date\"] = convertedDate\r\n        }\r\n      }\r\n\r\n      let newTrListOpts = this.createTransferListOptions(this.props.userTask.Form, this.props.userTask.enumData)\r\n      fstate.transferList = newTrListOpts.trList\r\n      fstate.selectedTransferList = newTrListOpts.selTrList\r\n      this.setState(fstate)\r\n    }\r\n    catch (er) {\r\n      console.log(\"ERROR\", er)\r\n    }\r\n  }\r\n  createTransferListOptions(form, enums) {\r\n    let newTransferList = {}\r\n    let newSelectedTransferList = {}\r\n    for (let s = 0; s < form.sections.length; s++) {\r\n      for (let c = 0; c < form.sections[s].contents.length; c++) {\r\n        if (form.sections[s].contents[c].type === \"TransferList\") {\r\n          let newTrItems = []\r\n          let newSelTrItems = []\r\n          let enumDef = form.sections[s].contents[c].enumDef\r\n          for (let e = 0; e < enums.length; e++) {\r\n            if (enums[e] !== null) {\r\n              if (enums[e].enumDef === enumDef) {\r\n                for (let d = 0; d < enums[e].data.length; d++) {\r\n                  newTrItems.push(enums[e].data[d].id)\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              this.props.callErrorToast(\"Ошибка сбора справочной информации \" + form.sections[s].contents[c].label)\r\n            }\r\n          }\r\n          newTransferList[enumDef] = newTrItems\r\n          newSelectedTransferList[enumDef] = newSelTrItems\r\n        }\r\n      }\r\n    }\r\n    return (\r\n      {\r\n        trList: newTransferList,\r\n        selTrList: newSelectedTransferList\r\n      }\r\n    )\r\n  }\r\n  \r\n  async downloadDocument(type) {\r\n    this.setState({ download: type })\r\n  }\r\n  // Delete close component and delete its data from hash stared in home component\r\n  clearTabData(process_id) {\r\n    this.props.clearTabData(process_id)\r\n  }\r\n  // Check field regNoAct if it's exist in database, it should be unique\r\n  async checkForRegNoAct(commandJson, length) {\r\n    if (this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined) {\r\n      this.props.callSuccessToast(\"Проверка № Медакта\")\r\n      var RegNoAct = { attributes: [{ name: \"RegNoAct\", value: this.state.fieldValue[\"RegNoAct\"], type: \"Text\" }] }\r\n      console.log(\"BODY\", RegNoAct)\r\n      await fetch(\"api/Document/FilterDocumentsByDefId?defId=\" + this.state.Form.docDefId + \"&size=3&page=1&userId=\" + this.state.userId, {\r\n        headers: {\r\n          \"Accept\": \"application/x-www-form-urlencoded\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(RegNoAct),\r\n        // mode: 'no-cors'\r\n      })\r\n        .then(response => {\r\n          response.text().then(stringResponse => {\r\n            var document = JSON.parse(stringResponse)\r\n            console.log(\"RESPONSE\", document)\r\n            // this.sendFieldValues(commandJson)\r\n            if (document.length <= length) {\r\n              console.log(\"LENGTH\", document.length, length)\r\n              this.sendFieldValues(commandJson)\r\n              this.clearTabData(this.state.process_id)\r\n              this.props.callSuccessToast(\"Проверка завершена!\")\r\n            }\r\n            else {\r\n              this.swAlert(\"Гражданин с таким № акта уже существует!\")\r\n            }\r\n          })\r\n        })\r\n    }\r\n    else { this.props.callErrorToast(\"Заполните поле \\\"№ акта по МСЭК\\\"\") }\r\n  }\r\n  // Handle changing of person document fields if it is enabled for input and set values to local state\r\n  changeSubDocument = (name, value) => {\r\n    let subDoc = this.state.subDocument\r\n    subDoc[name] = value\r\n    this.setState({ subDocument: subDoc })\r\n    console.log(\"Person Data\", name, value)\r\n  }\r\n  // Returns random id\r\n  getUUID() {\r\n    const uuidv1 = require(\"uuid/v1\")\r\n    return uuidv1()\r\n  }\r\n  // Handling component changing without render all state, made for optimization\r\n  componentChange = (event) => {\r\n    console.log(\"COM CHANGE\", event.target.name, event.target.value)\r\n  }\r\n  // Handling component changing with render state, used onBlur of component, made for optimization\r\n  handleChange = (event) => {\r\n    // console.log(\"HANDLE TEXT CHANGE\", event.target.name, event.target.value)\r\n    let fieldValue = this.state.fieldValue\r\n    if (event.target.name === \"RegNoAct\") {\r\n      let newValue = \"\"\r\n      let regex = /[0-9-№]/\r\n      for (let key in event.target.value) {\r\n        if (regex.test(event.target.value[key]) === true) {\r\n          newValue = newValue + event.target.value[key]\r\n        }\r\n      }\r\n      fieldValue[event.target.name] = newValue\r\n      // console.log(\"newValue\", newValue, fieldValue)\r\n    }\r\n    else {\r\n      fieldValue[event.target.name] = event.target.value\r\n    }\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  // Controlling input in one field RegNoAct, create mask for inpur, field should accept only \"№\", \"-\" and all digits\r\n  regNoChange = (event) => {\r\n    // event.preventDefault()\r\n    var value = event.target.value.trim()\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = value\r\n    this.setState({ fieldValue: fieldValue })\r\n    // console.log(\"REGNOACT\", event.target.value)\r\n    // if(event.target.value === \"\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\"){\r\n    //   console.log(\"REGNO null\")\r\n    //   let fieldValue = this.state.fieldValue\r\n    //   fieldValue[event.target.name] = null\r\n    //   this.setState({fieldValue: fieldValue})\r\n    // }\r\n    // else{\r\n    //   for(let i=value.length; i>0; i--){\r\n    //     let lastChar = value.substring(i -1, i)\r\n    //     console.log(\"LAST\", lastChar)\r\n    //     if(lastChar !== '\\u2000'){\r\n    //       let fieldValue = this.state.fieldValue\r\n    //       fieldValue[event.target.name] = value\r\n    //       this.setState({fieldValue: fieldValue})\r\n    //       break\r\n    //     }\r\n    //     value = value.substring(0, value.length -1)\r\n    //   }\r\n    // }\r\n    // REGEX\r\n    // let regex = /[0-9-]/\r\n    // let lastChar = value.substring(value.length -1, value.length)\r\n    // console.log(\"LAST\", lastChar)\r\n    // // let chars = event.target.value.split('')\r\n    // // let char = chars.pop()\r\n\r\n    // if(!regex.test(lastChar)){\r\n    //   // value = chars.join('')\r\n    //   console.log(\"not valid\", lastChar)\r\n    // }\r\n    // else{\r\n    //   let fieldValue = this.state.fieldValue\r\n    //   fieldValue[event.target.name] = value\r\n    //   this.setState({fieldValue: fieldValue})\r\n    // }\r\n  }\r\n  // regNoKeyPress=(event)=>{\r\n  //   let x = event.charCode\r\n  //   console.log(\"CODE\", x)\r\n  // }\r\n  // getRegNoMask(){\r\n  //   let value = this.state.fieldValue[\"RegNoAct\"] !== undefined ? this.state.fieldValue[\"RegNoAct\"] : \"\"\r\n  //   let valueLength = value.length\r\n  //   console.log(\"VAL LEN\", valueLength)\r\n  //   let regex = /[1-9-]/\r\n  //   let mask = []\r\n  //   for(let i=0; i<valueLength; i++){\r\n  //     mask.push(regex)\r\n  //   }\r\n  //   // let mask=[/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/]\r\n  //   return mask\r\n  // }\r\n\r\n  // Handler that control input of components with type of integer\r\n  componentIntChange = (event) => {\r\n    // console.log(\"CHANGE\", event.target.name, event.target.value)\r\n    if (event.target.value > 2147483646) {\r\n      let value = event.target.value\r\n      let maxValue = value.substring(0, value.length - 1)\r\n      // console.log(\"SLICE\", value, maxValue)\r\n      let fieldValue = this.state.fieldValue\r\n      fieldValue[event.target.name] = maxValue\r\n      this.setState({ fieldValue: fieldValue })\r\n    }\r\n\r\n    // else{\r\n    //   let fieldValue = this.state.fieldValue\r\n    //   console.log(\"CHANGE\", event.target.name, event.target.value)\r\n    //   fieldValue[event.target.name] = event.target.value\r\n    //   this.setState({fieldValue: fieldValue})\r\n    // }\r\n  }\r\n  // Handler of select copmponet changes\r\n  handleSelectChange = (event) => {\r\n    let fstate = this.state\r\n    if (event.name === \"Occupation\") {\r\n      if (event.value === \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\r\n        for (let i = 0; i < fstate.Form.sections.length; i++) {\r\n          if (fstate.Form.sections[i].name === \"HowToDoJob\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = true\r\n            }\r\n          }\r\n          else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = true\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (event.value !== \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\r\n        for (let i = 0; i < fstate.Form.sections.length; i++) {\r\n          if (fstate.Form.sections[i].name === \"HowToDoJob\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = false\r\n              fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false\r\n            }\r\n          }\r\n          else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = false\r\n              fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    fstate.fieldValue[event.name] = event.value\r\n    this.setState(fstate)\r\n    console.log(`Option selected:`, event)\r\n  }\r\n  // 5 Hadlers that control changing of address data changing\r\n  // countryChange =(event) => {\r\n  //   let fieldValue = this.state.fieldValue\r\n  //   fieldValue[event.target.name] = event.target.value\r\n  //   fieldValue[\"Region\"] = null\r\n  //   fieldValue[\"District\"] = null\r\n  //   fieldValue[\"subDistrict\"] = null\r\n  //   fieldValue[\"Village\"] = null\r\n  //   console.log(\"Country selected\", event.target.name)\r\n  //   this.setState({fieldValue: fieldValue})\r\n  // }\r\n  regionChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    fieldValue[\"District\"] = null\r\n    fieldValue[\"subDistrict\"] = null\r\n    fieldValue[\"Village\"] = null\r\n    console.log(\"Region selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  districtChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    fieldValue[\"subDistrict\"] = null\r\n    fieldValue[\"Village\"] = null\r\n    console.log(\"District selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  subDistrictChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    fieldValue[\"Village\"] = null\r\n    console.log(\"District selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  villageChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    console.log(\"Village selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  // DateTime component change handler\r\n  handleDateTimeChange(date, name) {\r\n    let fieldValue = this.state.fieldValue\r\n    if (date !== null) {\r\n      var newDate = new Date(date)\r\n      var dd = String(newDate.getDate()).padStart(2, '0')\r\n      var mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\r\n      var yyyy = newDate.getFullYear()\r\n      var convertedDate = String(dd + '.' + mm + '.' + yyyy)\r\n      // console.log(\"CDATE\", convertedDate)\r\n      fieldValue[name] = convertedDate\r\n      this.setState({ fieldValue: fieldValue })\r\n    }\r\n    else {\r\n      fieldValue[name] = undefined\r\n      this.setState({ fieldValue: fieldValue })\r\n    }\r\n\r\n  }\r\n  // Convert date to approptiate format\r\n  parseDate(date) {\r\n    if (date !== undefined) {\r\n      var dd = date.substring(0, 2)\r\n      var mm = date.substring(3, 5)\r\n      var yyyy = date.substring(6, 10)\r\n      var convertedDate = String(yyyy + '-' + mm + '-' + dd)\r\n      var newDate = new Date(convertedDate) // \"2020-01-26\"\r\n      dd = String(newDate.getDate()).padStart(2, '0')\r\n      mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\r\n      yyyy = newDate.getFullYear()\r\n      convertedDate = yyyy + '-' + mm + '-' + dd\r\n    }\r\n    // console.log(\"DATE\", convertedDate)\r\n    return convertedDate\r\n  }\r\n\r\n  handCheckboxChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.checked\r\n    this.setState({ fieldValue: fieldValue })\r\n    // console.log(\"new checkbox status\", this.state.fieldValue[event.target.name])\r\n  }\r\n  // Get name of address by its code\r\n  getAddressData(code) {\r\n    for (var i = 0; i < this.state.SOAT.countries.length; i++) {\r\n      if (code === this.state.SOAT.countries[i].code) {\r\n        return this.state.SOAT.countries[i].name\r\n      }\r\n      else {\r\n        for (var j = 0; j < this.state.SOAT.countries[i].regions.length; j++) {\r\n          if (code === this.state.SOAT.countries[i].regions[j].code) {\r\n            return this.state.SOAT.countries[i].regions[j].name\r\n          }\r\n          else {\r\n            for (var k = 0; k < this.state.SOAT.countries[i].regions[j].districts.length; k++) {\r\n              if (code === this.state.SOAT.countries[i].regions[j].districts[k].code) {\r\n                return this.state.SOAT.countries[i].regions[j].districts[k].name\r\n              }\r\n              else {\r\n                if (this.state.SOAT.countries[i].regions[j].districts[k].subDistricts !== undefined) {\r\n                  for (var l = 0; l < this.state.SOAT.countries[i].regions[j].districts[k].subDistricts.length; l++) {\r\n                    if (code === this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].code) {\r\n                      return this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].name\r\n                    }\r\n                    else {\r\n                      if (this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages !== undefined) {\r\n                        for (var m = 0; m < this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages.length; m++) {\r\n                          if (code === this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages[m].code) {\r\n                            return this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages[m].name\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Collecting all field values and return as attributes\r\n  getFieldValues() {\r\n    var attributes = []\r\n    if (this.state.taskType === \"showIPRForm\" || this.state.taskType === \"showChildIPRForm\") {\r\n      console.log(\"IPR FORM\")\r\n      for (var key in this.state.fieldValue) {\r\n        if (key === \"AdultsMedicalCart\") {\r\n          attributes.push({\r\n            name: \"AdultsMedicalCart\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Doc\",\r\n          })\r\n        }\r\n        else if (key === \"IPRNo\") {\r\n          attributes.push({\r\n            name: \"IPRNo\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else {\r\n          for (var section = 0; section < this.state.Form.sections.length; section++) {\r\n            for (var item = 0; item < this.state.Form.sections[section].contents.length; item++) {\r\n              if (key === this.state.Form.sections[section].contents[item].name) {\r\n                if (this.state.Form.sections[section].contents[item].edit === true) {\r\n                  attributes.push({\r\n                    name: this.state.Form.sections[section].contents[item].name,\r\n                    value: this.state.fieldValue[key],\r\n                    type: this.state.Form.sections[section].contents[item].type,\r\n                  })\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else if (this.state.taskType === \"showIPRSearchForm\" || this.state.taskType === \"showChildIPRSearchForm\") {\r\n      var subDocumentAttributes = []\r\n      for (key in this.state.fieldValue) {\r\n        if (this.state.fieldValue[key] !== null && this.state.fieldValue[key] !== \"\") {\r\n          if (key === \"Country\") {\r\n            subDocumentAttributes.push({\r\n              name: \"Country\",\r\n              value: this.state.fieldValue[key],\r\n              type: \"Text\",\r\n            })\r\n          }\r\n          else if (key === \"Region\") {\r\n            subDocumentAttributes.push({\r\n              name: \"Region\",\r\n              value: this.state.fieldValue[key],\r\n              type: \"Text\",\r\n            })\r\n          }\r\n          else if (key === \"District\") {\r\n            subDocumentAttributes.push({\r\n              name: \"District\",\r\n              value: this.state.fieldValue[key],\r\n              type: \"Text\",\r\n            })\r\n          }\r\n        }\r\n        for (let section = 0; section < this.state.Form.sections.length; section++) {\r\n          for (let item = 0; item < this.state.Form.sections[section].contents.length; item++) {\r\n            if (key === this.state.Form.sections[section].contents[item].name) {\r\n              subDocumentAttributes.push({\r\n                name: this.state.Form.sections[section].contents[item].name,\r\n                value: this.state.fieldValue[key],\r\n                type: this.state.Form.sections[section].contents[item].type,\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n      attributes.push({\r\n        name: \"AdultsMedicalCart\",\r\n        type: \"Doc\",\r\n        docDef: this.state.Form.medicalCardDocDefId,\r\n        \"subDocument\": {\r\n          \"attributes\": subDocumentAttributes\r\n        }\r\n      })\r\n      if (Object.keys(this.state.subDocument).length !== 0) {\r\n        var subDocumentPersonAttributes = []\r\n        for (var key in this.state.subDocument) {\r\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\r\n            if (key === this.state.documentViewForm.attributes[i].name) {\r\n              subDocumentPersonAttributes.push({\r\n                name: this.state.documentViewForm.attributes[i].name,\r\n                value: this.state.subDocument[key],\r\n                type: this.state.documentViewForm.attributes[i].type,\r\n              })\r\n              console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key])\r\n            }\r\n          }\r\n        }\r\n        attributes.subDocumentAttributes.push({\r\n          name: \"Person\",\r\n          type: \"Doc\",\r\n          docDef: this.state.documentViewForm.docDefId,\r\n          \"subDocument\": {\r\n            \"attributes\": subDocumentPersonAttributes\r\n          }\r\n        })\r\n      }\r\n      console.log(\"IPRATRS\", attributes)\r\n    }\r\n    else {\r\n      // console.log(\"Fiel Values\", this.state.fieldValue)\r\n      for (key in this.state.fieldValue) {\r\n        if (key === \"Country\") {\r\n          attributes.push({\r\n            name: \"Country\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Region\") {\r\n          attributes.push({\r\n            name: \"Region\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"District\") {\r\n          attributes.push({\r\n            name: \"District\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"subDistrict\") {\r\n          attributes.push({\r\n            name: \"subDistrict\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Village\") {\r\n          attributes.push({\r\n            name: \"Village\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"ResidentialAddress\") {\r\n          attributes.push({\r\n            name: \"ResidentialAddress\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Phone\") {\r\n          attributes.push({\r\n            name: \"Phone\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Person\") {\r\n          attributes.push({\r\n            name: \"Person\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Doc\",\r\n          })\r\n        }\r\n\r\n        else {\r\n          for (section = 0; section < this.state.Form.sections.length; section++) {\r\n            for (item = 0; item < this.state.Form.sections[section].contents.length; item++) {\r\n              if (key === this.state.Form.sections[section].contents[item].name) {\r\n                attributes.push({\r\n                  name: this.state.Form.sections[section].contents[item].name,\r\n                  value: this.state.fieldValue[key],\r\n                  type: this.state.Form.sections[section].contents[item].type\r\n                })\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (Object.keys(this.state.subDocument).length !== 0) {\r\n        subDocumentAttributes = []\r\n        for (key in this.state.subDocument) {\r\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\r\n            if (key === this.state.documentViewForm.attributes[i].name) {\r\n              subDocumentAttributes.push({\r\n                name: this.state.documentViewForm.attributes[i].name,\r\n                value: this.state.subDocument[key],\r\n                type: this.state.documentViewForm.attributes[i].type,\r\n              })\r\n              console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key])\r\n            }\r\n          }\r\n        }\r\n        attributes.push({\r\n          name: \"Person\",\r\n          type: \"Doc\",\r\n          docDef: this.state.documentViewForm.docDefId,\r\n          \"subDocument\": {\r\n            \"attributes\": subDocumentAttributes\r\n          }\r\n        })\r\n      }\r\n    }\r\n    // console.log(\"ATTR\", attributes)\r\n    return attributes\r\n  }\r\n  getFieldValuesToSearch() {\r\n    var attributes = []\r\n    for (var key in this.state.fieldValue) {\r\n      if (this.state.fieldValue[key] !== null && this.state.fieldValue[key] !== \"\") { //&& this.state.fieldValue[key] !== \"NaN.NaN.NaN\"\r\n        if (key === \"Country\") {\r\n          attributes.push({\r\n            name: \"Country\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Region\") {\r\n          attributes.push({\r\n            name: \"Region\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"District\") {\r\n          attributes.push({\r\n            name: \"District\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"subDistrict\") {\r\n          attributes.push({\r\n            name: \"subDistrict\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Village\") {\r\n          attributes.push({\r\n            name: \"Village\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"ResidentialAddress\") {\r\n          attributes.push({\r\n            name: \"ResidentialAddress\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Phone\") {\r\n          attributes.push({\r\n            name: \"Phone\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Person\") {\r\n          attributes.push({\r\n            name: \"Person\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Doc\",\r\n          })\r\n        }\r\n\r\n        else {\r\n          for (var section = 0; section < this.state.Form.sections.length; section++) {\r\n            for (var item = 0; item < this.state.Form.sections[section].contents.length; item++) {\r\n              if (key === this.state.Form.sections[section].contents[item].name) {\r\n                attributes.push({\r\n                  name: this.state.Form.sections[section].contents[item].name,\r\n                  value: this.state.fieldValue[key],\r\n                  type: this.state.Form.sections[section].contents[item].type\r\n                })\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (Object.keys(this.state.subDocument).length !== 0) {\r\n      var subDocumentAttributes = []\r\n      for (key in this.state.subDocument) {\r\n        if (this.state.subDocument[key] !== null && this.state.subDocument[key] !== \"\") { //&& this.state.subDocument[key] !== \"NaN.NaN.NaN\"\r\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\r\n            if (key === this.state.documentViewForm.attributes[i].name) {\r\n              subDocumentAttributes.push({\r\n                name: this.state.documentViewForm.attributes[i].name,\r\n                value: this.state.subDocument[key],\r\n                type: this.state.documentViewForm.attributes[i].type,\r\n              })\r\n              // console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key])\r\n            }\r\n          }\r\n        }\r\n      }\r\n      attributes.push({\r\n        name: \"Person\",\r\n        type: \"Doc\",\r\n        docDef: this.state.documentViewForm.docDefId,\r\n        \"subDocument\": {\r\n          \"attributes\": subDocumentAttributes\r\n        }\r\n      })\r\n    }\r\n    return attributes\r\n  }\r\n  // checkForEmptyFields(commandJson, length) {\r\n  //   //  Adulds Medakt || Reg Form\r\n  //   if (this.state.taskType === \"showRegForm\" || this.state.taskType === \"showDetailedForm\") {\r\n  //     // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\r\n  //     if (this.state.fieldValue[\"Country\"] !== null && this.state.fieldValue[\"Country\"] !== undefined) {\r\n  //       if (this.state.fieldValue[\"Region\"] !== null && this.state.fieldValue[\"Region\"] !== undefined) {\r\n  //         if (this.state.fieldValue[\"EducationAct\"] !== null && this.state.fieldValue[\"EducationAct\"] !== undefined) {\r\n  //           if (this.state.fieldValue[\"Occupation\"] !== null && this.state.fieldValue[\"Occupation\"] !== undefined) {\r\n  //             if (this.state.fieldValue[\"ExaminationPrRe\"] !== null && this.state.fieldValue[\"ExaminationPrRe\"] !== undefined) {\r\n  //               if (this.state.fieldValue[\"ExaminationPlace\"] !== null && this.state.fieldValue[\"ExaminationPlace\"] !== undefined) {\r\n  //                 if (this.state.fieldValue[\"PensionStatus\"] !== null && this.state.fieldValue[\"PensionStatus\"] !== undefined) {\r\n  //                   if (\r\n  //                     (this.state.fieldValue[\"goal1\"] !== false && this.state.fieldValue[\"goal1\"] !== undefined && this.state.fieldValue[\"goal1\"] !== \"False\") ||\r\n  //                     (this.state.fieldValue[\"goal2\"] !== false && this.state.fieldValue[\"goal2\"] !== undefined && this.state.fieldValue[\"goal2\"] !== \"False\") ||\r\n  //                     (this.state.fieldValue[\"goal3\"] !== false && this.state.fieldValue[\"goal3\"] !== undefined && this.state.fieldValue[\"goal3\"] !== \"False\") ||\r\n  //                     (this.state.fieldValue[\"goal4\"] !== null && this.state.fieldValue[\"goal4\"] !== undefined && this.state.fieldValue[\"goal4\"] !== \"False\") ||\r\n  //                     (this.state.fieldValue[\"goal5\"] !== false && this.state.fieldValue[\"goal5\"] !== undefined && this.state.fieldValue[\"goal5\"] !== \"False\") ||\r\n  //                     (this.state.fieldValue[\"goal6\"] !== false && this.state.fieldValue[\"goal6\"] !== undefined && this.state.fieldValue[\"goal6\"] !== \"False\") ||\r\n  //                     (this.state.fieldValue[\"goalAnother\"] !== \"\" && this.state.fieldValue[\"goalAnother\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"PlaceOfWork\"] !== \"\" && this.state.fieldValue[\"PlaceOfWork\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"Wage\"] !== \"\" && this.state.fieldValue[\"Wage\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"PensionAmount\"] !== \"\" && this.state.fieldValue[\"PensionAmount\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"Profession\"] !== \"\" && this.state.fieldValue[\"Profession\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined)\r\n  //                   ) {\r\n  //                     if (\r\n  //                       (this.state.fieldValue[\"Good\"] !== false && this.state.fieldValue[\"Good\"] !== undefined && this.state.fieldValue[\"Good\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"Satisfactory\"] !== false && this.state.fieldValue[\"Satisfactory\"] !== undefined && this.state.fieldValue[\"Satisfactory\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"goUnsatisfactoryal1\"] !== false && this.state.fieldValue[\"Unsatisfactory\"] !== undefined && this.state.fieldValue[\"Unsatisfactory\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"SeparateApartment\"] !== false && this.state.fieldValue[\"SeparateApartment\"] !== undefined && this.state.fieldValue[\"SeparateApartment\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"OwnHouse\"] !== false && this.state.fieldValue[\"OwnHouse\"] !== undefined && this.state.fieldValue[\"OwnHouse\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"Dormitory\"] !== false && this.state.fieldValue[\"Dormitory\"] !== undefined && this.state.fieldValue[\"Dormitory\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"LivingAreaRemovable\"] !== false && this.state.fieldValue[\"LivingAreaRemovable\"] !== undefined && this.state.fieldValue[\"LivingAreaRemovable\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"NoOwnAccommodation\"] !== false && this.state.fieldValue[\"NoOwnAccommodation\"] !== undefined && this.state.fieldValue[\"NoOwnAccommodation\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"Additionally\"] !== false && this.state.fieldValue[\"Additionally\"] !== undefined && this.state.fieldValue[\"Additionally\"] !== \"False\")\r\n  //                     ) {\r\n  //                       // if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\r\n  //                       if (this.state.taskType === \"showDetailedForm\" || this.state.taskType === \"showChildDetailedForm\") {\r\n  //                         if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\r\n  //                           if (this.state.fieldValue[\"ExamOfDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamOfDate\"] !== undefined) {\r\n  //                             this.checkForRegNoAct(commandJson, length)\r\n  //                             // this.sendFieldValues(commandJson)\r\n  //                           } else this.props.callErrorToast(\"Заполните поле \\\"Дата проведения экспертизы\\\"\")\r\n  //                         } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\r\n  //                       } else this.checkForRegNoAct(commandJson, length)\r\n  //                       // } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\r\n  //                     } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Жилищно-бытовые условия\\\"\")\r\n  //                   } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Цель освидетельствования\\\"\")\r\n  //                 } else this.props.callErrorToast(\"Заполните поле \\\"Получает пенсию\\\"\")\r\n  //               } else this.props.callErrorToast(\"Заполните поле \\\"Место освидетельствования\\\"\")\r\n  //             } else this.props.callErrorToast(\"Заполните поле \\\"Освидетельствование\\\"\")\r\n  //           } else this.props.callErrorToast(\"Заполните поле \\\"Род деятельности\\\"\")\r\n  //         } else this.props.callErrorToast(\"Заполните поле \\\"Образование\\\"\")\r\n  //       } else this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\")\r\n  //     } else this.props.callErrorToast(\"Заполните поле \\\"Страна\\\"\")\r\n  //     // } else this.props.callErrorToast(\"Заполните поле \\\"№ акта по МСЭ\\\"\")\r\n  //   }\r\n  //   // Child Medakt || Reg Form\r\n  //   else if (this.state.taskType === \"showChildRegForm\" || this.state.taskType === \"showChildDetailedForm\") {\r\n  //     // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\r\n  //     if (this.state.fieldValue[\"Country\"] !== null && this.state.fieldValue[\"Country\"] !== undefined) {\r\n  //       if (this.state.fieldValue[\"Region\"] !== null && this.state.fieldValue[\"Region\"] !== undefined) {\r\n  //         if (this.state.fieldValue[\"EducationAct\"] !== null && this.state.fieldValue[\"EducationAct\"] !== undefined) {\r\n  //           if (this.state.fieldValue[\"ExaminationPrRe\"] !== null && this.state.fieldValue[\"ExaminationPrRe\"] !== undefined) {\r\n  //             if (this.state.fieldValue[\"Examination4\"] !== null && this.state.fieldValue[\"Examination4\"] !== undefined) {\r\n  //               if (this.state.fieldValue[\"PensionStatus\"] !== null && this.state.fieldValue[\"PensionStatus\"] !== undefined) {\r\n  //                 if (\r\n  //                   (this.state.fieldValue[\"goal1\"] !== false && this.state.fieldValue[\"goal1\"] !== undefined && this.state.fieldValue[\"goal1\"] !== \"False\") ||\r\n  //                   (this.state.fieldValue[\"goal2\"] !== false && this.state.fieldValue[\"goal2\"] !== undefined && this.state.fieldValue[\"goal2\"] !== \"False\") ||\r\n  //                   (this.state.fieldValue[\"goal3\"] !== false && this.state.fieldValue[\"goal3\"] !== undefined && this.state.fieldValue[\"goal3\"] !== \"False\") ||\r\n  //                   (this.state.fieldValue[\"goal4\"] !== null && this.state.fieldValue[\"goal4\"] !== undefined && this.state.fieldValue[\"goal4\"] !== \"False\") ||\r\n  //                   (this.state.fieldValue[\"goal5\"] !== false && this.state.fieldValue[\"goal5\"] !== undefined && this.state.fieldValue[\"goal5\"] !== \"False\") ||\r\n  //                   (this.state.fieldValue[\"goal6\"] !== false && this.state.fieldValue[\"goal6\"] !== undefined && this.state.fieldValue[\"goal6\"] !== \"False\") ||\r\n  //                   (this.state.fieldValue[\"goalAnother\"] !== \"\" && this.state.fieldValue[\"goalAnother\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"PlaceOfWork\"] !== \"\" && this.state.fieldValue[\"PlaceOfWork\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"Wage\"] !== 0 && this.state.fieldValue[\"Wage\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"PensionAmount\"] !== 0 && this.state.fieldValue[\"PensionAmount\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"Profession\"] !== \"\" && this.state.fieldValue[\"Profession\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined)\r\n  //                 ) {\r\n  //                   if (this.state.taskType === \"showChildDetailedForm\") {\r\n  //                     if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\r\n  //                       if (this.state.fieldValue[\"ExamOfDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamOfDate\"] !== undefined) {\r\n  //                         this.checkForRegNoAct(commandJson, length)\r\n  //                         // this.sendFieldValues(commandJson)\r\n  //                       } else this.props.callErrorToast(\"Заполните поле \\\"Дата проведения экспертизы\\\"\")\r\n  //                     } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\r\n  //                   } else this.checkForRegNoAct(commandJson, length) // this.sendFieldValues(commandJson)\r\n  //                 } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Цель освидетельствования\\\"\")\r\n  //               } else this.props.callErrorToast(\"Заполните поле \\\"Получает пенсию\\\"\")\r\n  //             } else this.props.callErrorToast(\"Заполните поле \\\"Место освидетельствования\\\"\")\r\n  //           } else this.props.callErrorToast(\"Заполните поле \\\"Освидетельствование\\\"\")\r\n  //         } else this.props.callErrorToast(\"Заполните поле \\\"Образование\\\"\")\r\n  //       } else this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\")\r\n  //     } else this.props.callErrorToast(\"Заполните поле \\\"Страна\\\"\")\r\n  //     // }else this.swAlert(\"Заполните поле \\\"№ акта по МСЭ\\\"\")\r\n  //   }\r\n  //   else {\r\n  //     this.sendFieldValues(commandJson)\r\n  //     this.clearTabData(this.state.process_id)\r\n  //   }\r\n  // }\r\n  checkForRequieredFields() {\r\n    let checkedSuccessfuly = null\r\n    let f = this.state.Form\r\n    let fv = this.state.fieldValue\r\n    let tt = this.state.taskType\r\n    if (tt === \"showRegForm\" || tt === \"showDetailedForm\" || tt === \"showChildRegForm\" || tt === \"showChildDetailedForm\") {\r\n      // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\r\n      if (fv[\"Region\"] !== null && fv[\"Region\"] !== undefined) {\r\n        checkedSuccessfuly = true\r\n      }\r\n      else {\r\n        this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\")\r\n        return false\r\n      }\r\n    }\r\n    for (let s = 0; s < f.sections.length; s++) {\r\n      if (f.sections[s].required === true) {\r\n        for (let c = 0; c < f.sections[s].contents.length; c++) {\r\n          let fieldName = f.sections[s].contents[c].name\r\n          // console.log(\"CH1\", fieldName, f.sections[s].contents[c].required)\r\n          if (fv[fieldName] === undefined || fv[fieldName] === null || fv[fieldName] === \"NaN.NaN.NaN\" ||\r\n            fv[fieldName] === \"\" || fv[fieldName] === \"01.01.1970\") {\r\n            checkedSuccessfuly = false\r\n          }\r\n          else {\r\n            checkedSuccessfuly = true\r\n            break\r\n            // return checkedSuccessfuly\r\n          }\r\n        }\r\n        if (checkedSuccessfuly === false) {\r\n          this.props.callErrorToast(\"Заполните одно из полей секции \\\"\" + f.sections[s].label + \"\\\"\", \"warning\")\r\n        }\r\n      }\r\n      else {\r\n        for (let c = 0; c < f.sections[s].contents.length; c++) {\r\n          let fieldName = f.sections[s].contents[c].name\r\n          // console.log(\"CH2\", fieldName, f.sections[s].contents[c].name)\r\n          if (f.sections[s].contents[c].required === true) {\r\n            if (fv[fieldName] === undefined || fv[fieldName] === null || fv[fieldName] === \"NaN.NaN.NaN\" || fv[fieldName] === \"\" ||\r\n              fv[fieldName] === \"\" || fv[fieldName] === \"01.01.1970\") {\r\n              checkedSuccessfuly = false\r\n              this.props.callErrorToast(\"Внимание заполните поле \\\"\" + f.sections[s].contents[c].label + \"\\\"\", \"warning\")\r\n              // break\r\n              return false\r\n            }\r\n            else {\r\n              checkedSuccessfuly = true\r\n            }\r\n          }\r\n          else {\r\n            checkedSuccessfuly = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return checkedSuccessfuly\r\n  }\r\n  // Collect id of all documents that are in the local state\r\n  getDocsIdToSign() {\r\n    var docsId = []\r\n    docsId.push(this.state.selectedDoc.id)\r\n    if (this.state.docListIPR !== null) {\r\n      for (var i = 0; i < this.state.docListIPR.length; i++) {\r\n        docsId.push(this.state.docListIPR[i].id)\r\n      }\r\n    }\r\n    return docsId\r\n  }\r\n  // Return person full age\r\n  getPersonAge() {\r\n    for (let i = 0; i < this.state.person.attributes.length; i++) {\r\n      if (this.state.person.attributes[i].name === \"Date_of_Birth\") {\r\n        let birthday = new Date(this.parseDate(this.state.person.attributes[i].value))\r\n        let ageDifMs = Date.now() - birthday.getTime()\r\n        let ageDate = new Date(ageDifMs); // miliseconds from epoch\r\n        let fullAge = Math.abs(ageDate.getUTCFullYear() - 1970)\r\n        console.log(\"AGE\", fullAge)\r\n        return fullAge\r\n      }\r\n    }\r\n  }\r\n  // Return label of select by it's id from fieldValue\r\n  getEnumValueTextByValue(value) {\r\n    for (let i = 0; i < this.state.enumData.length; i++) {\r\n      for (let l = 0; l < this.state.enumData[i].data.length; l++) {\r\n        if (this.state.enumData[i].data[l].Id === value) {\r\n          return this.state.enumData[i].data[l].Text\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Set new organization ID to all document in local state, prepare them to transfer to another Mse\r\n  setOrgIdToMedakt() {\r\n    let fstate = this.state\r\n    var newDocList = []\r\n    // console.log(\"DOCLIST CUR\" , fstate.docList)\r\n    for (let i = 0; i < fstate.docList.length; i++) {\r\n      newDocList.push({ id: fstate.docList[i].id, attributes: [] })\r\n      for (let l = 0; l < fstate.docList[i].attributes.length; l++) {\r\n        if (fstate.docList[i].attributes[l].name === \"MseName\") {\r\n          let newItem = {\r\n            name: fstate.docList[i].attributes[l].name,\r\n            type: fstate.docList[i].attributes[l].type,\r\n            value: fstate.fieldValue[\"MseName\"],\r\n            enumValueText: this.getEnumValueTextByValue(this.state.fieldValue[\"MseName\"]),\r\n          }\r\n          newDocList[i].attributes.push(newItem)\r\n        }\r\n        else {\r\n          if (fstate.docList[i].attributes[l].name !== \"State\" && fstate.docList[i].attributes[l].value !== null) {\r\n            let newItem = {\r\n              name: fstate.docList[i].attributes[l].name,\r\n              type: fstate.docList[i].attributes[l].type,\r\n              value: fstate.docList[i].attributes[l].value\r\n            }\r\n            newDocList[i].attributes.push(newItem)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    fstate.docList = newDocList\r\n    var newDocListIPR = []\r\n    for (let i = 0; i < fstate.docListIPR.length; i++) {\r\n      newDocListIPR.push({ id: fstate.docListIPR[i].id, attributes: [] })\r\n      for (let l = 0; l < fstate.docListIPR[i].attributes.length; l++) {\r\n        if (fstate.docListIPR[i].attributes[l].name !== \"State\" && fstate.docListIPR[i].attributes[l].value !== null) {\r\n          var newItem = {\r\n            value: fstate.docListIPR[i].attributes[l].value,\r\n            name: fstate.docListIPR[i].attributes[l].name,\r\n            type: fstate.docListIPR[i].attributes[l].type,\r\n          }\r\n          newDocListIPR[i].attributes.push(newItem)\r\n        }\r\n      }\r\n    }\r\n    fstate.docListIPR = newDocListIPR\r\n    this.setState(fstate)\r\n    // console.log(\"DOCLIST\", JSON.stringify(this.state.docList))\r\n    // console.log(\"DOCLISTIPR\", JSON.stringify(this.state.docListIPR))\r\n  }\r\n  // Main button click handler\r\n  async buttonClick(name) {\r\n    console.log(\"Butt\", name)\r\n    if (name === \"createDocument\") {\r\n      let createDocument = { attributes: this.getFieldValues() }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"createDocument\" },\r\n          doc: { value: JSON.stringify(createDocument) },\r\n          docDefId: { value: this.state.Form.docDefId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole }\r\n        }\r\n      }\r\n      console.log(\"button createDocument: \", commandJson)\r\n      let checkResult = this.checkForRequieredFields()\r\n      if (checkResult === true) {\r\n        this.sendFieldValues(commandJson)\r\n        this.clearTabData(this.state.process_id)\r\n      }\r\n      // this.checkForEmptyFields(commandJson, 0)\r\n    }\r\n    else if (name === \"updateDocument\") {\r\n      let updateDocument = { attributes: this.getFieldValues() }\r\n      let filterIPR = {\r\n        attributes: [\r\n          {\r\n            name: \"AdultsMedicalCart\",\r\n            value: this.state.docId,\r\n            type: \"Doc\"\r\n          }\r\n        ]\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"updateDocument\" },\r\n          doc: { value: JSON.stringify(updateDocument) },\r\n          filterIPR: { value: JSON.stringify(filterIPR) },\r\n          docDefId: { value: this.state.Form.docDefId },\r\n          docId: { value: this.state.docId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole }\r\n        }\r\n      }\r\n      console.log(\"button updateDocument: \", commandJson)\r\n      let checkResult = this.checkForRequieredFields()\r\n      if (checkResult === true) {\r\n        console.log(\"FV\", this.state.fieldValue)\r\n        this.sendFieldValues(commandJson)\r\n        this.clearTabData(this.state.process_id)\r\n      }\r\n      // this.checkForEmptyFields(commandJson, 1)\r\n      // this.sendFieldValues(commandJson)\r\n    }\r\n    else if (name === \"findDocument\") {\r\n      let filterDocument = { attributes: this.getFieldValuesToSearch() }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        docDefId: this.state.Form.docDefId,\r\n        variables: {\r\n          userAction: { value: \"findDocument\" },\r\n          doc: { value: JSON.stringify(filterDocument) },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole },\r\n          size: { value: this.state.size },\r\n          page: { value: 1 }\r\n        }\r\n      }\r\n      console.log(\"button findDocument: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"findIPR\") {\r\n      let filterDocument = {\r\n        attributes: [\r\n          {\r\n            name: \"AdultsMedicalCart\",\r\n            type: \"Doc\",\r\n            docDef: this.state.Form.medicalCardDocDefId,\r\n            subDocument: { attributes: this.getFieldValuesToSearch() }\r\n          }\r\n        ]\r\n\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        docDefId: this.state.Form.docDefId,\r\n        variables: {\r\n          userAction: { value: \"findDocument\" },\r\n          doc: { value: JSON.stringify(filterDocument) },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole },\r\n          size: { value: this.state.size },\r\n          page: { value: this.state.page }\r\n        }\r\n      }\r\n      console.log(\"button findIPR: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"editDocument\") {\r\n      let editDocument = { attributes: this.getFieldValues() }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"editDocument\" },\r\n          doc: { value: JSON.stringify(editDocument) },\r\n          docId: { value: this.state.docId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole }\r\n        }\r\n      }\r\n      console.log(\"button editDocument: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"reexamination\") {\r\n      let updateDocument = { attributes: this.getFieldValues() }\r\n      let age = this.getPersonAge()\r\n      let Adult = (age >= 18) ? \"True\" : \"False\"\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"reexamination\" },\r\n          doc: { value: JSON.stringify(updateDocument) },\r\n          docId: { value: this.state.docId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole },\r\n          adult: { value: Adult }\r\n        }\r\n      }\r\n      console.log(\"button reexamination: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"medakt\") {\r\n      // let updateDocument = {attributes: this.getFieldValues()}\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"medakt\" },\r\n          docId: { value: this.state.docId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole }\r\n        }\r\n      }\r\n      console.log(\"button Medakt: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"ipr\") {\r\n      // if (this.state.docListIPR !== null && this.state.docListIPR !== \"null\") {\r\n      //   if (this.state.docListIPR.length > 0) {\r\n      //     this.props.callErrorToast(\"Данный Медакт уже имеет ИПР\")\r\n      //   }\r\n      // }\r\n      if (this.state.docListIPR === null || this.state.docListIPR === \"null\" || this.state.docListIPR.length === 0) {\r\n        let commandJson =\r\n        {\r\n          commandType: \"completeTask\",\r\n          session_id: this.state.session_id,\r\n          process_id: this.state.process_id,\r\n          taskID: this.state.taskID,\r\n          variables: {\r\n            userAction: { value: \"ipr\" },\r\n            docId: { value: this.state.docId },\r\n            userId: { value: this.state.userId },\r\n            userRole: { value: this.state.userRole }\r\n          }\r\n        }\r\n        console.log(\"button IPR: \", commandJson)\r\n        this.sendFieldValues(commandJson)\r\n        this.clearTabData(this.state.process_id)\r\n      }\r\n      else {\r\n        this.props.callErrorToast(\"Данный Медакт уже имеет ИПР!\")\r\n      }\r\n\r\n    }\r\n    else if (name === \"deleteDocument\") {\r\n      swal({\r\n        text: \"Вы точно хотите удалить этот документ?\",\r\n        icon: \"warning\",\r\n        buttons: { yes: \"Да\", no: \"Нет\" },\r\n        dangerMode: true,\r\n      })\r\n        .then((click) => {\r\n          if (click === \"yes\") {\r\n            let commandJson =\r\n            {\r\n              commandType: \"completeTask\",\r\n              session_id: this.state.session_id,\r\n              process_id: this.state.process_id,\r\n              taskID: this.state.taskID,\r\n              variables: {\r\n                userAction: { value: \"deleteDocument\" },\r\n                docId: { value: this.state.docId },\r\n                userId: { value: this.state.userId },\r\n                userRole: { value: this.state.userRole }\r\n              }\r\n            }\r\n            console.log(\"button deleteDocument: \", commandJson)\r\n            this.sendFieldValues(commandJson)\r\n            this.clearTabData(this.state.process_id)\r\n          }\r\n        })\r\n    }\r\n    else if (name === \"signDocument\") {\r\n      let docsToSign = {\r\n        docIdList: this.getDocsIdToSign(),\r\n        stateTypeId: \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\"\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"signDocument\" },\r\n          doc: { value: JSON.stringify(docsToSign) }\r\n          // doc: {\r\n          //   value: {\r\n          //     docIdList: this.getDocsIdToSign(),\r\n          //     stateTypeId: \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\"\r\n          //   }\r\n          // }\r\n        }\r\n      }\r\n      console.log(\"button signDocument: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"registerDocument\") {\r\n      let docsToRegister = {\r\n        docIdList: this.getDocsIdToSign(),\r\n        stateTypeId: \"C1414D0C-417A-45AB-8B57-01D30A567F08\"\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"registerDocument\" },\r\n          doc: { value: JSON.stringify(docsToRegister) }\r\n        }\r\n      }\r\n      console.log(\"button registerDocument: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"showStatusSelectingForm\") {\r\n\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"showStatusSelectingForm\" },\r\n          doc: {\r\n            value: JSON.stringify({\r\n              docIdList: this.getDocsIdToSign(),\r\n              stateTypeId: \"\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n      console.log(\"button showStatusSelectingForm: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n\r\n    }\r\n    else if (name === \"setNewState\") {\r\n      let checkResult = this.checkForRequieredFields()\r\n      if (checkResult === true) {\r\n        let states = {\r\n          \"29a5cf05-30de-45b9-8526-69de5ea8ab12\": \"a9e360f0-eed1-4ff6-9ab8-e4255c62ce4a\", // умер\r\n          \"6a0f2699-eb53-4175-ac07-71deb84ae641\": \"10a96e4b-df5d-4f55-9d81-83f9e3e51de5\", // приостановлена инвалидность\r\n          \"3d2dd30f-3ab0-439f-a8dd-149431af67be\": \"d203372c-236b-4b3e-953a-11f09a4aca61\", // истекший срок инвалидности\r\n          \"b042e77b-9a12-47f1-a6d2-cc85e9029e61\": \"c9cfe461-e822-4f97-b34d-9312f8917fa9\", // переехал за переделами рт\r\n          \"c5f3563c-688f-44f1-9c01-70d190ae9edb\": \"1fa96e5b-908f-4c57-bc4a-b61423951081\", // перешел на возрастную пенсию\r\n          \"d5e1a3aa-dfb3-4c49-8360-c1278e70429f\": \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\", // вернуть в подписанные\r\n          \"83ade8bc-a070-4974-bea0-fe30e50422af\": \"C1414D0C-417A-45AB-8B57-01D30A567F08\"  // зарегистрирован\r\n        }\r\n        // console.log(\"ST\", this.state.fieldValue[\"StatesName\"]);\r\n        if (this.state.Form.docDefId === \"5FDE415F-DB00-43B4-BA6E-FE439CFF6DA0\" && this.state.fieldValue[\"StatusName\"] === \"1fa96e5b-908f-4c57-bc4a-b61423951081\") {\r\n          this.props.callErrorToast(\"Не допустимое значение для детского документа\")\r\n        }\r\n        else {\r\n          let stateBody = {\r\n            \"statusDate\": this.parseDate(this.state.fieldValue.statusDate),//moment(new Date()).format(\"YYYY-MM-DD\"),\r\n            \"docId\": this.state.docId,\r\n            \"stateTypeId\": states[this.state.fieldValue[\"StatusName\"]]\r\n          }\r\n          let commandJson =\r\n          {\r\n            commandType: \"completeTask\",\r\n            process_id: this.state.process_id,\r\n            session_id: this.state.session_id,\r\n            taskID: this.state.taskID,\r\n            variables: {\r\n              userAction: { value: \"setNewState\" },\r\n              // newState: { value: states[this.state.fieldValue[\"StatusName\"]] }\r\n              stateBody: { value: JSON.stringify(stateBody) }\r\n            }\r\n          }\r\n          console.log(\"button setNewState: \", commandJson)\r\n          this.sendFieldValues(commandJson)\r\n          this.clearTabData(this.state.process_id)\r\n        }\r\n      }\r\n    }\r\n    // else if (name === \"setNewStateChild\") {\r\n    //   let states = {\r\n    //     \"adcb9640-51d0-4952-b196-27e87bb28d31\": \"10a96e4b-df5d-4f55-9d81-83f9e3e51de5\", // приостановлена инвалидность \r\n    //     \"a61fcb5d-e858-4183-b1cd-1fef00c6b4bc\": \"d203372c-236b-4b3e-953a-11f09a4aca61\", // истекший срок инвалидности\r\n    //     \"184e3fac-a6b6-4c60-89a8-517862ecd9c4\": \"c9cfe461-e822-4f97-b34d-9312f8917fa9\", // переехал за переделами рт          \r\n    //     \"05be1899-8d41-4dfd-ae72-41cba4aa9223\": \"a9e360f0-eed1-4ff6-9ab8-e4255c62ce4a\", // умер\r\n    //   }\r\n    //   // console.log(\"ST\", this.state.fieldValue[\"StatesName\"]);\r\n    //   let commandJson =\r\n    //   {\r\n    //     commandType: \"completeTask\",\r\n    //     process_id: this.state.process_id,\r\n    //     session_id: this.state.session_id,\r\n    //     taskID: this.state.taskID,\r\n    //     variables: {\r\n    //       userAction: { value: \"setNewStateChild\" },\r\n    //       newState: { value: states[this.state.fieldValue[\"StatesName\"]] }\r\n    //     }\r\n    //   }\r\n    //   console.log(\"button setNewStateChild: \", commandJson)\r\n    //   this.sendFieldValues(commandJson)\r\n    //   this.clearTabData(this.state.process_id)\r\n    // }\r\n    else if (name === \"setStateDied\") {\r\n      let docsToSetState = {\r\n        docIdList: this.getDocsIdToSign(),\r\n        stateTypeId: \"A9E360F0-EED1-4FF6-9AB8-E4255C62CE4A\"\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"setStateDied\" },\r\n          doc: { value: JSON.stringify(docsToSetState) }\r\n          // doc: {\r\n          //   value: {\r\n          //     docIdList: this.getDocsIdToSign(),\r\n          //     stateTypeId: \"A9E360F0-EED1-4FF6-9AB8-E4255C62CE4A\"\r\n          //   }\r\n          // }\r\n        }\r\n      }\r\n      console.log(\"button setStateDied: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"backToMedakt\") {\r\n      let Document = {\r\n        attributes: [\r\n          {\r\n            name: \"AdultsMedicalCart\",\r\n            value: this.state.fieldValue[\"AdultsMedicalCart\"],\r\n            type: \"Doc\"\r\n          }]\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"backToMedakt\" },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole },\r\n          docDefId: { value: this.state.Form.docDefId },\r\n          doc: { value: JSON.stringify(Document) },\r\n          docId: { value: this.state.fieldValue[\"AdultsMedicalCart\"] },\r\n          size: { value: 10 },\r\n          page: { value: 1 }\r\n        }\r\n      }\r\n      console.log(\"button backToMedakt: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"transferDocuments\") {\r\n      if (Object.keys(this.state.docList).length !== 0) {\r\n        var age = this.getPersonAge()\r\n        console.log(\"AGE\", age)\r\n        if (age >= 18) {\r\n          var docDefId = this.state.Form.adultsMedaktDocDefId\r\n        }\r\n        else if (age < 18) {\r\n          var docDefId = this.state.Form.childMedaktDocDefId\r\n        }\r\n        this.setOrgIdToMedakt()\r\n\r\n        let commandJson =\r\n        {\r\n          commandType: \"transferDocuments\",\r\n          session_id: this.state.session_id,\r\n          process_id: this.state.process_id,\r\n          taskID: this.state.taskID,\r\n          medaktDocDefId: docDefId,\r\n          IPRDocDefId: this.state.IPRGridForm.docDefId,\r\n          medakts: JSON.stringify(this.state.docList),\r\n          IPR: JSON.stringify(this.state.docListIPR),\r\n          userId: this.state.userId,\r\n          userRole: this.state.userRole\r\n        }\r\n        if (this.state.fieldValue[\"MseName\"] !== null && this.state.fieldValue[\"MseName\"] !== undefined) {\r\n          console.log(\"button transfeDocuments: \", commandJson)\r\n          this.sendFieldValues(commandJson)\r\n          this.clearTabData(this.state.process_id)\r\n        }\r\n        else {\r\n          this.props.callErrorToast(\"Выберите МСЭК для передачи данных\")\r\n        }\r\n      }\r\n      else this.props.callErrorToast(\"Нет данных для передачи\")\r\n    }\r\n    else if (name === \"downloadMemo\") {\r\n      this.downloadDocument(\"downloadPDF\")\r\n    }\r\n    else if (name === \"viewRegForm\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"viewRegForm\" },\r\n          userId: { value: this.state.userId },\r\n          size: { value: 10 },\r\n          page: { value: 1 }\r\n        }\r\n      }\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"acceptComplaint\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"acceptComplaint\" },\r\n        }\r\n      }\r\n      console.log(\"button acceptComplaint: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"rejectComplaint\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"rejectComplaint\" },\r\n        }\r\n      }\r\n      console.log(\"button rejectComplaint: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"downloadMedakt\") {\r\n      let checkResult = this.checkForRequieredFields()\r\n      if (checkResult === true) {\r\n        this.props.callSuccessToast(\"Выгрузка начата дождитесь окончания процедуры!\")\r\n        let url = this.props.ismseApi + \"/api/ExportDataToXlsx/ExportChildByStatus\"\r\n        let age = \"(Детский)\"\r\n        if (this.state.taskType === \"showDownloadAdultsMedaktForm\") {\r\n          url = this.props.ismseApi + \"/api/ExportDataToXlsx/ExportGrownByStatus\"\r\n          age = \"(Взрослый)\"\r\n        }\r\n        let fv = this.state.fieldValue\r\n        let body = {\r\n          \"state\": fv.state,\r\n          \"startDate\": this.parseDate(fv.startDate),\r\n          \"endDate\": this.parseDate(fv.endDate)\r\n        }\r\n        if (fv.msecId !== null && fv.msecId !== undefined) {\r\n          body.msecId = fv.msecId\r\n        }\r\n        if (fv.regionId !== null && fv.regionId !== undefined) {\r\n          body.regionId = parseInt(fv.regionId)\r\n        }\r\n        if (fv.districtId !== null && fv.districtId !== undefined) {\r\n          body.districtId = parseInt(fv.districtId)\r\n        }\r\n\r\n        // console.log(\"BBB\", body)\r\n        await fetch(url, {\r\n          headers: {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          method: \"POST\",\r\n          body: JSON.stringify(body),\r\n          // mode: 'no-cors'\r\n        })\r\n          .then(response => response.blob())\r\n          .then(bl => {\r\n            console.log(\"RES\", bl)\r\n\r\n            var docUrl = window.URL.createObjectURL(bl)\r\n            var a = document.createElement('a')\r\n            a.href = docUrl\r\n            a.download = `Выгрузка Медактов ${age}.xls`\r\n            document.body.appendChild(a)\r\n            a.click()\r\n            a.remove()\r\n          })\r\n          .catch(error => console.log('error', error))\r\n      }\r\n    }\r\n\r\n\r\n    else if (name === \"back\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"back\" },\r\n        }\r\n      }\r\n      console.log(\"button back: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"finish\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"finish\" },\r\n        }\r\n      }\r\n      console.log(\"button finish: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"cancel\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"cancel\" },\r\n        }\r\n      }\r\n      console.log(\"button cancel: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else {\r\n      console.log(\"Unknown button\", name)\r\n    }\r\n  }\r\n  // Handler of amount of rows per page of grid form\r\n  rowsPageChange(size, page) {\r\n    console.log(\"Rows changed: \", size)\r\n    let filterDocument = { attributes: this.getFieldValuesToSearch() }\r\n    let commandJson =\r\n    {\r\n      commandType: \"completeTask\",\r\n      session_id: this.state.session_id,\r\n      process_id: this.state.process_id,\r\n      taskID: this.state.taskID,\r\n      docDefId: this.state.Form.docDefId,\r\n      variables: {\r\n        userAction: { value: \"findDocument\" },\r\n        doc: { value: JSON.stringify(filterDocument) },\r\n        size: { value: size },\r\n        page: { value: page }\r\n      }\r\n    }\r\n    console.log(\"JSON Collected: \", commandJson)\r\n    this.sendFieldValues(commandJson)\r\n    this.clearTabData(this.state.process_id)\r\n  }\r\n  // Returns Button component\r\n  createButton(button, index) {\r\n    if (button.name === \"downloadExcel\" || button.name === \"downloadPDF\") {\r\n      return (\r\n        <Button variant=\"outlined\"\r\n          name={button.name}\r\n          onClick={() => this.downloadDocument(button.name)}\r\n          value={button.name}\r\n          style={{\r\n            margin: 3,\r\n            backgroundColor: button.backgroundColor,\r\n            height: 32,\r\n            fontSize: 12\r\n          }}\r\n        >\r\n          {button.label}\r\n        </Button>\r\n      )\r\n    }\r\n    else if (button.name === \"attachDocument\") {\r\n      return (\r\n        <Button variant=\"outlined\"\r\n          name={button.name}\r\n          onClick={() => this.showScanComponentClick()}\r\n          value={button.name}\r\n          style={{\r\n            margin: 3,\r\n            backgroundColor: button.backgroundColor,\r\n            height: 32,\r\n            fontSize: 12\r\n          }}\r\n        >\r\n          {button.label}\r\n        </Button>\r\n      )\r\n    }\r\n    else return (\r\n      <Button variant=\"outlined\"\r\n        name={button.name}\r\n        onClick={() => this.buttonClick(button.name)}\r\n        style={{\r\n          margin: 3,\r\n          backgroundColor: button.backgroundColor,\r\n          height: 32,\r\n          fontSize: 12\r\n        }}\r\n        value={button.name}\r\n      >\r\n        {button.label}\r\n      </Button>\r\n    )\r\n  }\r\n  getEnumValueText(enumName) {\r\n    for (let i = 0; i < this.state.selectedDoc.attributes.length; i++) {\r\n      if (this.state.selectedDoc.attributes[i].name === enumName) {\r\n        return this.state.selectedDoc.attributes[i].enumValueText\r\n      }\r\n    }\r\n  }\r\n  // Create sections with labels and call bodyBuilder function\r\n  sectionBuilder(section, index) {\r\n    return (\r\n      <Table size=\"small\" key={index + \"table\"}>\r\n        <TableHead>\r\n          <TableRow style={{ height: 30 }}>\r\n            <TableCell\r\n              key={index = \"head\"}\r\n              style={{\r\n                color: \"black\",\r\n                fontSize: 14,\r\n                backgroundColor: \"#D3D3FE\",\r\n                width: \"100%\"\r\n              }}>\r\n              {section.label}\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        {this.bodyBuilder(section)}\r\n      </Table>\r\n    )\r\n  }\r\n  // Create body of each section and call contentBuilder function\r\n  bodyBuilder(section) {\r\n    return (\r\n      <Table size=\"small\">\r\n        <TableBody>\r\n          {section.contents.map((contentItem, index) => (\r\n            contentItem.type === \"TransferList\" ?\r\n              <table size=\"small\" align=\"center\">\r\n                <tr>\r\n                  <th colSpan=\"3\">{contentItem.label}</th>\r\n                </tr>\r\n                {/* <tr>\r\n                  <td width=\"43%\" style={{ padding: \"10px\" }}>поиск <input\r\n                    autoFocus={autofocusFieldTrList === contentItem.name ? true : false}\r\n                    name={contentItem.name}\r\n                    onChange={handleSearchTransferListChange}\r\n                    value={transferListSearchFileds[contentItem.name]}\r\n                  />\r\n                  </td>\r\n                  <td width=\"4%\"></td>\r\n                  <td width=\"43%\" style={{ padding: \"10px\" }}>поиск <input\r\n                    autoFocus={autofocusFieldSelTrList === contentItem.name ? true : false}\r\n                    name={contentItem.name}\r\n                    onChange={handleSearchSelectedTransferListChange}\r\n                    value={selectedTransferListSearchFileds[contentItem.name]}\r\n                  /></td>\r\n                </tr> */}\r\n                <tr>\r\n                  <td width=\"43%\">\r\n                    <Grid item>{this.getTransferList(this.state.transferList[contentItem.enumDef], contentItem.enumDef, contentItem.edit)}</Grid>\r\n                  </td>\r\n                  <td width=\"4%\">\r\n                    <Grid item>\r\n                      <Grid container direction=\"column\">\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          // className={classes.button}\r\n                          // onClick={() => this.handleAllRight(contentItem.name)}\r\n                          // disabled={this.state.transferList[contentItem.name].length === 0 ? true : false}\r\n                        >\r\n                          ≫\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          // className={classes.button}\r\n                          // onClick={() => this.handleCheckedRight(contentItem.name)}\r\n                          // disabled={this.state.leftChecked(contentItem.name).length === 0 ? true : false}\r\n                        >\r\n                          &gt;\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          // className={classes.button}\r\n                          // onClick={() => this.handleCheckedLeft(contentItem.name)}\r\n                          // disabled={this.state.rightChecked(contentItem.name).length === 0 ? true : false}\r\n                        >\r\n                          &lt;\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          // className={classes.button}\r\n                          // onClick={() => this.handleAllLeft(contentItem.name)}\r\n                          // disabled={selectedTransferList[contentItem.name].length === 0 ? true : false}\r\n                        >\r\n                          ≪\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </td>\r\n                  <td width=\"43%\">\r\n                    <Grid item>{this.getTransferList(this.state.selectedTransferList[contentItem.enumDef], contentItem.enumDef, contentItem.edit)}</Grid>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n              :\r\n              <Table size=\"small\">\r\n                <TableRow key={index} style={{ height: 30 }}>\r\n                  {contentItem.name !== \"PersonDetailFormAddress\" && contentItem.name !== \"PersonData\" &&\r\n                    contentItem.label !== \"\" &&\r\n                    <TableCell\r\n                      key={index + \"cell1\"}\r\n                      align=\"left\"\r\n                      style={{ width: \"40%\" }}>\r\n                      {contentItem.label}\r\n                    </TableCell>\r\n                  }\r\n                  <TableCell\r\n                    key={index + \"cell2\"}\r\n                    align=\"left\"\r\n                    style={{ width: \"60%\", height: (this.state.Form.formName === \"TransferMedicalCertificateForm\") ? 100 : 30 }}\r\n                  >{this.contentBuilder(contentItem)}\r\n                  </TableCell>\r\n                </TableRow>\r\n              </Table>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    )\r\n  }\r\n  // Create component by it's type\r\n  contentBuilder(contentItem) {\r\n    if (contentItem.type === \"Text\" || contentItem.type === \"BLOB\") {\r\n      return (\r\n        <TextField\r\n          multiline\r\n          // onChange={this.componentChange}\r\n          // onBlur={this.handleChange}\r\n          // defaultValue={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\r\n          onChange={this.handleChange}\r\n          value={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\r\n          name={contentItem.name}\r\n          style={{ width: \"100%\" }}\r\n          disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n        />\r\n      )\r\n      // }\r\n    }\r\n    else if (contentItem.type === \"Int\") {\r\n      return (\r\n        <TextField\r\n          disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n          style={{ width: \"100%\" }}\r\n          // defaultValue = {(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name]: \"\"}\r\n          value={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\r\n          onChange={this.componentIntChange}\r\n          // onBlur={this.handleChange}\r\n          name={contentItem.name}\r\n          InputProps={{ inputComponent: NumberFormatCustom }}\r\n        />\r\n      )\r\n    }\r\n    else if (contentItem.type === \"DateTime\") {\r\n      return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\r\n          <DatePicker\r\n            clearable\r\n            cancelLabel=\"Отмена\"\r\n            okLabel=\"Ок\"\r\n            clearLabel=\"Очистить\"\r\n            invalidDateMessage=\"неверный формат\"\r\n            name={contentItem.name}\r\n            margin=\"small\"\r\n            format=\"dd.MM.yyyy\"\r\n            disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n            value={(this.state.fieldValue[contentItem.name] !== undefined) ? this.parseDate(this.state.fieldValue[contentItem.name]) : null}\r\n            onChange={date => this.handleDateTimeChange(date, contentItem.name)}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      )\r\n    }\r\n    else if (contentItem.type === \"Enum\") {\r\n      // console.log(\"EN DATA\", this.state.enumData)\r\n      let options = []\r\n      options.push({\r\n        \"value\": null,\r\n        \"label\": null,\r\n        \"name\": contentItem.name\r\n      })\r\n      for (let i = 0; i < this.state.enumData.length; i++) {\r\n        if (contentItem.enumDef === this.state.enumData[i].enumDef) {\r\n          for (let l = 0; l < this.state.enumData[i].data.length; l++) {\r\n            options.push({\r\n              \"value\": this.state.enumData[i].data[l].Id,\r\n              \"label\": this.state.enumData[i].data[l].Text,\r\n              \"name\": contentItem.name\r\n            })\r\n          }\r\n          break\r\n        }\r\n      }\r\n      // console.log(\"OPTOPNS\", options)\r\n      // console.log(\"S OPTOPNS\", this.state.fieldValue[contentItem.name])\r\n      var selectedOption = {}\r\n      if (this.state.fieldValue[contentItem.name] !== undefined) {\r\n        for (let i = 0; i < options.length; i++) {\r\n          if (options[i].value === this.state.fieldValue[contentItem.name]) {\r\n            selectedOption = {\r\n              \"value\": options[i].value,\r\n              \"name\": options[i].name,\r\n              \"label\": options[i].label\r\n            }\r\n            break\r\n          }\r\n          else selectedOption = {\r\n            \"value\": null,\r\n            \"label\": null,\r\n            \"name\": contentItem.name\r\n          }\r\n        }\r\n      }\r\n      return (\r\n        <Select\r\n          name={contentItem.name}\r\n          value={selectedOption}\r\n          onChange={this.handleSelectChange}\r\n          style={{ height: 30, width: \"100%\" }}\r\n          options={options}\r\n          isDisabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n        />\r\n      )\r\n    }\r\n    else if (contentItem.type === \"Currency\" || contentItem.type === \"Float\") {\r\n      return (\r\n        <TextField\r\n          value={this.state.fieldValue[contentItem.name] ? this.state.fieldValue[contentItem.name] : \"\"}\r\n          // onChange = {this.componentChange}\r\n          onBlur={this.handleChange}\r\n          name={contentItem.name}\r\n          style={{ width: \"100%\" }}\r\n          disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n          InputProps={{ inputComponent: NumberFormatCustom }}\r\n        />\r\n      )\r\n    }\r\n    else if (contentItem.type === \"Bool\") {\r\n      return (\r\n        <Checkbox\r\n          // key={this.getUUID()}\r\n          style={{ maxWidth: 20, height: 15, color: (this.state.formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\" }}\r\n          name={contentItem.name}\r\n          onChange={this.handCheckboxChange}\r\n          disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n          checked={(this.state.fieldValue[contentItem.name] === \"True\" || this.state.fieldValue[contentItem.name] === true) ? true : false}\r\n        />\r\n      )\r\n    }\r\n    else if (contentItem.type === \"PersonData\") {\r\n      return (\r\n        <Person\r\n          userId={this.state.userId}\r\n          userRole={this.state.userRole}\r\n          process_id={this.state.process_id}\r\n          session_id={this.state.session_id}\r\n          selectedDoc={this.state.person}\r\n          documentViewForm={this.state.documentViewForm}\r\n          taskID={this.state.taskID}\r\n          subDocument={true}\r\n          changeSubDocument={this.changeSubDocument}\r\n          formType={this.state.personFormType}\r\n          enumData={this.state.personEnumData}\r\n          // formType = {this.state.formName === \"AdultsIPRForm\" ? \"view\" : \"edit\"}\r\n          docList={null}\r\n        >\r\n        </Person>\r\n      )\r\n    }\r\n    else if (contentItem.type === \"Address\") {\r\n      return (\r\n        <Address\r\n          SOAT={this.state.SOAT}\r\n          // countryChange = {this.countryChange}\r\n          regionChange={this.regionChange}\r\n          districtChange={this.districtChange}\r\n          subDistrictChange={this.subDistrictChange}\r\n          villageChange={this.villageChange}\r\n          handleChange={this.handleChange}\r\n          Country={this.state.fieldValue.Country}\r\n          Region={this.state.fieldValue.Region}\r\n          District={this.state.fieldValue.District}\r\n          subDistrict={this.state.fieldValue.subDistrict}\r\n          Village={this.state.fieldValue.Village}\r\n          ResidentialAddress={this.state.fieldValue.ResidentialAddress}\r\n          Phone={this.state.fieldValue.Phone}\r\n          formType={this.state.formType}\r\n          edit={contentItem.edit}\r\n          formName={this.state.Form.formName}\r\n        />\r\n      )\r\n    }\r\n  }\r\n  // custom allerts\r\n  swAlert(text) {\r\n    return (\r\n      swal({\r\n        text: text,\r\n        icon: \"warning\",\r\n        buttons: { ok: \"Ок\" },\r\n        // dangerMode: true,\r\n      })\r\n        .then((click) => {\r\n          if (click === \"ok\") {\r\n            console.log(\"CLICK OK\", click)\r\n          }\r\n        })\r\n    )\r\n  }\r\n  // Transfer List functions\r\n  handleToggle = (value, name) => () => {\r\n    const currentIndex = this.state.checked[name].indexOf(value)\r\n    const newChecked = [...this.state.checked[name]]\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value)\r\n    }\r\n    else {\r\n      newChecked.splice(currentIndex, 1)\r\n    }\r\n    this.setState({ ...this.state.checked, [name]: newChecked })\r\n    // setChecked({ ...checked, [name]: newChecked })\r\n  }\r\n  // handleAllRight = (name) => {\r\n  //   setSelectedTransferList({ ...selectedTransferList, [name]: selectedTransferList[name].concat(transferList[name]) })\r\n  //   setTransferList({ ...transferList, [name]: [] })\r\n  // }\r\n  // handleCheckedRight(name) {\r\n  //   // console.log(\"CHECKED RIGHT\", name)\r\n  //   setSelectedTransferList({ ...selectedTransferList, [name]: selectedTransferList[name].concat(leftChecked(name)) })\r\n  //   setTransferList({ ...transferList, [name]: not(transferList[name], leftChecked(name)) })\r\n  //   setChecked({ ...checked, [name]: not(checked[name], leftChecked(name)) })\r\n  // }\r\n  // handleCheckedLeft(name) {\r\n  //   setTransferList({ ...transferList, [name]: transferList[name].concat(rightChecked(name)) })\r\n  //   setSelectedTransferList({ ...selectedTransferList, [name]: not(selectedTransferList[name], rightChecked(name)) })\r\n  //   setChecked({ ...checked, [name]: not(checked[name], rightChecked(name)) })\r\n  // }\r\n  // handleAllLeft = (name) => {\r\n  //   setTransferList({ ...transferList, [name]: transferList[name].concat(selectedTransferList[name]) })\r\n  //   setSelectedTransferList({ ...selectedTransferList, [name]: [] })\r\n  // }\r\n  getTransferList(items, enumDef, edit) {\r\n    console.log(\"G TR L\", items, enumDef)\r\n    return (\r\n      <Paper style={{width: \"100%\", height: 200, overflow: 'auto',}}>\r\n        <List dense component=\"div\" role=\"list\">\r\n          {items.map((value) => {\r\n            const labelId = `transfer-list-item-${value}-label`;\r\n            return (\r\n              <ListItem\r\n                size=\"small\"\r\n                key={value}\r\n                role=\"listitem\"\r\n                button \r\n                // onClick={this.handleToggle(value, name)}\r\n                style={{ height: 40 }} \r\n              >\r\n                <Checkbox\r\n                  size=\"small\"\r\n                  checked={this.state.checked[enumDef].indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                  style={{ height: 40 }}\r\n                />\r\n                <ListItemText id={labelId} primary={value} />\r\n                {/* <ListItemText id={labelId} primary={getTranserListItemLabel(name, value)} /> */}\r\n              </ListItem>\r\n            )\r\n          })}\r\n          <ListItem />\r\n        </List>\r\n      </Paper>\r\n    )\r\n  }\r\n  // getTranserListItemLabel(name, value) {\r\n  //   // console.log(\"G TRL LABEL\", name, value)\r\n  //   for (let e = 0; e < enumData.length; e++) {\r\n  //     if (enumData[e].name === name) {\r\n  //       for (let d = 0; d < enumData[e].data.length; d++) {\r\n  //         if (enumData[e].data[d].id === value) {\r\n  //           return enumData[e].data[d].label\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n  render() {\r\n    try {\r\n      // if (!this.state.Form) return <div>No Form</div>\r\n      // if (this.state.buttons === undefined) return <div>No Buttons</div>\r\n      // console.log(\"ViewForm State\", this.state)\r\n      // console.log(\"ViewForm Props\", this.props)\r\n      return (\r\n        <Grid>\r\n          {this.state.Form !== null &&\r\n            <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\r\n              <Grid item xs={10}>\r\n                <Paper>\r\n                  <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                    <TableHead>\r\n                      <TableRow style={{ maxHeight: 25 }}>\r\n                        <TableCell style={{ fontSize: 16, color: \"black\" }}>{this.state.Form.label}</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                  </Grid>\r\n                  <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                    {this.state.Form.sections.map((section, index) => {\r\n                      return this.sectionBuilder(section, index)\r\n                    })}\r\n                  </Grid>\r\n                  <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n                    {this.state.buttons.map((button, index) => {\r\n                      return this.createButton(button, index)\r\n                    })}\r\n                  </Grid>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          }\r\n          <br></br>\r\n\r\n          {this.state.docList !== null && this.state.docList !== \"null\" &&\r\n            this.state.docList !== undefined ?\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n              <GridForm key=\"grid form\"\r\n                process_id={this.state.process_id}\r\n                session_id={this.state.session_id}\r\n                taskID={this.state.taskID}\r\n                userId={this.state.userId}\r\n                organizationId={this.state.organizationId}\r\n                userRole={this.state.userRole}\r\n                docList={this.state.docList}\r\n                size={this.state.size}\r\n                page={this.state.page}\r\n                Form={this.state.gridForm}\r\n                gridFormButtons={this.state.gridFormButtons}\r\n                rowsPageChange={this.rowsPageChange}\r\n                sendFieldValues={this.sendFieldValues}\r\n                SOAT={this.state.SOAT}\r\n                handleCloseCurrentTab={this.handleCloseCurrentTab}\r\n                clearTabData={this.clearTabData}\r\n                callSuccessToast={this.props.callSuccessToast}\r\n                callErrorToast={this.props.callErrorToast}\r\n              >\r\n              </GridForm>\r\n            </Grid>\r\n            :\r\n            <br></br>\r\n          }\r\n          {this.state.docListIPR !== null && this.state.docListIPR !== \"null\" &&\r\n            this.state.docListIPR !== undefined ?\r\n            <GridForm\r\n              key=\"grid form\"\r\n              process_id={this.state.process_id}\r\n              session_id={this.state.session_id}\r\n              taskID={this.state.taskID}\r\n              userId={this.state.userId}\r\n              organizationId={this.state.organizationId}\r\n              userRole={this.state.userRole}\r\n              docListIPR={this.state.docListIPR}\r\n              size={this.state.size}\r\n              page={this.state.page}\r\n              Form={this.state.IPRGridForm} // {this.state.gridForm.Form}\r\n              medicalCardId={this.state.docId}\r\n              gridFormButtons={this.state.gridFormButtons}\r\n              rowsPageChange={this.rowsPageChange}\r\n              sendFieldValues={this.sendFieldValues}\r\n              SOAT={this.state.SOAT}\r\n              handleCloseCurrentTab={this.handleCloseCurrentTab}\r\n              clearTabData={this.clearTabData}\r\n              callSuccessToast={this.props.callSuccessToast}\r\n              callErrorToast={this.props.callErrorToast}\r\n            >\r\n            </GridForm>\r\n            :\r\n            <br></br>\r\n          }\r\n          <br></br>\r\n          {this.state.download === \"downloadExcel\" &&\r\n            <Download\r\n              downloadType={this.state.download}\r\n              Form={this.state.Form}\r\n              fieldValue={this.state.fieldValue}\r\n              person={this.state.person}\r\n              SOAT={this.state.SOAT}\r\n              selectedDoc={this.state.selectedDoc}\r\n\r\n            />\r\n          }\r\n          {this.state.download === \"downloadPDF\" &&\r\n            <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} id=\"TableToDownload\">\r\n              <Grid item xs={12}>\r\n                <Card>\r\n                  <Download\r\n                    downloadType={this.state.download}\r\n                    Form={this.state.Form}\r\n                    fieldValue={this.state.fieldValue}\r\n                    person={this.state.person}\r\n                    SOAT={this.state.SOAT}\r\n                    selectedDoc={this.state.selectedDoc}\r\n                    enumData={this.state.enumData}\r\n                  />\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          }\r\n        </Grid>\r\n      )\r\n    }\r\n    catch (error) {\r\n      console.log(\"ERROR\", error)\r\n      return <div>error</div>\r\n    }\r\n  }\r\n}\r\nexport default ViewForm"]},"metadata":{},"sourceType":"module"}