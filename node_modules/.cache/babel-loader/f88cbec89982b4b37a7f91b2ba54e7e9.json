{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Serj\\\\Desktop\\\\ismse\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Serj\\\\Desktop\\\\ismse\\\\src\\\\routes\\\\index.js\";\nimport { mount, route, lazy, map, redirect } from 'navi';\nimport React, { Suspense } from 'react';\nimport { Router, View } from 'react-navi';\nimport { useKeycloak } from '../lib';\nimport HomePage from '../pages/Home';\nimport { withAuthentication } from './utils'; // Define your routes\n\nconst routes = mount({\n  '/home': withAuthentication(route({\n    title: 'Home',\n    view: React.createElement(HomePage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })\n  })),\n  '/login': map(async (request, context) => context.isAuthenticated ? redirect(request.params.redirectTo ? decodeURIComponent(request.params.redirectTo) : '/home') : lazy(() => import('../pages/Login'))),\n  '/': redirect('/login')\n});\nexport const AppRouter = () => {\n  const _useKeycloak = useKeycloak(),\n        _useKeycloak2 = _slicedToArray(_useKeycloak, 2),\n        keycloak = _useKeycloak2[0],\n        initialized = _useKeycloak2[1];\n\n  if (!initialized) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  return React.createElement(Router, {\n    routes: routes,\n    context: {\n      isAuthenticated: keycloak.authenticated\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["C:\\Users\\Serj\\Desktop\\ismse\\src\\routes\\index.js"],"names":["mount","route","lazy","map","redirect","React","Suspense","Router","View","useKeycloak","HomePage","withAuthentication","routes","title","view","request","context","isAuthenticated","params","redirectTo","decodeURIComponent","AppRouter","keycloak","initialized","authenticated"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,GAA7B,EAAkCC,QAAlC,QAAkD,MAAlD;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,YAA7B;AAEA,SAASC,WAAT,QAA4B,QAA5B;AAEA,OAAOC,QAAP,MAAqB,eAArB;AAEA,SAASC,kBAAT,QAAmC,SAAnC,C,CAEA;;AACA,MAAMC,MAAM,GAAGZ,KAAK,CAAC;AACnB,WAASW,kBAAkB,CACzBV,KAAK,CAAC;AACJY,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,IAAI,EAAE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF,GAAD,CADoB,CADR;AAOnB,YAAUX,GAAG,CAAC,OAAOY,OAAP,EAAgBC,OAAhB,KACZA,OAAO,CAACC,eAAR,GACIb,QAAQ,CACNW,OAAO,CAACG,MAAR,CAAeC,UAAf,GAA4BC,kBAAkB,CAACL,OAAO,CAACG,MAAR,CAAeC,UAAhB,CAA9C,GAA4E,OADtE,CADZ,GAIIjB,IAAI,CAAC,MAAM,OAAO,gBAAP,CAAP,CALG,CAPM;AAcnB,OAAKE,QAAQ,CAAC,QAAD;AAdM,CAAD,CAApB;AAiBA,OAAO,MAAMiB,SAAS,GAAG,MAAM;AAAA,uBACGZ,WAAW,EADd;AAAA;AAAA,QACtBa,QADsB;AAAA,QACZC,WADY;;AAG7B,MAAI,CAACA,WAAL,EAAkB;AAChB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,SACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEX,MAAhB;AAAwB,IAAA,OAAO,EAAE;AAAEK,MAAAA,eAAe,EAAEK,QAAQ,CAACE;AAA5B,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CAdM","sourcesContent":["import { mount, route, lazy, map, redirect } from 'navi';\nimport React, { Suspense } from 'react';\nimport { Router, View } from 'react-navi';\n\nimport { useKeycloak } from '../lib';\n\nimport HomePage from '../pages/Home';\n\nimport { withAuthentication } from './utils';\n\n// Define your routes\nconst routes = mount({\n  '/home': withAuthentication(\n    route({\n      title: 'Home',\n      view: <HomePage />,\n    }),\n  ),\n  '/login': map(async (request, context) =>\n    context.isAuthenticated\n      ? redirect(\n          request.params.redirectTo ? decodeURIComponent(request.params.redirectTo) : '/home',\n        )\n      : lazy(() => import('../pages/Login')),\n  ),\n  '/': redirect('/login'),\n});\n\nexport const AppRouter = () => {\n  const [keycloak, initialized] = useKeycloak();\n\n  if (!initialized) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Router routes={routes} context={{ isAuthenticated: keycloak.authenticated }}>\n      <Suspense fallback={null}>\n        <View />\n      </Suspense>\n    </Router>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}