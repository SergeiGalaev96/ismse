{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\ismse\\\\src\\\\components\\\\MainComponent\\\\MainComponent.jsx\";\nimport React from \"react\";\nimport ViewForm from \"../../components/ViewForm/ViewForm.jsx\";\nimport Users from \"../Users/Users.jsx\";\nimport Person from \"../../components/Person/Person.jsx\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nclass MainComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mainComponentMessage: null\n    };\n    this.sendFieldValues = this.sendFieldValues.bind(this);\n    this.handleCloseCurrentTab = this.handleCloseCurrentTab.bind(this);\n    this.clearTabData = this.clearTabData.bind(this);\n    this.showScanComponentClick = this.showScanComponentClick.bind(this);\n    this.pushNewBlobs = this.pushNewBlobs.bind(this);\n    this.pushNewImages = this.pushNewImages.bind(this);\n  }\n\n  sendFieldValues(commandJson) {\n    this.props.sendFieldValues(commandJson);\n  }\n\n  handleCloseCurrentTab(process_id) {\n    this.props.handleCloseCurrentTab(process_id);\n  }\n\n  clearTabData(process_id) {\n    this.props.clearTabData(process_id);\n  }\n\n  showScanComponentClick() {\n    this.props.showScanComponentClick();\n  }\n\n  pushNewBlobs(blobs) {\n    this.props.pushNewBlobs(blobs);\n  }\n\n  pushNewImages(images) {\n    this.props.pushNewImages(images);\n  }\n\n  render() {\n    // console.log(\"Main PROP\", this.props)\n    if (!this.props.adminMessage) return React.createElement(LinearProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });else if (this.props.adminMessage.taskType === \"showPersonForm\" || this.props.adminMessage.taskType === \"showPersonFormNRSZ\") {\n      return React.createElement(Person, {\n        userId: this.props.userId,\n        userRole: this.props.userRole,\n        process_id: this.props.adminMessage.process_id,\n        session_id: this.props.adminMessage.session_id,\n        organizationId: this.props.organizationId,\n        enumData: this.props.adminMessage.enumData,\n        selectedDoc: this.props.adminMessage.selectedDoc,\n        documentViewForm: this.props.adminMessage.documentViewForm,\n        buttons: this.props.adminMessage.buttons,\n        gridFormButtons: this.props.adminMessage.gridFormButtons,\n        taskID: this.props.adminMessage.taskID,\n        sendFieldValues: this.sendFieldValues,\n        formType: this.props.adminMessage.formType,\n        docList: this.props.adminMessage.docList,\n        size: this.props.adminMessage.size,\n        page: this.props.adminMessage.page,\n        subDocument: false,\n        taskType: this.props.adminMessage.taskType,\n        SOAT: this.props.adminMessage.SOAT,\n        clearTabData: this.clearTabData,\n        handleCloseCurrentTab: this.handleCloseCurrentTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    } else if (this.props.adminMessage.taskType === \"showRegForm\" || this.props.adminMessage.taskType === \"showChildRegForm\" || this.props.adminMessage.taskType === \"showRegSearchForm\" || this.props.adminMessage.taskType === \"showChildRegSearchForm\" || this.props.adminMessage.taskType === \"showDetailedForm\" || this.props.adminMessage.taskType === \"showChildDetailedForm\" || this.props.adminMessage.taskType === \"showDetailedSearchForm\" || this.props.adminMessage.taskType === \"showChildDetailedSearchForm\" || this.props.adminMessage.taskType === \"showIPRForm\" || this.props.adminMessage.taskType === \"showChildIPRForm\" || this.props.adminMessage.taskType === \"showIPRSearchForm\" || this.props.adminMessage.taskType === \"showChildIPRSearchForm\" || this.props.adminMessage.taskType === \"searchAdultsDetailedForm\" || this.props.adminMessage.taskType === \"searchChildDetailedForm\" || this.props.adminMessage.taskType === \"showMemoForm\" || this.props.adminMessage.taskType === \"showComplaintsForm\" || this.props.adminMessage.taskType === \"showSearchComplaintsForm\" || this.props.adminMessage.taskType === \"showAppealsForm\" || this.props.adminMessage.taskType === \"showSearchAppealsForm\" || this.props.adminMessage.taskType === \"showAdultsStatesSelectingForm\" || this.props.adminMessage.taskType === \"showChildStatesSelectingForm\" || this.props.adminMessage.taskType === \"showDownloadAdultsMedaktStatesSelectingForm\" || this.props.adminMessage.taskType === \"showDownloadChildMedaktStatesSelectingForm\") {\n      // console.log(\"EnumData\", JSON.stringify(this.props.adminMessage.enumData))\n      return React.createElement(ViewForm, {\n        key: this.props.adminMessage.process_id,\n        userId: this.props.userId,\n        userRole: this.props.userRole,\n        organizationId: this.props.organizationId,\n        process_id: this.props.adminMessage.process_id,\n        session_id: this.props.adminMessage.session_id,\n        taskID: this.props.adminMessage.taskID,\n        docId: this.props.adminMessage.docId,\n        enumData: this.props.adminMessage.enumData,\n        Form: this.props.adminMessage.Form,\n        documentViewForm: this.props.adminMessage.documentViewForm,\n        subDocument: false,\n        adultsIPRForm: this.props.adminMessage.adultsIPRForm,\n        selectedDoc: this.props.adminMessage.selectedDoc,\n        SOAT: this.props.adminMessage.SOAT,\n        person: this.props.adminMessage.person,\n        personEnumData: this.props.adminMessage.personEnumData,\n        personFormType: this.props.adminMessage.personFormType,\n        buttons: this.props.adminMessage.buttons,\n        gridForm: this.props.adminMessage.gridForm,\n        IPRGridForm: this.props.adminMessage.IPRGridForm,\n        gridFormButtons: this.props.adminMessage.gridFormButtons,\n        formType: this.props.adminMessage.formType,\n        docList: this.props.adminMessage.docList,\n        docListIPR: this.props.adminMessage.docListIPR,\n        size: this.props.adminMessage.size,\n        page: this.props.adminMessage.page,\n        userAction: this.props.adminMessage.userAction,\n        taskType: this.props.adminMessage.taskType,\n        selectedTab: this.props.selectedTab,\n        showScanComponent: this.props.showScanComponent,\n        showScanComponentClick: this.showScanComponentClick,\n        sendFieldValues: this.sendFieldValues,\n        handleCloseCurrentTab: this.handleCloseCurrentTab,\n        clearTabData: this.clearTabData,\n        pushNewBlobs: this.pushNewBlobs,\n        scannedBlobs: this.props.scannedBlobs,\n        pushNewImages: this.pushNewImages,\n        scannedImages: this.props.scannedImages,\n        callSuccessToast: this.props.callSuccessToast,\n        callErrorToast: this.props.callErrorToast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    } else if (this.props.adminMessage.taskType === \"showSearchUser\" || this.props.adminMessage.taskType === \"showCreateUser\" || this.props.adminMessage.taskType === \"showEditUser\") {\n      return React.createElement(Users, {\n        key: this.props.adminMessage.process_id,\n        userId: this.props.userId,\n        userRole: this.props.userRole,\n        organizationId: this.props.organizationId,\n        process_id: this.props.adminMessage.process_id,\n        session_id: this.props.adminMessage.session_id,\n        taskID: this.props.adminMessage.taskID,\n        docId: this.props.adminMessage.docId,\n        enumData: this.props.adminMessage.enumData,\n        Form: this.props.adminMessage.Form,\n        selectedDoc: this.props.adminMessage.selectedDoc,\n        organizationIdList: this.props.adminMessage.organizationIdList,\n        adultsIPRForm: this.props.adminMessage.adultsIPRForm,\n        buttons: this.props.adminMessage.buttons,\n        gridForm: this.props.adminMessage.gridForm,\n        gridFormButtons: this.props.adminMessage.gridFormButtons,\n        docList: this.props.adminMessage.docList,\n        sendFieldValues: this.sendFieldValues,\n        clearTabData: this.clearTabData,\n        taskType: this.props.adminMessage.taskType,\n        callSuccessToast: this.props.callSuccessToast,\n        callErrorToast: this.props.callErrorToast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      });\n    } else if (this.props.adminMessage.taskType === \"error\") {\n      return React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        spacing: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, this.props.adminMessage.taskType)), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, this.props.adminMessage.process_id)))))));\n    } else {\n      console.log(\"SOMETHING WRONG\", this.props.adminMessage);\n      return React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        spacing: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(LinearProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\n\nexport default MainComponent;","map":{"version":3,"sources":["C:\\Users\\SERGO\\Desktop\\ismse\\src\\components\\MainComponent\\MainComponent.jsx"],"names":["React","ViewForm","Users","Person","Grid","Card","LinearProgress","MainComponent","Component","constructor","props","state","mainComponentMessage","sendFieldValues","bind","handleCloseCurrentTab","clearTabData","showScanComponentClick","pushNewBlobs","pushNewImages","commandJson","process_id","blobs","images","render","adminMessage","taskType","userId","userRole","session_id","organizationId","enumData","selectedDoc","documentViewForm","buttons","gridFormButtons","taskID","formType","docList","size","page","SOAT","docId","Form","adultsIPRForm","person","personEnumData","personFormType","gridForm","IPRGridForm","docListIPR","userAction","selectedTab","showScanComponent","scannedBlobs","scannedImages","callSuccessToast","callErrorToast","organizationIdList","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ViewForm from \"../../components/ViewForm/ViewForm.jsx\";\r\nimport Users from \"../Users/Users.jsx\";\r\nimport Person from \"../../components/Person/Person.jsx\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from '@material-ui/core/Card';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nclass MainComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      mainComponentMessage: null,\r\n    }\r\n    this.sendFieldValues = this.sendFieldValues.bind(this)\r\n    this.handleCloseCurrentTab = this.handleCloseCurrentTab.bind(this)\r\n    this.clearTabData = this.clearTabData.bind(this)\r\n    this.showScanComponentClick = this.showScanComponentClick.bind(this)\r\n    this.pushNewBlobs = this.pushNewBlobs.bind(this)\r\n    this.pushNewImages = this.pushNewImages.bind(this)\r\n  }\r\n  sendFieldValues(commandJson) {\r\n    this.props.sendFieldValues(commandJson)\r\n  }\r\n  handleCloseCurrentTab(process_id) {\r\n    this.props.handleCloseCurrentTab(process_id)\r\n  }\r\n  clearTabData(process_id) {\r\n    this.props.clearTabData(process_id)\r\n  }\r\n  showScanComponentClick() {\r\n    this.props.showScanComponentClick()\r\n  }\r\n  pushNewBlobs(blobs) {\r\n    this.props.pushNewBlobs(blobs)\r\n  }\r\n  pushNewImages(images) {\r\n    this.props.pushNewImages(images)\r\n  }\r\n  render() {\r\n    // console.log(\"Main PROP\", this.props)\r\n    if (!this.props.adminMessage) return <LinearProgress />\r\n    else if (this.props.adminMessage.taskType === \"showPersonForm\" || this.props.adminMessage.taskType === \"showPersonFormNRSZ\") {\r\n      return (\r\n        <Person\r\n          userId={this.props.userId}\r\n          userRole={this.props.userRole}\r\n          process_id={this.props.adminMessage.process_id}\r\n          session_id={this.props.adminMessage.session_id}\r\n          organizationId={this.props.organizationId}\r\n          enumData={this.props.adminMessage.enumData}\r\n          selectedDoc={this.props.adminMessage.selectedDoc}\r\n          documentViewForm={this.props.adminMessage.documentViewForm}\r\n          buttons={this.props.adminMessage.buttons}\r\n          gridFormButtons={this.props.adminMessage.gridFormButtons}\r\n          taskID={this.props.adminMessage.taskID}\r\n          sendFieldValues={this.sendFieldValues}\r\n          formType={this.props.adminMessage.formType}\r\n          docList={this.props.adminMessage.docList}\r\n          size={this.props.adminMessage.size}\r\n          page={this.props.adminMessage.page}\r\n          subDocument={false}\r\n          taskType={this.props.adminMessage.taskType}\r\n          SOAT={this.props.adminMessage.SOAT}\r\n          clearTabData={this.clearTabData}\r\n          handleCloseCurrentTab={this.handleCloseCurrentTab}\r\n        >\r\n        </Person>\r\n      )\r\n    }\r\n\r\n    else if (\r\n      this.props.adminMessage.taskType === \"showRegForm\" ||\r\n      this.props.adminMessage.taskType === \"showChildRegForm\" ||\r\n      this.props.adminMessage.taskType === \"showRegSearchForm\" ||\r\n      this.props.adminMessage.taskType === \"showChildRegSearchForm\" ||\r\n      this.props.adminMessage.taskType === \"showDetailedForm\" ||\r\n      this.props.adminMessage.taskType === \"showChildDetailedForm\" ||\r\n      this.props.adminMessage.taskType === \"showDetailedSearchForm\" ||\r\n      this.props.adminMessage.taskType === \"showChildDetailedSearchForm\" ||\r\n      this.props.adminMessage.taskType === \"showIPRForm\" ||\r\n      this.props.adminMessage.taskType === \"showChildIPRForm\" ||\r\n      this.props.adminMessage.taskType === \"showIPRSearchForm\" ||\r\n      this.props.adminMessage.taskType === \"showChildIPRSearchForm\" ||\r\n      this.props.adminMessage.taskType === \"searchAdultsDetailedForm\" ||\r\n      this.props.adminMessage.taskType === \"searchChildDetailedForm\" ||\r\n      this.props.adminMessage.taskType === \"showMemoForm\" ||\r\n      this.props.adminMessage.taskType === \"showComplaintsForm\" ||\r\n      this.props.adminMessage.taskType === \"showSearchComplaintsForm\" ||\r\n      this.props.adminMessage.taskType === \"showAppealsForm\" ||\r\n      this.props.adminMessage.taskType === \"showSearchAppealsForm\" ||\r\n      this.props.adminMessage.taskType === \"showAdultsStatesSelectingForm\" ||\r\n      this.props.adminMessage.taskType === \"showChildStatesSelectingForm\" ||\r\n      this.props.adminMessage.taskType === \"showDownloadAdultsMedaktStatesSelectingForm\" ||\r\n      this.props.adminMessage.taskType === \"showDownloadChildMedaktStatesSelectingForm\"\r\n    ) {\r\n      // console.log(\"EnumData\", JSON.stringify(this.props.adminMessage.enumData))\r\n      return (\r\n        <ViewForm\r\n          key={this.props.adminMessage.process_id}\r\n          userId={this.props.userId}\r\n          userRole={this.props.userRole}\r\n          organizationId={this.props.organizationId}\r\n          process_id={this.props.adminMessage.process_id}\r\n          session_id={this.props.adminMessage.session_id}\r\n          taskID={this.props.adminMessage.taskID}\r\n          docId={this.props.adminMessage.docId}\r\n          enumData={this.props.adminMessage.enumData}\r\n          Form={this.props.adminMessage.Form}\r\n          documentViewForm={this.props.adminMessage.documentViewForm}\r\n          subDocument={false}\r\n          adultsIPRForm={this.props.adminMessage.adultsIPRForm}\r\n          selectedDoc={this.props.adminMessage.selectedDoc}\r\n          SOAT={this.props.adminMessage.SOAT}\r\n          person={this.props.adminMessage.person}\r\n          personEnumData={this.props.adminMessage.personEnumData}\r\n          personFormType={this.props.adminMessage.personFormType}\r\n          buttons={this.props.adminMessage.buttons}\r\n          gridForm={this.props.adminMessage.gridForm}\r\n          IPRGridForm={this.props.adminMessage.IPRGridForm}\r\n          gridFormButtons={this.props.adminMessage.gridFormButtons}\r\n          formType={this.props.adminMessage.formType}\r\n          docList={this.props.adminMessage.docList}\r\n          docListIPR={this.props.adminMessage.docListIPR}\r\n          size={this.props.adminMessage.size}\r\n          page={this.props.adminMessage.page}\r\n          userAction={this.props.adminMessage.userAction}\r\n          taskType={this.props.adminMessage.taskType}\r\n          selectedTab={this.props.selectedTab}\r\n          showScanComponent={this.props.showScanComponent}\r\n          showScanComponentClick={this.showScanComponentClick}\r\n          sendFieldValues={this.sendFieldValues}\r\n          handleCloseCurrentTab={this.handleCloseCurrentTab}\r\n          clearTabData={this.clearTabData}\r\n          pushNewBlobs={this.pushNewBlobs}\r\n          scannedBlobs={this.props.scannedBlobs}\r\n          pushNewImages={this.pushNewImages}\r\n          scannedImages={this.props.scannedImages}\r\n          callSuccessToast={this.props.callSuccessToast}\r\n          callErrorToast={this.props.callErrorToast}\r\n        >\r\n        </ViewForm>\r\n      )\r\n    }\r\n    else if (this.props.adminMessage.taskType === \"showSearchUser\" ||\r\n      this.props.adminMessage.taskType === \"showCreateUser\" ||\r\n      this.props.adminMessage.taskType === \"showEditUser\") {\r\n      return (\r\n        <Users\r\n          key={this.props.adminMessage.process_id}\r\n          userId={this.props.userId}\r\n          userRole={this.props.userRole}\r\n          organizationId={this.props.organizationId}\r\n          process_id={this.props.adminMessage.process_id}\r\n          session_id={this.props.adminMessage.session_id}\r\n          taskID={this.props.adminMessage.taskID}\r\n          docId={this.props.adminMessage.docId}\r\n          enumData={this.props.adminMessage.enumData}\r\n          Form={this.props.adminMessage.Form}\r\n          selectedDoc={this.props.adminMessage.selectedDoc}\r\n          organizationIdList={this.props.adminMessage.organizationIdList}\r\n          adultsIPRForm={this.props.adminMessage.adultsIPRForm}\r\n          buttons={this.props.adminMessage.buttons}\r\n          gridForm={this.props.adminMessage.gridForm}\r\n          gridFormButtons={this.props.adminMessage.gridFormButtons}\r\n          docList={this.props.adminMessage.docList}\r\n          sendFieldValues={this.sendFieldValues}\r\n          clearTabData={this.clearTabData}\r\n          taskType={this.props.adminMessage.taskType}\r\n          callSuccessToast={this.props.callSuccessToast}\r\n          callErrorToast={this.props.callErrorToast}\r\n        >\r\n        </Users>\r\n      )\r\n    }\r\n    else if (this.props.adminMessage.taskType === \"error\") {\r\n      return (\r\n        <Grid container direction=\"row\" justify=\"center\" spacing={0}>\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <table>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{this.props.adminMessage.taskType}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{this.props.adminMessage.process_id}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      )\r\n    }\r\n    else {\r\n      console.log(\"SOMETHING WRONG\", this.props.adminMessage)\r\n      return (\r\n        <Grid container direction=\"row\" justify=\"center\" spacing={0}>\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <LinearProgress />\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default MainComponent\r\n"]},"metadata":{},"sourceType":"module"}