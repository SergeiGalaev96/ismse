{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\ismse\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\ismse\\\\src\\\\components\\\\ViewForm\\\\ViewForm.jsx\";\n// Import material and react components\nimport React from \"react\";\nimport Select from 'react-select';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\"; // import Typography from '@material-ui/core/Typography';\n\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers'; // Import libraries\n\nimport TableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport ruLocale from \"date-fns/locale/ru\"; // Import custom components\n\nimport Person from \"../Person/Person.jsx\";\nimport Address from \"../../components/Address/Address.jsx\";\nimport GridForm from \"../../components/GridForm/GridForm.jsx\";\nimport Download from \"../../components/Download/Download.jsx\";\n\nfunction NumberFormatCustom(props) {\n  const inputRef = props.inputRef,\n        onChange = props.onChange,\n        other = _objectWithoutProperties(props, [\"inputRef\", \"onChange\"]);\n\n  return React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    decimalSeparator: \",\",\n    isNumericString: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nasync function tableToPdf(tableId) {\n  let mywindow = window.open('', 'PRINT', 'height=650, width=900, top=100, left=150');\n  mywindow.document.write(\"<html><head><title>\".concat('Экспорт в PDF', \"</title>\"));\n  mywindow.document.write('</head><body >');\n  mywindow.document.write(document.getElementById(tableId).innerHTML);\n  mywindow.document.write('</body></html>');\n  mywindow.document.close(); // necessary for IE >= 10\n  // mywindow.focus(); // necessary for IE >= 10*/\n\n  mywindow.print(); // mywindow.close();\n\n  return true;\n}\n\nfunction RegNoMask(props) {\n  const inputRef = props.inputRef,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return React.createElement(MaskedInput, Object.assign({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    },\n    mask: [/[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/],\n    placeholderChar: '\\u2000',\n    showMask: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n}\n\nclass ViewForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeSubDocument = (name, value) => {\n      let subDoc = this.state.subDocument;\n      subDoc[name] = value;\n      this.setState({\n        subDocument: subDoc\n      });\n      console.log(\"Person Data\", name, value);\n    };\n\n    this.componentChange = event => {\n      console.log(\"COM CHANGE\", event.target.name, event.target.value);\n    };\n\n    this.handleChange = event => {\n      // console.log(\"HANDLE TEXT CHANGE\", event.target.name, event.target.value)\n      let fieldValue = this.state.fieldValue;\n\n      if (event.target.name === \"RegNoAct\") {\n        let newValue = \"\";\n        let regex = /[0-9-№]/;\n\n        for (let key in event.target.value) {\n          if (regex.test(event.target.value[key]) === true) {\n            newValue = newValue + event.target.value[key];\n          }\n        }\n\n        fieldValue[event.target.name] = newValue; // console.log(\"newValue\", newValue, fieldValue)\n      } else {\n        fieldValue[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.regNoChange = event => {\n      // event.preventDefault()\n      var value = event.target.value.trim();\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = value;\n      this.setState({\n        fieldValue: fieldValue\n      }); // console.log(\"REGNOACT\", event.target.value)\n      // if(event.target.value === \"\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\"){\n      //   console.log(\"REGNO null\")\n      //   let fieldValue = this.state.fieldValue\n      //   fieldValue[event.target.name] = null\n      //   this.setState({fieldValue: fieldValue})\n      // }\n      // else{\n      //   for(let i=value.length; i>0; i--){\n      //     let lastChar = value.substring(i -1, i)\n      //     console.log(\"LAST\", lastChar)\n      //     if(lastChar !== '\\u2000'){\n      //       let fieldValue = this.state.fieldValue\n      //       fieldValue[event.target.name] = value\n      //       this.setState({fieldValue: fieldValue})\n      //       break\n      //     }\n      //     value = value.substring(0, value.length -1)\n      //   }\n      // }\n      // REGEX\n      // let regex = /[0-9-]/\n      // let lastChar = value.substring(value.length -1, value.length)\n      // console.log(\"LAST\", lastChar)\n      // // let chars = event.target.value.split('')\n      // // let char = chars.pop()\n      // if(!regex.test(lastChar)){\n      //   // value = chars.join('')\n      //   console.log(\"not valid\", lastChar)\n      // }\n      // else{\n      //   let fieldValue = this.state.fieldValue\n      //   fieldValue[event.target.name] = value\n      //   this.setState({fieldValue: fieldValue})\n      // }\n    };\n\n    this.componentIntChange = event => {\n      // console.log(\"CHANGE\", event.target.name, event.target.value)\n      if (event.target.value > 2147483646) {\n        let value = event.target.value;\n        let maxValue = value.substring(0, value.length - 1); // console.log(\"SLICE\", value, maxValue)\n\n        let fieldValue = this.state.fieldValue;\n        fieldValue[event.target.name] = maxValue;\n        this.setState({\n          fieldValue: fieldValue\n        });\n      } // else{\n      //   let fieldValue = this.state.fieldValue\n      //   console.log(\"CHANGE\", event.target.name, event.target.value)\n      //   fieldValue[event.target.name] = event.target.value\n      //   this.setState({fieldValue: fieldValue})\n      // }\n\n    };\n\n    this.handleSelectChange = event => {\n      let fstate = this.state;\n\n      if (event.name === \"Occupation\") {\n        if (event.value === \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\n          for (let i = 0; i < fstate.Form.sections.length; i++) {\n            if (fstate.Form.sections[i].name === \"HowToDoJob\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = true;\n              }\n            } else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = true;\n              }\n            }\n          }\n        }\n\n        if (event.value !== \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\n          for (let i = 0; i < fstate.Form.sections.length; i++) {\n            if (fstate.Form.sections[i].name === \"HowToDoJob\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = false;\n                fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false;\n              }\n            } else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = false;\n                fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false;\n              }\n            }\n          }\n        }\n      }\n\n      fstate.fieldValue[event.name] = event.value;\n      this.setState(fstate);\n      console.log(\"Option selected:\", event);\n    };\n\n    this.regionChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      fieldValue[\"District\"] = null;\n      fieldValue[\"subDistrict\"] = null;\n      fieldValue[\"Village\"] = null;\n      console.log(\"Region selected\", event.target.name);\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.districtChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      fieldValue[\"subDistrict\"] = null;\n      fieldValue[\"Village\"] = null;\n      console.log(\"District selected\", event.target.name);\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.subDistrictChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      fieldValue[\"Village\"] = null;\n      console.log(\"District selected\", event.target.name);\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.villageChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      console.log(\"Village selected\", event.target.name);\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.handCheckboxChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.checked;\n      this.setState({\n        fieldValue: fieldValue\n      }); // console.log(\"new checkbox status\", this.state.fieldValue[event.target.name])\n    };\n\n    this.state = {\n      process_id: this.props.process_id,\n      session_id: this.props.session_id,\n      taskID: this.props.taskID,\n      taskType: this.props.taskType,\n      fieldValue: {},\n      subDocument: {},\n      enumData: this.props.enumData,\n      Form: null,\n      selectedDoc: JSON.parse(this.props.selectedDoc),\n      docId: null,\n      buttons: this.props.buttons,\n      gridForm: null,\n      IPRGridForm: this.props.IPRGridForm,\n      gridFormButtons: null,\n      userId: this.props.userId,\n      userRole: this.props.userRole,\n      organizationId: this.props.organizationId,\n      formType: this.props.formType,\n      person: null,\n      personFormType: this.props.personFormType,\n      personEnumData: this.props.personEnumData,\n      documentViewForm: this.props.documentViewForm,\n      docList: null,\n      docListIPR: null,\n      download: null,\n      size: this.props.size,\n      page: this.props.page,\n      SOAT: null // regNoMask: []\n\n    };\n    this.sendFieldValues = this.sendFieldValues.bind(this);\n    this.buttonClick = this.buttonClick.bind(this);\n    this.parseDate = this.parseDate.bind(this);\n    this.changeSubDocument = this.changeSubDocument.bind(this);\n    this.rowsPageChange = this.rowsPageChange.bind(this);\n    this.handleCloseCurrentTab = this.handleCloseCurrentTab.bind(this);\n    this.clearTabData = this.clearTabData.bind(this);\n    this.showScanComponentClick = this.showScanComponentClick.bind(this);\n    this.pushNewBlobs = this.pushNewBlobs.bind(this);\n    this.pushNewImages = this.pushNewImages.bind(this);\n  }\n\n  handleCloseCurrentTab(process_id) {\n    this.props.handleCloseCurrentTab(process_id);\n  }\n\n  showScanComponentClick() {\n    this.props.showScanComponentClick();\n  }\n\n  sendFieldValues(commandJson) {\n    this.props.sendFieldValues(commandJson);\n  }\n\n  pushNewBlobs(blobs) {\n    this.props.pushNewBlobs(blobs);\n  }\n\n  pushNewImages(images) {\n    this.props.pushNewImages(images);\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (!this.state.Form) {\n      this.setDataFromProps();\n    }\n\n    if (this.state.download !== null) {\n      if (this.state.download === \"downloadExcel\") {\n        TableToExcel.convert(document.getElementById(\"TableToDownload\"));\n        this.setState({\n          download: null\n        });\n      } else {\n        tableToPdf(\"TableToDownload\");\n        this.setState({\n          download: null\n        });\n      }\n    }\n  }\n\n  async componentDidMount() {\n    console.log(\"VIEW FORM PROPS\", this.props);\n    this.setDataFromProps();\n  } // Set data from props to local state\n\n\n  async setDataFromProps() {\n    try {\n      let fstate = this.state;\n      fstate.Form = this.props.Form;\n      fstate.gridForm = this.props.gridForm;\n\n      if (this.props.selectedDoc !== undefined && this.props.selectedDoc !== \"null\" && this.props.selectedDoc !== null) {\n        var formData = JSON.parse(this.props.selectedDoc);\n        console.log(\"S DOC\", formData); //SET PERSON DATA TO PERSON\n\n        if (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\") {\n          for (let i = 0; i < formData.attributes.length; i++) {\n            if (formData.attributes[i].name === \"AdultsMedicalCart\") {\n              for (let l = 0; l < formData.attributes[i].subDocument.attributes.length; l++) {\n                if (formData.attributes[i].subDocument.attributes[l].name === \"Person\") {\n                  fstate.person = formData.attributes[i].subDocument.attributes[l].subDocument;\n                }\n              }\n            }\n          }\n        } else {\n          for (let i = 0; i < formData.attributes.length; i++) {\n            if (formData.attributes[i].name === \"Person\") {\n              // console.log(\"PERSON\", formData.attributes[i].subDocument)\n              fstate.person = formData.attributes[i].subDocument;\n            }\n          }\n        } // SET FIELD VALUES\n\n\n        for (let i = 0; i < formData.attributes.length; i++) {\n          if (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\") {\n            if (formData.attributes[i].name === \"AdultsMedicalCart\") {\n              fstate.fieldValue.AdultsMedicalCart = formData.attributes[i].subDocument.id;\n\n              for (let l = 0; l < formData.attributes[i].subDocument.attributes.length; l++) {\n                if (formData.attributes[i].subDocument.attributes[l].value !== null) {\n                  fstate.fieldValue[formData.attributes[i].subDocument.attributes[l].name] = formData.attributes[i].subDocument.attributes[l].value;\n                }\n              }\n            } else {\n              if (formData.attributes[i].value !== null) {\n                fstate.fieldValue[formData.attributes[i].name] = formData.attributes[i].value;\n              }\n            }\n          } else {\n            if (formData.attributes[i].value !== null) {\n              fstate.fieldValue[formData.attributes[i].name] = formData.attributes[i].value;\n            }\n          }\n        }\n      } // SET PERSON DATA INTO EMPTY IPR FORM\n\n\n      if (this.props.selectedDoc === \"null\" && this.props.person !== undefined && this.props.person !== \"null\") {\n        var personData = JSON.parse(this.props.person);\n        fstate.person = personData;\n        fstate.fieldValue.Person = personData.id;\n      }\n\n      if (this.props.docList !== undefined) {\n        fstate.docList = JSON.parse(this.props.docList);\n      }\n\n      if (this.props.docListIPR !== undefined) {\n        fstate.docListIPR = JSON.parse(this.props.docListIPR);\n      }\n\n      if (this.props.SOAT !== undefined) {\n        fstate.SOAT = this.props.SOAT;\n      }\n\n      if (this.props.gridFormButtons !== undefined) {\n        fstate.gridFormButtons = this.props.gridFormButtons;\n      }\n\n      if (this.props.docId !== null || this.props.docId !== \"null\" || this.props.docId !== undefined) {\n        fstate.docId = this.props.docId;\n      }\n\n      this.setState(fstate); // UPDAETE SOME DATA if nesessary\n\n      if (this.props.userAction === \"reexamination\") {\n        var newDate = new Date();\n        var dd = String(newDate.getDate()).padStart(2, '0');\n        var mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n        var yyyy = newDate.getFullYear();\n        var convertedDate = String(dd + '.' + mm + '.' + yyyy);\n        fstate.fieldValue[\"Date\"] = convertedDate;\n        fstate.fieldValue[\"RegNoAct\"] = null;\n        fstate.fieldValue[\"ExaminationPrRe\"] = \"8d71baae-b834-42e5-be87-7f5637cc46d8\";\n        fstate.fieldValue[\"goal1\"] = false;\n        fstate.fieldValue[\"goal2\"] = false;\n        fstate.fieldValue[\"goal3\"] = false;\n        fstate.fieldValue[\"goal4\"] = null;\n        fstate.fieldValue[\"goal5\"] = false;\n        fstate.fieldValue[\"goal6\"] = false;\n        fstate.fieldValue[\"goalAnother\"] = null;\n        fstate.fieldValue[\"DisabilityGroup\"] = null; // fstate.fieldValue[\"ExamDateFrom\"] = \"NaN.NaN.NaN\"\t\n        // fstate.fieldValue[\"ExamDateTo\"] = \"NaN.NaN.NaN\"\t\n        // fstate.fieldValue[\"ExamStartDate\"] = \"NaN.NaN.NaN\"\n        // fstate.fieldValue[\"ExamOfDate\"] = \"NaN.NaN.NaN\"\n        // fstate.fieldValue[\"ExamFinishDate\"] = \"NaN.NaN.NaN\"\n\n        fstate.fieldValue[\"ExamDateFrom\"] = undefined;\n        fstate.fieldValue[\"ExamDateTo\"] = undefined;\n        fstate.fieldValue[\"ExamStartDate\"] = undefined;\n        fstate.fieldValue[\"ExamOfDate\"] = undefined;\n        fstate.fieldValue[\"ExamFinishDate\"] = undefined;\n        fstate.fieldValue[\"ReferenceNumber\"] = undefined;\n      }\n\n      if ((this.props.Form.formName === \"AdultsIPRForm\" || this.props.Form.formName === \"ChildIPRForm\") && fstate.fieldValue.AdultsMedicalCart === undefined) {\n        fstate.fieldValue.AdultsMedicalCart = this.props.docId;\n      }\n\n      if (fstate.fieldValue[\"Country\"] === undefined && this.props.SOAT !== null && this.props.SOAT !== undefined) {\n        fstate.fieldValue[\"Country\"] = \"4170000000000\";\n      } // SET PERSON DATA IF IT\"S null\n\n\n      if (fstate.person === null && (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\")) {\n        if (this.state.fieldValue[\"IPRNo\"] === undefined) {\n          this.state.fieldValue[\"IPRNo\"] = this.state.fieldValue[\"No\"];\n        }\n\n        for (let l = 0; l < this.state.selectedDoc.attributes.length; l++) {\n          if (this.state.selectedDoc.attributes[l].name === \"Person\") {\n            fstate.person = this.state.selectedDoc.attributes[l].subDocument; // fstate.fieldValue.Person = this.state.selectedDoc.attributes[l].subDocument.id\n          }\n        }\n      }\n\n      if (fstate.person === null && this.props.person !== undefined && this.props.person !== \"null\" && this.props.person !== null) {\n        personData = JSON.parse(this.props.person);\n        fstate.person = personData;\n        fstate.fieldValue.Person = personData.id;\n      }\n\n      if ((fstate.person === null || this.props.person !== \"null\") && this.props.Form.formName === \"TransferMedicalCertificateForm\" && this.props.docList !== \"[]\") {\n        var docListData = JSON.parse(this.props.docList); // console.log(\"docListData\", docListData)\n\n        for (let l = 0; l < docListData[0].attributes.length; l++) {\n          if (docListData[0].attributes[l].name === \"Person\") {\n            fstate.person = docListData[0].attributes[l].subDocument;\n          }\n        }\n      } // DISABLE 2 BLOCKS OF FORM /FROM INCOMING DATA\n\n\n      if (fstate.fieldValue[\"Occupation\"] !== \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\n        for (let i = 0; i < fstate.Form.sections.length; i++) {\n          if (fstate.Form.sections[i].name === \"HowToDoJob\") {\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n              fstate.Form.sections[i].contents[l].edit = false;\n              fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false;\n            }\n          } else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n              fstate.Form.sections[i].contents[l].edit = false;\n              fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false;\n            }\n          }\n        }\n      } // SET DATE OF REGISTRATION DEFAULT CURRENT DAY\n\n\n      if (this.props.taskType === \"showRegForm\" || this.props.taskType === \"showChildRegForm\" || this.props.taskType === \"showDetailedForm\" || this.props.taskType === \"showChildDetailedForm\") {\n        if (fstate.fieldValue[\"Date\"] === undefined) {\n          let newDate = new Date();\n          let dd = String(newDate.getDate()).padStart(2, '0');\n          let mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n          let yyyy = newDate.getFullYear();\n          let convertedDate = String(dd + '.' + mm + '.' + yyyy);\n          fstate.fieldValue[\"Date\"] = convertedDate;\n        }\n      }\n\n      if (fstate.fieldValue[\"MseName\"] === undefined && this.state.Form.formName !== \"TransferMedicalCertificateForm\" && this.state.Form.formName !== \"AdultsDetailedSearchForm\" && this.state.Form.formName !== \"AdultsIPRSearchForm\" && this.state.Form.formName !== \"ChildDetailedSearchForm\" && this.state.Form.formName !== \"AdultsIPRSearchForm\" && this.state.Form.formName !== \"AdultsRegistrationSearchForm\") {\n        fstate.fieldValue[\"MseName\"] = fstate.organizationId;\n      }\n\n      this.setState(fstate);\n    } catch (er) {\n      console.log(\"ERROR\", er);\n    }\n  }\n\n  async downloadDocument(type) {\n    this.setState({\n      download: type\n    });\n  } // Delete close component and delete its data from hash stared in home component\n\n\n  clearTabData(process_id) {\n    this.props.clearTabData(process_id);\n  } // Check field regNoAct if it's exist in database, it should be unique\n\n\n  async checkForRegNoAct(commandJson, length) {\n    if (this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined) {\n      this.props.callSuccessToast(\"Проверка № Медакта\");\n      var RegNoAct = {\n        attributes: [{\n          name: \"RegNoAct\",\n          value: this.state.fieldValue[\"RegNoAct\"],\n          type: \"Text\"\n        }]\n      };\n      console.log(\"BODY\", RegNoAct);\n      await fetch(\"api/Document/FilterDocumentsByDefId?defId=\" + this.state.Form.docDefId + \"&size=3&page=1&userId=\" + this.state.userId, {\n        headers: {\n          \"Accept\": \"application/x-www-form-urlencoded\",\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"POST\",\n        body: JSON.stringify(RegNoAct) // mode: 'no-cors'\n\n      }).then(response => {\n        response.text().then(stringResponse => {\n          var document = JSON.parse(stringResponse);\n          console.log(\"RESPONSE\", document); // this.sendFieldValues(commandJson)\n\n          if (document.length <= length) {\n            console.log(\"LENGTH\", document.length, length);\n            this.sendFieldValues(commandJson);\n            this.clearTabData(this.state.process_id);\n            this.props.callSuccessToast(\"Проверка завершена!\");\n          } else {\n            this.swAlert(\"Гражданин с таким № акта уже существует!\");\n          }\n        });\n      });\n    } else {\n      this.props.callErrorToast(\"Заполните поле \\\"№ акта по МСЭК\\\"\");\n    }\n  } // Handle changing of person document fields if it is enabled for input and set values to local state\n\n\n  // Returns random id\n  getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // Handling component changing without render all state, made for optimization\n\n\n  // DateTime component change handler\n  handleDateTimeChange(date, name) {\n    let fieldValue = this.state.fieldValue;\n\n    if (date !== null) {\n      var newDate = new Date(date);\n      var dd = String(newDate.getDate()).padStart(2, '0');\n      var mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n      var yyyy = newDate.getFullYear();\n      var convertedDate = String(dd + '.' + mm + '.' + yyyy); // console.log(\"CDATE\", convertedDate)\n\n      fieldValue[name] = convertedDate;\n      this.setState({\n        fieldValue: fieldValue\n      });\n    } else {\n      fieldValue[name] = undefined;\n      this.setState({\n        fieldValue: fieldValue\n      });\n    }\n  } // Convert date to approptiate format\n\n\n  parseDate(date) {\n    if (date !== undefined) {\n      var dd = date.substring(0, 2);\n      var mm = date.substring(3, 5);\n      var yyyy = date.substring(6, 10);\n      var convertedDate = String(yyyy + '-' + mm + '-' + dd);\n      var newDate = new Date(convertedDate); // \"2020-01-26\"\n\n      dd = String(newDate.getDate()).padStart(2, '0');\n      mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n      yyyy = newDate.getFullYear();\n      convertedDate = yyyy + '-' + mm + '-' + dd;\n    } // console.log(\"DATE\", convertedDate)\n\n\n    return convertedDate;\n  }\n\n  // Get name of address by its code\n  getAddressData(code) {\n    for (var i = 0; i < this.state.SOAT.countries.length; i++) {\n      if (code === this.state.SOAT.countries[i].code) {\n        return this.state.SOAT.countries[i].name;\n      } else {\n        for (var j = 0; j < this.state.SOAT.countries[i].regions.length; j++) {\n          if (code === this.state.SOAT.countries[i].regions[j].code) {\n            return this.state.SOAT.countries[i].regions[j].name;\n          } else {\n            for (var k = 0; k < this.state.SOAT.countries[i].regions[j].districts.length; k++) {\n              if (code === this.state.SOAT.countries[i].regions[j].districts[k].code) {\n                return this.state.SOAT.countries[i].regions[j].districts[k].name;\n              } else {\n                if (this.state.SOAT.countries[i].regions[j].districts[k].subDistricts !== undefined) {\n                  for (var l = 0; l < this.state.SOAT.countries[i].regions[j].districts[k].subDistricts.length; l++) {\n                    if (code === this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].code) {\n                      return this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].name;\n                    } else {\n                      if (this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages !== undefined) {\n                        for (var m = 0; m < this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages.length; m++) {\n                          if (code === this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages[m].code) {\n                            return this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages[m].name;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  } // Collecting all field values and return as attributes\n\n\n  getFieldValues() {\n    var attributes = [];\n\n    if (this.state.taskType === \"showIPRForm\" || this.state.taskType === \"showChildIPRForm\") {\n      console.log(\"IPR FORM\");\n\n      for (var key in this.state.fieldValue) {\n        if (key === \"AdultsMedicalCart\") {\n          attributes.push({\n            name: \"AdultsMedicalCart\",\n            value: this.state.fieldValue[key],\n            type: \"Doc\"\n          });\n        } else if (key === \"IPRNo\") {\n          attributes.push({\n            name: \"IPRNo\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else {\n          for (var section = 0; section < this.state.Form.sections.length; section++) {\n            for (var item = 0; item < this.state.Form.sections[section].contents.length; item++) {\n              if (key === this.state.Form.sections[section].contents[item].name) {\n                if (this.state.Form.sections[section].contents[item].edit === true) {\n                  attributes.push({\n                    name: this.state.Form.sections[section].contents[item].name,\n                    value: this.state.fieldValue[key],\n                    type: this.state.Form.sections[section].contents[item].type\n                  });\n                }\n              }\n            }\n          }\n        }\n      }\n    } else if (this.state.taskType === \"showIPRSearchForm\" || this.state.taskType === \"showChildIPRSearchForm\") {\n      var subDocumentAttributes = [];\n\n      for (key in this.state.fieldValue) {\n        if (this.state.fieldValue[key] !== null && this.state.fieldValue[key] !== \"\") {\n          if (key === \"Country\") {\n            subDocumentAttributes.push({\n              name: \"Country\",\n              value: this.state.fieldValue[key],\n              type: \"Text\"\n            });\n          } else if (key === \"Region\") {\n            subDocumentAttributes.push({\n              name: \"Region\",\n              value: this.state.fieldValue[key],\n              type: \"Text\"\n            });\n          } else if (key === \"District\") {\n            subDocumentAttributes.push({\n              name: \"District\",\n              value: this.state.fieldValue[key],\n              type: \"Text\"\n            });\n          }\n        }\n\n        for (let section = 0; section < this.state.Form.sections.length; section++) {\n          for (let item = 0; item < this.state.Form.sections[section].contents.length; item++) {\n            if (key === this.state.Form.sections[section].contents[item].name) {\n              subDocumentAttributes.push({\n                name: this.state.Form.sections[section].contents[item].name,\n                value: this.state.fieldValue[key],\n                type: this.state.Form.sections[section].contents[item].type\n              });\n            }\n          }\n        }\n      }\n\n      attributes.push({\n        name: \"AdultsMedicalCart\",\n        type: \"Doc\",\n        docDef: this.state.Form.medicalCardDocDefId,\n        \"subDocument\": {\n          \"attributes\": subDocumentAttributes\n        }\n      });\n\n      if (Object.keys(this.state.subDocument).length !== 0) {\n        var subDocumentPersonAttributes = [];\n\n        for (var key in this.state.subDocument) {\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\n            if (key === this.state.documentViewForm.attributes[i].name) {\n              subDocumentPersonAttributes.push({\n                name: this.state.documentViewForm.attributes[i].name,\n                value: this.state.subDocument[key],\n                type: this.state.documentViewForm.attributes[i].type\n              });\n              console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key]);\n            }\n          }\n        }\n\n        attributes.subDocumentAttributes.push({\n          name: \"Person\",\n          type: \"Doc\",\n          docDef: this.state.documentViewForm.docDefId,\n          \"subDocument\": {\n            \"attributes\": subDocumentPersonAttributes\n          }\n        });\n      }\n\n      console.log(\"IPRATRS\", attributes);\n    } else {\n      // console.log(\"Fiel Values\", this.state.fieldValue)\n      for (key in this.state.fieldValue) {\n        if (key === \"Country\") {\n          attributes.push({\n            name: \"Country\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"Region\") {\n          attributes.push({\n            name: \"Region\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"District\") {\n          attributes.push({\n            name: \"District\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"subDistrict\") {\n          attributes.push({\n            name: \"subDistrict\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"Village\") {\n          attributes.push({\n            name: \"Village\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"ResidentialAddress\") {\n          attributes.push({\n            name: \"ResidentialAddress\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else if (key === \"Phone\") {\n          attributes.push({\n            name: \"Phone\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else if (key === \"Person\") {\n          attributes.push({\n            name: \"Person\",\n            value: this.state.fieldValue[key],\n            type: \"Doc\"\n          });\n        } else {\n          for (section = 0; section < this.state.Form.sections.length; section++) {\n            for (item = 0; item < this.state.Form.sections[section].contents.length; item++) {\n              if (key === this.state.Form.sections[section].contents[item].name) {\n                attributes.push({\n                  name: this.state.Form.sections[section].contents[item].name,\n                  value: this.state.fieldValue[key],\n                  type: this.state.Form.sections[section].contents[item].type\n                });\n              }\n            }\n          }\n        }\n      }\n\n      if (Object.keys(this.state.subDocument).length !== 0) {\n        subDocumentAttributes = [];\n\n        for (key in this.state.subDocument) {\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\n            if (key === this.state.documentViewForm.attributes[i].name) {\n              subDocumentAttributes.push({\n                name: this.state.documentViewForm.attributes[i].name,\n                value: this.state.subDocument[key],\n                type: this.state.documentViewForm.attributes[i].type\n              });\n              console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key]);\n            }\n          }\n        }\n\n        attributes.push({\n          name: \"Person\",\n          type: \"Doc\",\n          docDef: this.state.documentViewForm.docDefId,\n          \"subDocument\": {\n            \"attributes\": subDocumentAttributes\n          }\n        });\n      }\n    } // console.log(\"ATTR\", attributes)\n\n\n    return attributes;\n  }\n\n  getFieldValuesToSearch() {\n    var attributes = [];\n\n    for (var key in this.state.fieldValue) {\n      if (this.state.fieldValue[key] !== null && this.state.fieldValue[key] !== \"\") {\n        //&& this.state.fieldValue[key] !== \"NaN.NaN.NaN\"\n        if (key === \"Country\") {\n          attributes.push({\n            name: \"Country\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"Region\") {\n          attributes.push({\n            name: \"Region\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"District\") {\n          attributes.push({\n            name: \"District\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"subDistrict\") {\n          attributes.push({\n            name: \"subDistrict\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"Village\") {\n          attributes.push({\n            name: \"Village\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"ResidentialAddress\") {\n          attributes.push({\n            name: \"ResidentialAddress\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else if (key === \"Phone\") {\n          attributes.push({\n            name: \"Phone\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else if (key === \"Person\") {\n          attributes.push({\n            name: \"Person\",\n            value: this.state.fieldValue[key],\n            type: \"Doc\"\n          });\n        } else {\n          for (var section = 0; section < this.state.Form.sections.length; section++) {\n            for (var item = 0; item < this.state.Form.sections[section].contents.length; item++) {\n              if (key === this.state.Form.sections[section].contents[item].name) {\n                attributes.push({\n                  name: this.state.Form.sections[section].contents[item].name,\n                  value: this.state.fieldValue[key],\n                  type: this.state.Form.sections[section].contents[item].type\n                });\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (Object.keys(this.state.subDocument).length !== 0) {\n      var subDocumentAttributes = [];\n\n      for (key in this.state.subDocument) {\n        if (this.state.subDocument[key] !== null && this.state.subDocument[key] !== \"\") {\n          //&& this.state.subDocument[key] !== \"NaN.NaN.NaN\"\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\n            if (key === this.state.documentViewForm.attributes[i].name) {\n              subDocumentAttributes.push({\n                name: this.state.documentViewForm.attributes[i].name,\n                value: this.state.subDocument[key],\n                type: this.state.documentViewForm.attributes[i].type\n              }); // console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key])\n            }\n          }\n        }\n      }\n\n      attributes.push({\n        name: \"Person\",\n        type: \"Doc\",\n        docDef: this.state.documentViewForm.docDefId,\n        \"subDocument\": {\n          \"attributes\": subDocumentAttributes\n        }\n      });\n    }\n\n    return attributes;\n  } // checkForEmptyFields(commandJson, length) {\n  //   //  Adulds Medakt || Reg Form\n  //   if (this.state.taskType === \"showRegForm\" || this.state.taskType === \"showDetailedForm\") {\n  //     // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\n  //     if (this.state.fieldValue[\"Country\"] !== null && this.state.fieldValue[\"Country\"] !== undefined) {\n  //       if (this.state.fieldValue[\"Region\"] !== null && this.state.fieldValue[\"Region\"] !== undefined) {\n  //         if (this.state.fieldValue[\"EducationAct\"] !== null && this.state.fieldValue[\"EducationAct\"] !== undefined) {\n  //           if (this.state.fieldValue[\"Occupation\"] !== null && this.state.fieldValue[\"Occupation\"] !== undefined) {\n  //             if (this.state.fieldValue[\"ExaminationPrRe\"] !== null && this.state.fieldValue[\"ExaminationPrRe\"] !== undefined) {\n  //               if (this.state.fieldValue[\"ExaminationPlace\"] !== null && this.state.fieldValue[\"ExaminationPlace\"] !== undefined) {\n  //                 if (this.state.fieldValue[\"PensionStatus\"] !== null && this.state.fieldValue[\"PensionStatus\"] !== undefined) {\n  //                   if (\n  //                     (this.state.fieldValue[\"goal1\"] !== false && this.state.fieldValue[\"goal1\"] !== undefined && this.state.fieldValue[\"goal1\"] !== \"False\") ||\n  //                     (this.state.fieldValue[\"goal2\"] !== false && this.state.fieldValue[\"goal2\"] !== undefined && this.state.fieldValue[\"goal2\"] !== \"False\") ||\n  //                     (this.state.fieldValue[\"goal3\"] !== false && this.state.fieldValue[\"goal3\"] !== undefined && this.state.fieldValue[\"goal3\"] !== \"False\") ||\n  //                     (this.state.fieldValue[\"goal4\"] !== null && this.state.fieldValue[\"goal4\"] !== undefined && this.state.fieldValue[\"goal4\"] !== \"False\") ||\n  //                     (this.state.fieldValue[\"goal5\"] !== false && this.state.fieldValue[\"goal5\"] !== undefined && this.state.fieldValue[\"goal5\"] !== \"False\") ||\n  //                     (this.state.fieldValue[\"goal6\"] !== false && this.state.fieldValue[\"goal6\"] !== undefined && this.state.fieldValue[\"goal6\"] !== \"False\") ||\n  //                     (this.state.fieldValue[\"goalAnother\"] !== \"\" && this.state.fieldValue[\"goalAnother\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"PlaceOfWork\"] !== \"\" && this.state.fieldValue[\"PlaceOfWork\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"Wage\"] !== \"\" && this.state.fieldValue[\"Wage\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"PensionAmount\"] !== \"\" && this.state.fieldValue[\"PensionAmount\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"Profession\"] !== \"\" && this.state.fieldValue[\"Profession\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined)\n  //                   ) {\n  //                     if (\n  //                       (this.state.fieldValue[\"Good\"] !== false && this.state.fieldValue[\"Good\"] !== undefined && this.state.fieldValue[\"Good\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"Satisfactory\"] !== false && this.state.fieldValue[\"Satisfactory\"] !== undefined && this.state.fieldValue[\"Satisfactory\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"goUnsatisfactoryal1\"] !== false && this.state.fieldValue[\"Unsatisfactory\"] !== undefined && this.state.fieldValue[\"Unsatisfactory\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"SeparateApartment\"] !== false && this.state.fieldValue[\"SeparateApartment\"] !== undefined && this.state.fieldValue[\"SeparateApartment\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"OwnHouse\"] !== false && this.state.fieldValue[\"OwnHouse\"] !== undefined && this.state.fieldValue[\"OwnHouse\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"Dormitory\"] !== false && this.state.fieldValue[\"Dormitory\"] !== undefined && this.state.fieldValue[\"Dormitory\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"LivingAreaRemovable\"] !== false && this.state.fieldValue[\"LivingAreaRemovable\"] !== undefined && this.state.fieldValue[\"LivingAreaRemovable\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"NoOwnAccommodation\"] !== false && this.state.fieldValue[\"NoOwnAccommodation\"] !== undefined && this.state.fieldValue[\"NoOwnAccommodation\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"Additionally\"] !== false && this.state.fieldValue[\"Additionally\"] !== undefined && this.state.fieldValue[\"Additionally\"] !== \"False\")\n  //                     ) {\n  //                       // if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\n  //                       if (this.state.taskType === \"showDetailedForm\" || this.state.taskType === \"showChildDetailedForm\") {\n  //                         if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\n  //                           if (this.state.fieldValue[\"ExamOfDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamOfDate\"] !== undefined) {\n  //                             this.checkForRegNoAct(commandJson, length)\n  //                             // this.sendFieldValues(commandJson)\n  //                           } else this.props.callErrorToast(\"Заполните поле \\\"Дата проведения экспертизы\\\"\")\n  //                         } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\n  //                       } else this.checkForRegNoAct(commandJson, length)\n  //                       // } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\n  //                     } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Жилищно-бытовые условия\\\"\")\n  //                   } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Цель освидетельствования\\\"\")\n  //                 } else this.props.callErrorToast(\"Заполните поле \\\"Получает пенсию\\\"\")\n  //               } else this.props.callErrorToast(\"Заполните поле \\\"Место освидетельствования\\\"\")\n  //             } else this.props.callErrorToast(\"Заполните поле \\\"Освидетельствование\\\"\")\n  //           } else this.props.callErrorToast(\"Заполните поле \\\"Род деятельности\\\"\")\n  //         } else this.props.callErrorToast(\"Заполните поле \\\"Образование\\\"\")\n  //       } else this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\")\n  //     } else this.props.callErrorToast(\"Заполните поле \\\"Страна\\\"\")\n  //     // } else this.props.callErrorToast(\"Заполните поле \\\"№ акта по МСЭ\\\"\")\n  //   }\n  //   // Child Medakt || Reg Form\n  //   else if (this.state.taskType === \"showChildRegForm\" || this.state.taskType === \"showChildDetailedForm\") {\n  //     // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\n  //     if (this.state.fieldValue[\"Country\"] !== null && this.state.fieldValue[\"Country\"] !== undefined) {\n  //       if (this.state.fieldValue[\"Region\"] !== null && this.state.fieldValue[\"Region\"] !== undefined) {\n  //         if (this.state.fieldValue[\"EducationAct\"] !== null && this.state.fieldValue[\"EducationAct\"] !== undefined) {\n  //           if (this.state.fieldValue[\"ExaminationPrRe\"] !== null && this.state.fieldValue[\"ExaminationPrRe\"] !== undefined) {\n  //             if (this.state.fieldValue[\"Examination4\"] !== null && this.state.fieldValue[\"Examination4\"] !== undefined) {\n  //               if (this.state.fieldValue[\"PensionStatus\"] !== null && this.state.fieldValue[\"PensionStatus\"] !== undefined) {\n  //                 if (\n  //                   (this.state.fieldValue[\"goal1\"] !== false && this.state.fieldValue[\"goal1\"] !== undefined && this.state.fieldValue[\"goal1\"] !== \"False\") ||\n  //                   (this.state.fieldValue[\"goal2\"] !== false && this.state.fieldValue[\"goal2\"] !== undefined && this.state.fieldValue[\"goal2\"] !== \"False\") ||\n  //                   (this.state.fieldValue[\"goal3\"] !== false && this.state.fieldValue[\"goal3\"] !== undefined && this.state.fieldValue[\"goal3\"] !== \"False\") ||\n  //                   (this.state.fieldValue[\"goal4\"] !== null && this.state.fieldValue[\"goal4\"] !== undefined && this.state.fieldValue[\"goal4\"] !== \"False\") ||\n  //                   (this.state.fieldValue[\"goal5\"] !== false && this.state.fieldValue[\"goal5\"] !== undefined && this.state.fieldValue[\"goal5\"] !== \"False\") ||\n  //                   (this.state.fieldValue[\"goal6\"] !== false && this.state.fieldValue[\"goal6\"] !== undefined && this.state.fieldValue[\"goal6\"] !== \"False\") ||\n  //                   (this.state.fieldValue[\"goalAnother\"] !== \"\" && this.state.fieldValue[\"goalAnother\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"PlaceOfWork\"] !== \"\" && this.state.fieldValue[\"PlaceOfWork\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"Wage\"] !== 0 && this.state.fieldValue[\"Wage\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"PensionAmount\"] !== 0 && this.state.fieldValue[\"PensionAmount\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"Profession\"] !== \"\" && this.state.fieldValue[\"Profession\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined)\n  //                 ) {\n  //                   if (this.state.taskType === \"showChildDetailedForm\") {\n  //                     if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\n  //                       if (this.state.fieldValue[\"ExamOfDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamOfDate\"] !== undefined) {\n  //                         this.checkForRegNoAct(commandJson, length)\n  //                         // this.sendFieldValues(commandJson)\n  //                       } else this.props.callErrorToast(\"Заполните поле \\\"Дата проведения экспертизы\\\"\")\n  //                     } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\n  //                   } else this.checkForRegNoAct(commandJson, length) // this.sendFieldValues(commandJson)\n  //                 } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Цель освидетельствования\\\"\")\n  //               } else this.props.callErrorToast(\"Заполните поле \\\"Получает пенсию\\\"\")\n  //             } else this.props.callErrorToast(\"Заполните поле \\\"Место освидетельствования\\\"\")\n  //           } else this.props.callErrorToast(\"Заполните поле \\\"Освидетельствование\\\"\")\n  //         } else this.props.callErrorToast(\"Заполните поле \\\"Образование\\\"\")\n  //       } else this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\")\n  //     } else this.props.callErrorToast(\"Заполните поле \\\"Страна\\\"\")\n  //     // }else this.swAlert(\"Заполните поле \\\"№ акта по МСЭ\\\"\")\n  //   }\n  //   else {\n  //     this.sendFieldValues(commandJson)\n  //     this.clearTabData(this.state.process_id)\n  //   }\n  // }\n\n\n  checkForRequieredFields() {\n    let checkedSuccessfuly = null;\n    let f = this.state.Form;\n    let fv = this.state.fieldValue;\n    let tt = this.state.taskType;\n\n    if (tt === \"showRegForm\" || tt === \"showDetailedForm\" || tt === \"showChildRegForm\" || tt === \"showChildDetailedForm\") {\n      // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\n      if (fv[\"Region\"] !== null && fv[\"Region\"] !== undefined) {\n        checkedSuccessfuly = true;\n      } else {\n        this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\");\n        return false;\n      }\n    }\n\n    for (let s = 0; s < f.sections.length; s++) {\n      if (f.sections[s].required === true) {\n        for (let c = 0; c < f.sections[s].contents.length; c++) {\n          let fieldName = f.sections[s].contents[c].name;\n          console.log(\"CH1\", fieldName, f.sections[s].contents[c].required);\n\n          if (fv[fieldName] === undefined || fv[fieldName] === null || fv[fieldName] === \"NaN.NaN.NaN\" || fv[fieldName] === \"\" || fv[fieldName] === \"01.01.1970\") {\n            checkedSuccessfuly = false;\n          } else {\n            checkedSuccessfuly = true;\n            break; // return checkedSuccessfuly\n          }\n        }\n\n        if (checkedSuccessfuly === false) {\n          this.props.callErrorToast(\"Заполните одно из полей секции \\\"\" + f.sections[s].label + \"\\\"\", \"warning\");\n        }\n      } else {\n        for (let c = 0; c < f.sections[s].contents.length; c++) {\n          let fieldName = f.sections[s].contents[c].name;\n          console.log(\"CH2\", fieldName, f.sections[s].contents[c].name);\n\n          if (f.sections[s].contents[c].required === true) {\n            if (fv[fieldName] === undefined || fv[fieldName] === null || fv[fieldName] === \"NaN.NaN.NaN\" || fv[fieldName] === \"\" || fv[fieldName] === \"\" || fv[fieldName] === \"01.01.1970\") {\n              checkedSuccessfuly = false;\n              this.props.callErrorToast(\"Внимание заполните поле \\\"\" + f.sections[s].contents[c].label + \"\\\"\", \"warning\"); // break\n\n              return false;\n            } else {\n              checkedSuccessfuly = true;\n            }\n          } else {\n            checkedSuccessfuly = true;\n          }\n        }\n      }\n    }\n\n    return checkedSuccessfuly;\n  } // Collect id of all documents that are in the local state\n\n\n  getDocsIdToSign() {\n    var docsId = [];\n    docsId.push(this.state.selectedDoc.id);\n\n    if (this.state.docListIPR !== null) {\n      for (var i = 0; i < this.state.docListIPR.length; i++) {\n        docsId.push(this.state.docListIPR[i].id);\n      }\n    }\n\n    return docsId;\n  } // Return person full age\n\n\n  getPersonAge() {\n    for (let i = 0; i < this.state.person.attributes.length; i++) {\n      if (this.state.person.attributes[i].name === \"Date_of_Birth\") {\n        let birthday = new Date(this.parseDate(this.state.person.attributes[i].value));\n        let ageDifMs = Date.now() - birthday.getTime();\n        let ageDate = new Date(ageDifMs); // miliseconds from epoch\n\n        let fullAge = Math.abs(ageDate.getUTCFullYear() - 1970);\n        console.log(\"AGE\", fullAge);\n        return fullAge;\n      }\n    }\n  } // Return label of select by it's id from fieldValue\n\n\n  getEnumValueTextByValue(value) {\n    for (let i = 0; i < this.state.enumData.length; i++) {\n      for (let l = 0; l < this.state.enumData[i].data.length; l++) {\n        if (this.state.enumData[i].data[l].Id === value) {\n          return this.state.enumData[i].data[l].Text;\n        }\n      }\n    }\n  } // Set new organization ID to all document in local state, prepare them to transfer to another Mse\n\n\n  setOrgIdToMedakt() {\n    let fstate = this.state;\n    var newDocList = []; // console.log(\"DOCLIST CUR\" , fstate.docList)\n\n    for (let i = 0; i < fstate.docList.length; i++) {\n      newDocList.push({\n        id: fstate.docList[i].id,\n        attributes: []\n      });\n\n      for (let l = 0; l < fstate.docList[i].attributes.length; l++) {\n        if (fstate.docList[i].attributes[l].name === \"MseName\") {\n          let newItem = {\n            name: fstate.docList[i].attributes[l].name,\n            type: fstate.docList[i].attributes[l].type,\n            value: fstate.fieldValue[\"MseName\"],\n            enumValueText: this.getEnumValueTextByValue(this.state.fieldValue[\"MseName\"])\n          };\n          newDocList[i].attributes.push(newItem);\n        } else {\n          if (fstate.docList[i].attributes[l].name !== \"State\" && fstate.docList[i].attributes[l].value !== null) {\n            let newItem = {\n              name: fstate.docList[i].attributes[l].name,\n              type: fstate.docList[i].attributes[l].type,\n              value: fstate.docList[i].attributes[l].value\n            };\n            newDocList[i].attributes.push(newItem);\n          }\n        }\n      }\n    }\n\n    fstate.docList = newDocList;\n    var newDocListIPR = [];\n\n    for (let i = 0; i < fstate.docListIPR.length; i++) {\n      newDocListIPR.push({\n        id: fstate.docListIPR[i].id,\n        attributes: []\n      });\n\n      for (let l = 0; l < fstate.docListIPR[i].attributes.length; l++) {\n        if (fstate.docListIPR[i].attributes[l].name !== \"State\" && fstate.docListIPR[i].attributes[l].value !== null) {\n          var newItem = {\n            value: fstate.docListIPR[i].attributes[l].value,\n            name: fstate.docListIPR[i].attributes[l].name,\n            type: fstate.docListIPR[i].attributes[l].type\n          };\n          newDocListIPR[i].attributes.push(newItem);\n        }\n      }\n    }\n\n    fstate.docListIPR = newDocListIPR;\n    this.setState(fstate); // console.log(\"DOCLIST\", JSON.stringify(this.state.docList))\n    // console.log(\"DOCLISTIPR\", JSON.stringify(this.state.docListIPR))\n  } // Main button click handler\n\n\n  async buttonClick(name) {\n    console.log(\"Butt\", name);\n\n    if (name === \"createDocument\") {\n      let createDocument = {\n        attributes: this.getFieldValues()\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"createDocument\"\n          },\n          doc: {\n            value: JSON.stringify(createDocument)\n          },\n          docDefId: {\n            value: this.state.Form.docDefId\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          }\n        }\n      };\n      console.log(\"button createDocument: \", commandJson);\n      let checkResult = this.checkForRequieredFields();\n\n      if (checkResult === true) {\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } // this.checkForEmptyFields(commandJson, 0)\n\n    } else if (name === \"updateDocument\") {\n      let updateDocument = {\n        attributes: this.getFieldValues()\n      };\n      let filterIPR = {\n        attributes: [{\n          name: \"AdultsMedicalCart\",\n          value: this.state.docId,\n          type: \"Doc\"\n        }]\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          doc: {\n            value: JSON.stringify(updateDocument)\n          },\n          filterIPR: {\n            value: JSON.stringify(filterIPR)\n          },\n          docDefId: {\n            value: this.state.Form.docDefId\n          },\n          docId: {\n            value: this.state.docId\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          }\n        }\n      };\n      console.log(\"button updateDocument: \", commandJson);\n      let checkResult = this.checkForRequieredFields();\n\n      if (checkResult === true) {\n        console.log(\"FV\", this.state.fieldValue);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } // this.checkForEmptyFields(commandJson, 1)\n      // this.sendFieldValues(commandJson)\n\n    } else if (name === \"findDocument\") {\n      let filterDocument = {\n        attributes: this.getFieldValuesToSearch()\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        docDefId: this.state.Form.docDefId,\n        variables: {\n          userAction: {\n            value: \"findDocument\"\n          },\n          doc: {\n            value: JSON.stringify(filterDocument)\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          },\n          size: {\n            value: this.state.size\n          },\n          page: {\n            value: 1\n          }\n        }\n      };\n      console.log(\"button findDocument: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"findIPR\") {\n      let filterDocument = {\n        attributes: [{\n          name: \"AdultsMedicalCart\",\n          type: \"Doc\",\n          docDef: this.state.Form.medicalCardDocDefId,\n          subDocument: {\n            attributes: this.getFieldValuesToSearch()\n          }\n        }]\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        docDefId: this.state.Form.docDefId,\n        variables: {\n          userAction: {\n            value: \"findDocument\"\n          },\n          doc: {\n            value: JSON.stringify(filterDocument)\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          },\n          size: {\n            value: this.state.size\n          },\n          page: {\n            value: this.state.page\n          }\n        }\n      };\n      console.log(\"button findIPR: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"editDocument\") {\n      let editDocument = {\n        attributes: this.getFieldValues()\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"editDocument\"\n          },\n          doc: {\n            value: JSON.stringify(editDocument)\n          },\n          docId: {\n            value: this.state.docId\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          }\n        }\n      };\n      console.log(\"button editDocument: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"reexamination\") {\n      let updateDocument = {\n        attributes: this.getFieldValues()\n      };\n      let age = this.getPersonAge();\n      let Adult = age >= 18 ? \"True\" : \"False\";\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"reexamination\"\n          },\n          doc: {\n            value: JSON.stringify(updateDocument)\n          },\n          docId: {\n            value: this.state.docId\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          },\n          adult: {\n            value: Adult\n          }\n        }\n      };\n      console.log(\"button reexamination: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"medakt\") {\n      // let updateDocument = {attributes: this.getFieldValues()}\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"medakt\"\n          },\n          docId: {\n            value: this.state.docId\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          }\n        }\n      };\n      console.log(\"button Medakt: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"ipr\") {\n      // if (this.state.docListIPR !== null && this.state.docListIPR !== \"null\") {\n      //   if (this.state.docListIPR.length > 0) {\n      //     this.props.callErrorToast(\"Данный Медакт уже имеет ИПР\")\n      //   }\n      // }\n      if (this.state.docListIPR === null || this.state.docListIPR === \"null\" || this.state.docListIPR.length === 0) {\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"ipr\"\n            },\n            docId: {\n              value: this.state.docId\n            },\n            userId: {\n              value: this.state.userId\n            },\n            userRole: {\n              value: this.state.userRole\n            }\n          }\n        };\n        console.log(\"button IPR: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else {\n        this.props.callErrorToast(\"Данный Медакт уже имеет ИПР!\");\n      }\n    } else if (name === \"deleteDocument\") {\n      swal({\n        text: \"Вы точно хотите удалить этот документ?\",\n        icon: \"warning\",\n        buttons: {\n          yes: \"Да\",\n          no: \"Нет\"\n        },\n        dangerMode: true\n      }).then(click => {\n        if (click === \"yes\") {\n          let commandJson = {\n            commandType: \"completeTask\",\n            session_id: this.state.session_id,\n            process_id: this.state.process_id,\n            taskID: this.state.taskID,\n            variables: {\n              userAction: {\n                value: \"deleteDocument\"\n              },\n              docId: {\n                value: this.state.docId\n              },\n              userId: {\n                value: this.state.userId\n              },\n              userRole: {\n                value: this.state.userRole\n              }\n            }\n          };\n          console.log(\"button deleteDocument: \", commandJson);\n          this.sendFieldValues(commandJson);\n          this.clearTabData(this.state.process_id);\n        }\n      });\n    } else if (name === \"signDocument\") {\n      let docsToSign = {\n        docIdList: this.getDocsIdToSign(),\n        stateTypeId: \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\"\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"signDocument\"\n          },\n          doc: {\n            value: JSON.stringify(docsToSign)\n          } // doc: {\n          //   value: {\n          //     docIdList: this.getDocsIdToSign(),\n          //     stateTypeId: \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\"\n          //   }\n          // }\n\n        }\n      };\n      console.log(\"button signDocument: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"registerDocument\") {\n      let docsToRegister = {\n        docIdList: this.getDocsIdToSign(),\n        stateTypeId: \"C1414D0C-417A-45AB-8B57-01D30A567F08\"\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"registerDocument\"\n          },\n          doc: {\n            value: JSON.stringify(docsToRegister)\n          }\n        }\n      };\n      console.log(\"button registerDocument: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"showStatusSelectingForm\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"showStatusSelectingForm\"\n          },\n          doc: {\n            value: JSON.stringify({\n              docIdList: this.getDocsIdToSign(),\n              stateTypeId: \"\"\n            })\n          }\n        }\n      };\n      console.log(\"button showStatusSelectingForm: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"setNewState\") {\n      if (this.state.fieldValue[\"StatusName\"] !== null && this.state.fieldValue[\"StatusName\"] !== undefined) {\n        let states = {\n          \"29a5cf05-30de-45b9-8526-69de5ea8ab12\": \"a9e360f0-eed1-4ff6-9ab8-e4255c62ce4a\",\n          // умер\n          \"6a0f2699-eb53-4175-ac07-71deb84ae641\": \"10a96e4b-df5d-4f55-9d81-83f9e3e51de5\",\n          // приостановлена инвалидность \n          \"3d2dd30f-3ab0-439f-a8dd-149431af67be\": \"d203372c-236b-4b3e-953a-11f09a4aca61\",\n          // истекший срок инвалидности\n          \"b042e77b-9a12-47f1-a6d2-cc85e9029e61\": \"c9cfe461-e822-4f97-b34d-9312f8917fa9\",\n          // переехал за переделами рт\n          \"c5f3563c-688f-44f1-9c01-70d190ae9edb\": \"1fa96e5b-908f-4c57-bc4a-b61423951081\",\n          // перешел на возрастную пенсию\n          \"d5e1a3aa-dfb3-4c49-8360-c1278e70429f\": \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\" // вернуть в подписанные\n\n        }; // console.log(\"ST\", this.state.fieldValue[\"StatesName\"]);\n\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"setNewState\"\n            },\n            newState: {\n              value: states[this.state.fieldValue[\"StatusName\"]]\n            }\n          }\n        };\n        console.log(\"button setNewState: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else {\n        this.props.callErrorToast(\"Заполните поле \\\"Статус\\\"\");\n      }\n    } else if (name === \"setNewStateChild\") {\n      let states = {\n        \"adcb9640-51d0-4952-b196-27e87bb28d31\": \"10a96e4b-df5d-4f55-9d81-83f9e3e51de5\",\n        // приостановлена инвалидность \n        \"a61fcb5d-e858-4183-b1cd-1fef00c6b4bc\": \"d203372c-236b-4b3e-953a-11f09a4aca61\",\n        // истекший срок инвалидности\n        \"184e3fac-a6b6-4c60-89a8-517862ecd9c4\": \"c9cfe461-e822-4f97-b34d-9312f8917fa9\",\n        // переехал за переделами рт          \n        \"05be1899-8d41-4dfd-ae72-41cba4aa9223\": \"a9e360f0-eed1-4ff6-9ab8-e4255c62ce4a\" // умер\n\n      }; // console.log(\"ST\", this.state.fieldValue[\"StatesName\"]);\n\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"setNewStateChild\"\n          },\n          newState: {\n            value: states[this.state.fieldValue[\"StatesName\"]]\n          }\n        }\n      };\n      console.log(\"button setNewStateChild: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"setStateDied\") {\n      let docsToSetState = {\n        docIdList: this.getDocsIdToSign(),\n        stateTypeId: \"A9E360F0-EED1-4FF6-9AB8-E4255C62CE4A\"\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"setStateDied\"\n          },\n          doc: {\n            value: JSON.stringify(docsToSetState)\n          } // doc: {\n          //   value: {\n          //     docIdList: this.getDocsIdToSign(),\n          //     stateTypeId: \"A9E360F0-EED1-4FF6-9AB8-E4255C62CE4A\"\n          //   }\n          // }\n\n        }\n      };\n      console.log(\"button setStateDied: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"backToMedakt\") {\n      let Document = {\n        attributes: [{\n          name: \"AdultsMedicalCart\",\n          value: this.state.fieldValue[\"AdultsMedicalCart\"],\n          type: \"Doc\"\n        }]\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"backToMedakt\"\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          },\n          docDefId: {\n            value: this.state.Form.docDefId\n          },\n          doc: {\n            value: JSON.stringify(Document)\n          },\n          docId: {\n            value: this.state.fieldValue[\"AdultsMedicalCart\"]\n          },\n          size: {\n            value: 10\n          },\n          page: {\n            value: 1\n          }\n        }\n      };\n      console.log(\"button backToMedakt: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"transferDocuments\") {\n      if (Object.keys(this.state.docList).length !== 0) {\n        var age = this.getPersonAge();\n        console.log(\"AGE\", age);\n\n        if (age >= 18) {\n          var docDefId = this.state.Form.adultsMedaktDocDefId;\n        } else if (age < 18) {\n          var docDefId = this.state.Form.childMedaktDocDefId;\n        }\n\n        this.setOrgIdToMedakt();\n        let commandJson = {\n          commandType: \"transferDocuments\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          medaktDocDefId: docDefId,\n          IPRDocDefId: this.state.IPRGridForm.docDefId,\n          medakts: JSON.stringify(this.state.docList),\n          IPR: JSON.stringify(this.state.docListIPR),\n          userId: this.state.userId,\n          userRole: this.state.userRole\n        };\n\n        if (this.state.fieldValue[\"MseName\"] !== null && this.state.fieldValue[\"MseName\"] !== undefined) {\n          console.log(\"button transfeDocuments: \", commandJson);\n          this.sendFieldValues(commandJson);\n          this.clearTabData(this.state.process_id);\n        } else {\n          this.props.callErrorToast(\"Выберите МСЭК для передачи данных\");\n        }\n      } else this.props.callErrorToast(\"Нет данных для передачи\");\n    } else if (name === \"downloadMemo\") {\n      this.downloadDocument(\"downloadPDF\");\n    } else if (name === \"viewRegForm\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"viewRegForm\"\n          },\n          userId: {\n            value: this.state.userId\n          },\n          size: {\n            value: 10\n          },\n          page: {\n            value: 1\n          }\n        }\n      };\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"acceptComplaint\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"acceptComplaint\"\n          }\n        }\n      };\n      console.log(\"button acceptComplaint: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"rejectComplaint\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"rejectComplaint\"\n          }\n        }\n      };\n      console.log(\"button rejectComplaint: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"downloadMedakt\") {\n      if (this.state.fieldValue.State !== null && this.state.fieldValue.State !== undefined) {\n        this.props.callSuccessToast(\"Выгрузка начата дождитесь окончания процедуры!\");\n        let url = \"api/ExportDataToXlsx/ExportChildByStatus?state=\" + this.state.fieldValue.State;\n        let age = \"(Детский)\";\n\n        if (this.state.taskType === \"showDownloadAdultsMedaktStatesSelectingForm\") {\n          url = \"/api/ExportDataToXlsx/ExportGrownByStatus?state=\" + this.state.fieldValue.State;\n          age = \"(Взрослый)\";\n        }\n\n        var requestOptions = {\n          method: 'GET',\n          redirect: 'follow'\n        };\n        await fetch(url, requestOptions).then(response => response.blob()).then(bl => {\n          console.log(\"RES\", bl);\n          var docUrl = window.URL.createObjectURL(bl);\n          var a = document.createElement('a');\n          a.href = docUrl;\n          a.download = \"\\u0412\\u044B\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u041C\\u0435\\u0434\\u0430\\u043A\\u0442\\u043E\\u0432 \".concat(age, \".xls\");\n          document.body.appendChild(a);\n          a.click();\n          a.remove();\n        }).catch(error => console.log('error', error));\n      } else {\n        this.props.callErrorToast(\"Заполните поле Статус\");\n      }\n    } else if (name === \"back\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"back\"\n          }\n        }\n      };\n      console.log(\"button back: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"finish\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"finish\"\n          }\n        }\n      };\n      console.log(\"button finish: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"cancel\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"cancel\"\n          }\n        }\n      };\n      console.log(\"button cancel: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else {\n      console.log(\"Unknown button\", name);\n    }\n  } // Handler of amount of rows per page of grid form\n\n\n  rowsPageChange(size, page) {\n    console.log(\"Rows changed: \", size);\n    let filterDocument = {\n      attributes: this.getFieldValuesToSearch()\n    };\n    let commandJson = {\n      commandType: \"completeTask\",\n      session_id: this.state.session_id,\n      process_id: this.state.process_id,\n      taskID: this.state.taskID,\n      docDefId: this.state.Form.docDefId,\n      variables: {\n        userAction: {\n          value: \"findDocument\"\n        },\n        doc: {\n          value: JSON.stringify(filterDocument)\n        },\n        size: {\n          value: size\n        },\n        page: {\n          value: page\n        }\n      }\n    };\n    console.log(\"JSON Collected: \", commandJson);\n    this.sendFieldValues(commandJson);\n    this.clearTabData(this.state.process_id);\n  } // Returns Button component\n\n\n  createButton(button, index) {\n    if (button.name === \"downloadExcel\" || button.name === \"downloadPDF\") {\n      return React.createElement(Button, {\n        variant: \"outlined\",\n        name: button.name,\n        onClick: () => this.downloadDocument(button.name),\n        value: button.name,\n        style: {\n          margin: 3,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1848\n        },\n        __self: this\n      }, button.label);\n    } else if (button.name === \"attachDocument\") {\n      return React.createElement(Button, {\n        variant: \"outlined\",\n        name: button.name,\n        onClick: () => this.showScanComponentClick(),\n        value: button.name,\n        style: {\n          margin: 3,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1865\n        },\n        __self: this\n      }, button.label);\n    } else return React.createElement(Button, {\n      variant: \"outlined\",\n      name: button.name,\n      onClick: () => this.buttonClick(button.name),\n      style: {\n        margin: 3,\n        backgroundColor: button.backgroundColor,\n        height: 32,\n        fontSize: 12\n      },\n      value: button.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1881\n      },\n      __self: this\n    }, button.label);\n  }\n\n  getEnumValueText(enumName) {\n    for (let i = 0; i < this.state.selectedDoc.attributes.length; i++) {\n      if (this.state.selectedDoc.attributes[i].name === enumName) {\n        return this.state.selectedDoc.attributes[i].enumValueText;\n      }\n    }\n  } // Create sections with labels and call bodyBuilder function\n\n\n  sectionBuilder(section, index) {\n    return React.createElement(Table, {\n      size: \"small\",\n      key: index + \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1906\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1907\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1908\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      key: index = \"head\",\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: \"#D3D3FE\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1909\n      },\n      __self: this\n    }, section.label))), this.bodyBuilder(section));\n  } // Create body of each section and call contentBuilder function\n\n\n  bodyBuilder(section) {\n    return React.createElement(Table, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1928\n      },\n      __self: this\n    }, React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1929\n      },\n      __self: this\n    }, section.contents.map((contentItem, index) => React.createElement(TableRow, {\n      key: index,\n      style: {\n        height: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1931\n      },\n      __self: this\n    }, contentItem.name !== \"PersonDetailFormAddress\" && contentItem.name !== \"PersonData\" && contentItem.label !== \"\" && React.createElement(TableCell, {\n      key: index + \"cell1\",\n      align: \"left\",\n      style: {\n        width: \"40%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1934\n      },\n      __self: this\n    }, contentItem.label), React.createElement(TableCell, {\n      key: index + \"cell2\",\n      align: \"left\",\n      style: {\n        width: \"60%\",\n        height: this.state.Form.formName === \"TransferMedicalCertificateForm\" ? 100 : 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1941\n      },\n      __self: this\n    }, this.contentBuilder(contentItem))))));\n  } // Create component by it's type\n\n\n  contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\" || contentItem.type === \"BLOB\") {\n      // if (contentItem.name === \"RegNoAct\") {\n      //   return (\n      //     <FormControl>\n      //       <Input\n      //         name={contentItem.name}\n      //         value={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\n      //         // onChange={this.componentChange}\n      //         onBlur={this.regNoChange}\n      //         style={{ width: \"100%\", height: 30 }}\n      //         disabled={(this.props.formType === \"view\" || this.props.edit === false) ? true : false}\n      //         inputComponent={RegNoMask}\n      //       />\n      //     </FormControl>\n      //   )\n      // }\n      // else {\n      return React.createElement(TextField, {\n        multiline: true // onChange={this.componentChange}\n        // onBlur={this.handleChange}\n        // defaultValue={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\n        ,\n        onChange: this.handleChange,\n        value: this.state.fieldValue[contentItem.name] !== undefined ? this.state.fieldValue[contentItem.name] : \"\",\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1973\n        },\n        __self: this\n      }); // }\n    } else if (contentItem.type === \"Int\") {\n      return React.createElement(TextField, {\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        style: {\n          width: \"100%\"\n        } // defaultValue = {(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name]: \"\"}\n        ,\n        value: this.state.fieldValue[contentItem.name] !== undefined ? this.state.fieldValue[contentItem.name] : \"\",\n        onChange: this.componentIntChange // onBlur={this.handleChange}\n        ,\n        name: contentItem.name,\n        InputProps: {\n          inputComponent: NumberFormatCustom\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1989\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"DateTime\") {\n      return React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        locale: ruLocale,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2003\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        clearable: true,\n        cancelLabel: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\",\n        okLabel: \"\\u041E\\u043A\",\n        clearLabel: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\",\n        invalidDateMessage: \"\\u043D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\",\n        name: contentItem.name,\n        margin: \"small\",\n        format: \"dd.MM.yyyy\",\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        value: this.state.fieldValue[contentItem.name] !== undefined ? this.parseDate(this.state.fieldValue[contentItem.name]) : null,\n        onChange: date => this.handleDateTimeChange(date, contentItem.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2004\n        },\n        __self: this\n      }));\n    } else if (contentItem.type === \"Enum\") {\n      // console.log(\"EN DATA\", this.state.enumData)\n      let options = [];\n      options.push({\n        \"value\": null,\n        \"label\": null,\n        \"name\": contentItem.name\n      });\n\n      for (let i = 0; i < this.state.enumData.length; i++) {\n        if (contentItem.enumDef === this.state.enumData[i].enumDef) {\n          for (let l = 0; l < this.state.enumData[i].data.length; l++) {\n            options.push({\n              \"value\": this.state.enumData[i].data[l].Id,\n              \"label\": this.state.enumData[i].data[l].Text,\n              \"name\": contentItem.name\n            });\n          }\n\n          break;\n        }\n      } // console.log(\"OPTOPNS\", options)\n      // console.log(\"S OPTOPNS\", this.state.fieldValue[contentItem.name])\n\n\n      var selectedOption = {};\n\n      if (this.state.fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < options.length; i++) {\n          if (options[i].value === this.state.fieldValue[contentItem.name]) {\n            selectedOption = {\n              \"value\": options[i].value,\n              \"name\": options[i].name,\n              \"label\": options[i].label\n            };\n            break;\n          } else selectedOption = {\n            \"value\": null,\n            \"label\": null,\n            \"name\": contentItem.name\n          };\n        }\n      }\n\n      return React.createElement(Select, {\n        name: contentItem.name,\n        value: selectedOption,\n        onChange: this.handleSelectChange,\n        style: {\n          height: 30,\n          width: \"100%\"\n        },\n        options: options,\n        isDisabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2061\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"Currency\" || contentItem.type === \"Float\") {\n      return React.createElement(TextField, {\n        value: this.state.fieldValue[contentItem.name] ? this.state.fieldValue[contentItem.name] : \"\" // onChange = {this.componentChange}\n        ,\n        onBlur: this.handleChange,\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: NumberFormatCustom\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2073\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"Bool\") {\n      return React.createElement(Checkbox // key={this.getUUID()}\n      , {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: this.state.formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: this.handCheckboxChange,\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        checked: this.state.fieldValue[contentItem.name] === \"True\" || this.state.fieldValue[contentItem.name] === true ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2086\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"PersonData\") {\n      return React.createElement(Person, {\n        userId: this.state.userId,\n        userRole: this.state.userRole,\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        selectedDoc: this.state.person,\n        documentViewForm: this.state.documentViewForm,\n        taskID: this.state.taskID,\n        subDocument: true,\n        changeSubDocument: this.changeSubDocument,\n        formType: this.state.personFormType,\n        enumData: this.state.personEnumData // formType = {this.state.formName === \"AdultsIPRForm\" ? \"view\" : \"edit\"}\n        ,\n        docList: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2098\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"Address\") {\n      return React.createElement(Address, {\n        SOAT: this.state.SOAT // countryChange = {this.countryChange}\n        ,\n        regionChange: this.regionChange,\n        districtChange: this.districtChange,\n        subDistrictChange: this.subDistrictChange,\n        villageChange: this.villageChange,\n        handleChange: this.handleChange,\n        Country: this.state.fieldValue.Country,\n        Region: this.state.fieldValue.Region,\n        District: this.state.fieldValue.District,\n        subDistrict: this.state.fieldValue.subDistrict,\n        Village: this.state.fieldValue.Village,\n        ResidentialAddress: this.state.fieldValue.ResidentialAddress,\n        Phone: this.state.fieldValue.Phone,\n        formType: this.state.formType,\n        edit: contentItem.edit,\n        formName: this.state.Form.formName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2118\n        },\n        __self: this\n      });\n    }\n  } // custom allerts\n\n\n  swAlert(text) {\n    return swal({\n      text: text,\n      icon: \"warning\",\n      buttons: {\n        ok: \"Ок\"\n      } // dangerMode: true,\n\n    }).then(click => {\n      if (click === \"ok\") {\n        console.log(\"CLICK OK\", click);\n      }\n    });\n  }\n\n  render() {\n    try {\n      if (!this.state.Form) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2158\n        },\n        __self: this\n      }, \"No Form\");\n      if (this.state.buttons === undefined) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2159\n        },\n        __self: this\n      }, \"No Buttons\"); // console.log(\"ViewForm State\", this.state)\n      // console.log(\"ViewForm Props\", this.props)\n\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2163\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2164\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2165\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2166\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2167\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2168\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        style: {\n          maxHeight: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2169\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        style: {\n          fontSize: 16,\n          color: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2170\n        },\n        __self: this\n      }, this.state.Form.label)))), React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2174\n        },\n        __self: this\n      }, this.state.Form.sections.map((section, index) => {\n        return this.sectionBuilder(section, index);\n      })), React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2179\n        },\n        __self: this\n      }, this.state.buttons.map((button, index) => {\n        return this.createButton(button, index);\n      }))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2187\n        },\n        __self: this\n      }), this.state.docList !== null && this.state.docList !== \"null\" && this.state.docList !== undefined ? React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2191\n        },\n        __self: this\n      }, React.createElement(GridForm, {\n        key: \"grid form\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        userId: this.state.userId,\n        organizationId: this.state.organizationId,\n        userRole: this.state.userRole,\n        docList: this.state.docList,\n        size: this.state.size,\n        page: this.state.page,\n        Form: this.state.gridForm,\n        gridFormButtons: this.state.gridFormButtons,\n        rowsPageChange: this.rowsPageChange,\n        sendFieldValues: this.sendFieldValues,\n        SOAT: this.state.SOAT,\n        handleCloseCurrentTab: this.handleCloseCurrentTab,\n        clearTabData: this.clearTabData,\n        callSuccessToast: this.props.callSuccessToast,\n        callErrorToast: this.props.callErrorToast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2192\n        },\n        __self: this\n      })) : React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2215\n        },\n        __self: this\n      }), this.state.docListIPR !== null && this.state.docListIPR !== \"null\" && this.state.docListIPR !== undefined ? React.createElement(GridForm, {\n        key: \"grid form\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        userId: this.state.userId,\n        organizationId: this.state.organizationId,\n        userRole: this.state.userRole,\n        docListIPR: this.state.docListIPR,\n        size: this.state.size,\n        page: this.state.page,\n        Form: this.state.IPRGridForm // {this.state.gridForm.Form}\n        ,\n        medicalCardId: this.state.docId,\n        gridFormButtons: this.state.gridFormButtons,\n        rowsPageChange: this.rowsPageChange,\n        sendFieldValues: this.sendFieldValues,\n        SOAT: this.state.SOAT,\n        handleCloseCurrentTab: this.handleCloseCurrentTab,\n        clearTabData: this.clearTabData,\n        callSuccessToast: this.props.callSuccessToast,\n        callErrorToast: this.props.callErrorToast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2219\n        },\n        __self: this\n      }) : React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2243\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2245\n        },\n        __self: this\n      }), this.state.download === \"downloadExcel\" && React.createElement(Download, {\n        downloadType: this.state.download,\n        Form: this.state.Form,\n        fieldValue: this.state.fieldValue,\n        person: this.state.person,\n        SOAT: this.state.SOAT,\n        selectedDoc: this.state.selectedDoc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2247\n        },\n        __self: this\n      }), this.state.download === \"downloadPDF\" && React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 1,\n        id: \"TableToDownload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2258\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2259\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2260\n        },\n        __self: this\n      }, React.createElement(Download, {\n        downloadType: this.state.download,\n        Form: this.state.Form,\n        fieldValue: this.state.fieldValue,\n        person: this.state.person,\n        SOAT: this.state.SOAT,\n        selectedDoc: this.state.selectedDoc,\n        enumData: this.state.enumData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2261\n        },\n        __self: this\n      })))));\n    } catch (error) {\n      console.log(\"ERROR\", error);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2279\n        },\n        __self: this\n      }, \"error\");\n    }\n  }\n\n}\n\nexport default ViewForm;","map":{"version":3,"sources":["C:\\Users\\SERGO\\Desktop\\ismse\\src\\components\\ViewForm\\ViewForm.jsx"],"names":["React","Select","MaskedInput","NumberFormat","PropTypes","Grid","Card","Paper","TextField","Button","Checkbox","Table","TableHead","TableBody","TableRow","TableCell","Input","FormControl","MuiPickersUtilsProvider","DatePicker","TableToExcel","swal","DateFnsUtils","ruLocale","Person","Address","GridForm","Download","NumberFormatCustom","props","inputRef","onChange","other","values","target","value","propTypes","func","isRequired","tableToPdf","tableId","mywindow","window","open","document","write","getElementById","innerHTML","close","print","RegNoMask","ref","inputElement","ViewForm","Component","constructor","changeSubDocument","name","subDoc","state","subDocument","setState","console","log","componentChange","event","handleChange","fieldValue","newValue","regex","key","test","regNoChange","trim","componentIntChange","maxValue","substring","length","handleSelectChange","fstate","i","Form","sections","l","contents","edit","regionChange","districtChange","subDistrictChange","villageChange","handCheckboxChange","checked","process_id","session_id","taskID","taskType","enumData","selectedDoc","JSON","parse","docId","buttons","gridForm","IPRGridForm","gridFormButtons","userId","userRole","organizationId","formType","person","personFormType","personEnumData","documentViewForm","docList","docListIPR","download","size","page","SOAT","sendFieldValues","bind","buttonClick","parseDate","rowsPageChange","handleCloseCurrentTab","clearTabData","showScanComponentClick","pushNewBlobs","pushNewImages","commandJson","blobs","images","componentDidUpdate","prevProps","setDataFromProps","convert","componentDidMount","undefined","formData","attributes","AdultsMedicalCart","id","personData","userAction","newDate","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","convertedDate","formName","docListData","er","downloadDocument","type","checkForRegNoAct","callSuccessToast","RegNoAct","fetch","docDefId","headers","method","body","stringify","then","response","text","stringResponse","swAlert","callErrorToast","getUUID","uuidv1","require","handleDateTimeChange","date","getAddressData","code","countries","j","regions","k","districts","subDistricts","villages","m","getFieldValues","push","section","item","subDocumentAttributes","docDef","medicalCardDocDefId","Object","keys","subDocumentPersonAttributes","enumValueText","getFieldValuesToSearch","checkForRequieredFields","checkedSuccessfuly","f","fv","tt","s","required","c","fieldName","label","getDocsIdToSign","docsId","getPersonAge","birthday","ageDifMs","now","getTime","ageDate","fullAge","Math","abs","getUTCFullYear","getEnumValueTextByValue","data","Id","Text","setOrgIdToMedakt","newDocList","newItem","newDocListIPR","createDocument","commandType","variables","doc","checkResult","updateDocument","filterIPR","filterDocument","editDocument","age","Adult","adult","icon","yes","no","dangerMode","click","docsToSign","docIdList","stateTypeId","docsToRegister","states","newState","docsToSetState","Document","adultsMedaktDocDefId","childMedaktDocDefId","medaktDocDefId","IPRDocDefId","medakts","IPR","State","url","requestOptions","redirect","blob","bl","docUrl","URL","createObjectURL","a","createElement","href","appendChild","remove","catch","error","createButton","button","index","margin","backgroundColor","height","fontSize","getEnumValueText","enumName","sectionBuilder","color","width","bodyBuilder","map","contentItem","contentBuilder","inputComponent","options","enumDef","selectedOption","maxWidth","Country","Region","District","subDistrict","Village","ResidentialAddress","Phone","ok","render","maxHeight"],"mappings":"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","sourcesContent":["// Import material and react components\r\nimport React from \"react\";\r\nimport Select from 'react-select';\r\nimport MaskedInput from 'react-text-mask';\r\nimport NumberFormat from 'react-number-format';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from '@material-ui/core/Card';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Input from '@material-ui/core/Input';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\r\n\r\n// Import libraries\r\nimport TableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\r\nimport swal from 'sweetalert' // https://sweetalert.js.org/guides/\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport ruLocale from \"date-fns/locale/ru\";\r\n\r\n// Import custom components\r\nimport Person from \"../Person/Person.jsx\";\r\nimport Address from \"../../components/Address/Address.jsx\";\r\nimport GridForm from \"../../components/GridForm/GridForm.jsx\";\r\nimport Download from \"../../components/Download/Download.jsx\";\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={values => {\r\n        onChange({\r\n          target: {\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      decimalSeparator={\",\"}\r\n      isNumericString\r\n    />\r\n  );\r\n}\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\nasync function tableToPdf(tableId) {\r\n  let mywindow = window.open('', 'PRINT', 'height=650, width=900, top=100, left=150');\r\n\r\n  mywindow.document.write(`<html><head><title>${'Экспорт в PDF'}</title>`);\r\n  mywindow.document.write('</head><body >');\r\n  mywindow.document.write(document.getElementById(tableId).innerHTML);\r\n  mywindow.document.write('</body></html>');\r\n\r\n  mywindow.document.close(); // necessary for IE >= 10\r\n  // mywindow.focus(); // necessary for IE >= 10*/\r\n\r\n  mywindow.print();\r\n  // mywindow.close();\r\n\r\n  return true;\r\n}\r\nfunction RegNoMask(props) {\r\n  const { inputRef, ...other } = props\r\n  return (\r\n    <MaskedInput\r\n      {...other}\r\n      ref={ref => {\r\n        inputRef(ref ? ref.inputElement : null)\r\n      }}\r\n      mask={[/[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/]}\r\n      placeholderChar={'\\u2000'}\r\n      showMask\r\n    />\r\n  )\r\n}\r\nclass ViewForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      process_id: this.props.process_id,\r\n      session_id: this.props.session_id,\r\n      taskID: this.props.taskID,\r\n      taskType: this.props.taskType,\r\n      fieldValue: {},\r\n      subDocument: {},\r\n      enumData: this.props.enumData,\r\n      Form: null,\r\n      selectedDoc: JSON.parse(this.props.selectedDoc),\r\n      docId: null,\r\n      buttons: this.props.buttons,\r\n      gridForm: null,\r\n      IPRGridForm: this.props.IPRGridForm,\r\n      gridFormButtons: null,\r\n      userId: this.props.userId,\r\n      userRole: this.props.userRole,\r\n      organizationId: this.props.organizationId,\r\n      formType: this.props.formType,\r\n      person: null,\r\n      personFormType: this.props.personFormType,\r\n      personEnumData: this.props.personEnumData,\r\n      documentViewForm: this.props.documentViewForm,\r\n      docList: null,\r\n      docListIPR: null,\r\n      download: null,\r\n      size: this.props.size,\r\n      page: this.props.page,\r\n      SOAT: null,\r\n      // regNoMask: []\r\n    }\r\n    this.sendFieldValues = this.sendFieldValues.bind(this)\r\n    this.buttonClick = this.buttonClick.bind(this)\r\n    this.parseDate = this.parseDate.bind(this)\r\n    this.changeSubDocument = this.changeSubDocument.bind(this)\r\n    this.rowsPageChange = this.rowsPageChange.bind(this)\r\n    this.handleCloseCurrentTab = this.handleCloseCurrentTab.bind(this)\r\n    this.clearTabData = this.clearTabData.bind(this)\r\n    this.showScanComponentClick = this.showScanComponentClick.bind(this)\r\n    this.pushNewBlobs = this.pushNewBlobs.bind(this)\r\n    this.pushNewImages = this.pushNewImages.bind(this)\r\n  }\r\n  handleCloseCurrentTab(process_id) {\r\n    this.props.handleCloseCurrentTab(process_id)\r\n  }\r\n  showScanComponentClick() {\r\n    this.props.showScanComponentClick()\r\n  }\r\n  sendFieldValues(commandJson) {\r\n    this.props.sendFieldValues(commandJson)\r\n  }\r\n  pushNewBlobs(blobs) {\r\n    this.props.pushNewBlobs(blobs)\r\n  }\r\n  pushNewImages(images) {\r\n    this.props.pushNewImages(images)\r\n  }\r\n  async componentDidUpdate(prevProps) {\r\n    if (!this.state.Form) {\r\n      this.setDataFromProps()\r\n    }\r\n    if (this.state.download !== null) {\r\n      if (this.state.download === \"downloadExcel\") {\r\n        TableToExcel.convert(document.getElementById(\"TableToDownload\"))\r\n        this.setState({ download: null })\r\n      }\r\n      else {\r\n        tableToPdf(\"TableToDownload\")\r\n        this.setState({ download: null })\r\n      }\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    console.log(\"VIEW FORM PROPS\", this.props)\r\n    this.setDataFromProps()\r\n  }\r\n  // Set data from props to local state\r\n  async setDataFromProps() {\r\n    try {\r\n      let fstate = this.state\r\n      fstate.Form = this.props.Form\r\n      fstate.gridForm = this.props.gridForm\r\n      if (this.props.selectedDoc !== undefined && this.props.selectedDoc !== \"null\" && this.props.selectedDoc !== null) {\r\n        var formData = JSON.parse(this.props.selectedDoc)\r\n        console.log(\"S DOC\", formData)\r\n        //SET PERSON DATA TO PERSON\r\n        if (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\") {\r\n          for (let i = 0; i < formData.attributes.length; i++) {\r\n            if (formData.attributes[i].name === \"AdultsMedicalCart\") {\r\n              for (let l = 0; l < formData.attributes[i].subDocument.attributes.length; l++) {\r\n                if (formData.attributes[i].subDocument.attributes[l].name === \"Person\") {\r\n                  fstate.person = formData.attributes[i].subDocument.attributes[l].subDocument\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          for (let i = 0; i < formData.attributes.length; i++) {\r\n            if (formData.attributes[i].name === \"Person\") {\r\n              // console.log(\"PERSON\", formData.attributes[i].subDocument)\r\n              fstate.person = formData.attributes[i].subDocument\r\n            }\r\n          }\r\n        }\r\n        // SET FIELD VALUES\r\n        for (let i = 0; i < formData.attributes.length; i++) {\r\n          if (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\") {\r\n            if (formData.attributes[i].name === \"AdultsMedicalCart\") {\r\n              fstate.fieldValue.AdultsMedicalCart = formData.attributes[i].subDocument.id\r\n              for (let l = 0; l < formData.attributes[i].subDocument.attributes.length; l++) {\r\n                if (formData.attributes[i].subDocument.attributes[l].value !== null) {\r\n                  fstate.fieldValue[formData.attributes[i].subDocument.attributes[l].name] = formData.attributes[i].subDocument.attributes[l].value\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              if (formData.attributes[i].value !== null) {\r\n                fstate.fieldValue[formData.attributes[i].name] = formData.attributes[i].value\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            if (formData.attributes[i].value !== null) {\r\n              fstate.fieldValue[formData.attributes[i].name] = formData.attributes[i].value\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // SET PERSON DATA INTO EMPTY IPR FORM\r\n      if (this.props.selectedDoc === \"null\" && this.props.person !== undefined && this.props.person !== \"null\") {\r\n        var personData = JSON.parse(this.props.person)\r\n        fstate.person = personData\r\n        fstate.fieldValue.Person = personData.id\r\n      }\r\n      if (this.props.docList !== undefined) {\r\n        fstate.docList = JSON.parse(this.props.docList)\r\n      }\r\n      if (this.props.docListIPR !== undefined) {\r\n        fstate.docListIPR = JSON.parse(this.props.docListIPR)\r\n      }\r\n      if (this.props.SOAT !== undefined) {\r\n        fstate.SOAT = this.props.SOAT\r\n      }\r\n      if (this.props.gridFormButtons !== undefined) {\r\n        fstate.gridFormButtons = this.props.gridFormButtons\r\n      }\r\n      if (this.props.docId !== null || this.props.docId !== \"null\" || this.props.docId !== undefined) {\r\n        fstate.docId = this.props.docId\r\n      }\r\n      this.setState(fstate)\r\n      // UPDAETE SOME DATA if nesessary\r\n      if (this.props.userAction === \"reexamination\") {\r\n        var newDate = new Date()\r\n        var dd = String(newDate.getDate()).padStart(2, '0')\r\n        var mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\r\n        var yyyy = newDate.getFullYear()\r\n        var convertedDate = String(dd + '.' + mm + '.' + yyyy)\r\n        fstate.fieldValue[\"Date\"] = convertedDate\r\n        fstate.fieldValue[\"RegNoAct\"] = null\r\n        fstate.fieldValue[\"ExaminationPrRe\"] = \"8d71baae-b834-42e5-be87-7f5637cc46d8\"\r\n        fstate.fieldValue[\"goal1\"] = false\r\n        fstate.fieldValue[\"goal2\"] = false\r\n        fstate.fieldValue[\"goal3\"] = false\r\n        fstate.fieldValue[\"goal4\"] = null\r\n        fstate.fieldValue[\"goal5\"] = false\r\n        fstate.fieldValue[\"goal6\"] = false\r\n        fstate.fieldValue[\"goalAnother\"] = null\r\n        fstate.fieldValue[\"DisabilityGroup\"] = null\r\n        // fstate.fieldValue[\"ExamDateFrom\"] = \"NaN.NaN.NaN\"\t\r\n        // fstate.fieldValue[\"ExamDateTo\"] = \"NaN.NaN.NaN\"\t\r\n        // fstate.fieldValue[\"ExamStartDate\"] = \"NaN.NaN.NaN\"\r\n        // fstate.fieldValue[\"ExamOfDate\"] = \"NaN.NaN.NaN\"\r\n        // fstate.fieldValue[\"ExamFinishDate\"] = \"NaN.NaN.NaN\"\r\n        fstate.fieldValue[\"ExamDateFrom\"] = undefined\r\n        fstate.fieldValue[\"ExamDateTo\"] = undefined\r\n        fstate.fieldValue[\"ExamStartDate\"] = undefined\r\n        fstate.fieldValue[\"ExamOfDate\"] = undefined\r\n        fstate.fieldValue[\"ExamFinishDate\"] = undefined\r\n        fstate.fieldValue[\"ReferenceNumber\"] = undefined\r\n      }\r\n      if ((this.props.Form.formName === \"AdultsIPRForm\" || this.props.Form.formName === \"ChildIPRForm\") && fstate.fieldValue.AdultsMedicalCart === undefined) {\r\n        fstate.fieldValue.AdultsMedicalCart = this.props.docId\r\n      }\r\n      if (fstate.fieldValue[\"Country\"] === undefined && this.props.SOAT !== null && this.props.SOAT !== undefined) {\r\n        fstate.fieldValue[\"Country\"] = \"4170000000000\"\r\n      }\r\n      // SET PERSON DATA IF IT\"S null\r\n      if (fstate.person === null && (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\")) {\r\n        if (this.state.fieldValue[\"IPRNo\"] === undefined) {\r\n          this.state.fieldValue[\"IPRNo\"] = this.state.fieldValue[\"No\"]\r\n        }\r\n        for (let l = 0; l < this.state.selectedDoc.attributes.length; l++) {\r\n          if (this.state.selectedDoc.attributes[l].name === \"Person\") {\r\n            fstate.person = this.state.selectedDoc.attributes[l].subDocument\r\n            // fstate.fieldValue.Person = this.state.selectedDoc.attributes[l].subDocument.id\r\n          }\r\n        }\r\n      }\r\n      if (fstate.person === null && this.props.person !== undefined && this.props.person !== \"null\" && this.props.person !== null) {\r\n        personData = JSON.parse(this.props.person)\r\n        fstate.person = personData\r\n        fstate.fieldValue.Person = personData.id\r\n      }\r\n      if ((fstate.person === null || this.props.person !== \"null\") &&\r\n        this.props.Form.formName === \"TransferMedicalCertificateForm\"\r\n        && this.props.docList !== \"[]\") {\r\n        var docListData = JSON.parse(this.props.docList)\r\n        // console.log(\"docListData\", docListData)\r\n        for (let l = 0; l < docListData[0].attributes.length; l++) {\r\n          if (docListData[0].attributes[l].name === \"Person\") {\r\n            fstate.person = docListData[0].attributes[l].subDocument\r\n          }\r\n        }\r\n      }\r\n      // DISABLE 2 BLOCKS OF FORM /FROM INCOMING DATA\r\n      if (fstate.fieldValue[\"Occupation\"] !== \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\r\n        for (let i = 0; i < fstate.Form.sections.length; i++) {\r\n          if (fstate.Form.sections[i].name === \"HowToDoJob\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = false\r\n              fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false\r\n            }\r\n          }\r\n          else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = false\r\n              fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // SET DATE OF REGISTRATION DEFAULT CURRENT DAY\r\n      if (this.props.taskType === \"showRegForm\" || this.props.taskType === \"showChildRegForm\" ||\r\n        this.props.taskType === \"showDetailedForm\" || this.props.taskType === \"showChildDetailedForm\") {\r\n        if (fstate.fieldValue[\"Date\"] === undefined) {\r\n          let newDate = new Date()\r\n          let dd = String(newDate.getDate()).padStart(2, '0')\r\n          let mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\r\n          let yyyy = newDate.getFullYear()\r\n          let convertedDate = String(dd + '.' + mm + '.' + yyyy)\r\n          fstate.fieldValue[\"Date\"] = convertedDate\r\n        }\r\n      }\r\n      if (fstate.fieldValue[\"MseName\"] === undefined &&\r\n        this.state.Form.formName !== \"TransferMedicalCertificateForm\" &&\r\n        this.state.Form.formName !== \"AdultsDetailedSearchForm\" &&\r\n        this.state.Form.formName !== \"AdultsIPRSearchForm\" &&\r\n        this.state.Form.formName !== \"ChildDetailedSearchForm\" &&\r\n        this.state.Form.formName !== \"AdultsIPRSearchForm\" &&\r\n        this.state.Form.formName !== \"AdultsRegistrationSearchForm\"\r\n      ) {\r\n        fstate.fieldValue[\"MseName\"] = fstate.organizationId\r\n      }\r\n      this.setState(fstate)\r\n    }\r\n    catch (er) {\r\n      console.log(\"ERROR\", er)\r\n    }\r\n  }\r\n  async downloadDocument(type) {\r\n    this.setState({ download: type })\r\n  }\r\n  // Delete close component and delete its data from hash stared in home component\r\n  clearTabData(process_id) {\r\n    this.props.clearTabData(process_id)\r\n  }\r\n  // Check field regNoAct if it's exist in database, it should be unique\r\n  async checkForRegNoAct(commandJson, length) {\r\n    if (this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined) {\r\n      this.props.callSuccessToast(\"Проверка № Медакта\")\r\n      var RegNoAct = { attributes: [{ name: \"RegNoAct\", value: this.state.fieldValue[\"RegNoAct\"], type: \"Text\" }] }\r\n      console.log(\"BODY\", RegNoAct)\r\n      await fetch(\"api/Document/FilterDocumentsByDefId?defId=\" + this.state.Form.docDefId + \"&size=3&page=1&userId=\" + this.state.userId, {\r\n        headers: {\r\n          \"Accept\": \"application/x-www-form-urlencoded\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(RegNoAct),\r\n        // mode: 'no-cors'\r\n      })\r\n        .then(response => {\r\n          response.text().then(stringResponse => {\r\n            var document = JSON.parse(stringResponse)\r\n            console.log(\"RESPONSE\", document)\r\n            // this.sendFieldValues(commandJson)\r\n            if (document.length <= length) {\r\n              console.log(\"LENGTH\", document.length, length)\r\n              this.sendFieldValues(commandJson)\r\n              this.clearTabData(this.state.process_id)\r\n              this.props.callSuccessToast(\"Проверка завершена!\")\r\n            }\r\n            else {\r\n              this.swAlert(\"Гражданин с таким № акта уже существует!\")\r\n            }\r\n          })\r\n        })\r\n    }\r\n    else { this.props.callErrorToast(\"Заполните поле \\\"№ акта по МСЭК\\\"\") }\r\n  }\r\n  // Handle changing of person document fields if it is enabled for input and set values to local state\r\n  changeSubDocument = (name, value) => {\r\n    let subDoc = this.state.subDocument\r\n    subDoc[name] = value\r\n    this.setState({ subDocument: subDoc })\r\n    console.log(\"Person Data\", name, value)\r\n  }\r\n  // Returns random id\r\n  getUUID() {\r\n    const uuidv1 = require(\"uuid/v1\")\r\n    return uuidv1()\r\n  }\r\n  // Handling component changing without render all state, made for optimization\r\n  componentChange = (event) => {\r\n    console.log(\"COM CHANGE\", event.target.name, event.target.value)\r\n  }\r\n  // Handling component changing with render state, used onBlur of component, made for optimization\r\n  handleChange = (event) => {\r\n    // console.log(\"HANDLE TEXT CHANGE\", event.target.name, event.target.value)\r\n    let fieldValue = this.state.fieldValue\r\n    if (event.target.name === \"RegNoAct\") {\r\n      let newValue = \"\"\r\n      let regex = /[0-9-№]/\r\n      for (let key in event.target.value) {\r\n        if (regex.test(event.target.value[key]) === true) {\r\n          newValue = newValue + event.target.value[key]\r\n        }\r\n      }\r\n      fieldValue[event.target.name] = newValue\r\n      // console.log(\"newValue\", newValue, fieldValue)\r\n    }\r\n    else {\r\n      fieldValue[event.target.name] = event.target.value\r\n    }\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  // Controlling input in one field RegNoAct, create mask for inpur, field should accept only \"№\", \"-\" and all digits\r\n  regNoChange = (event) => {\r\n    // event.preventDefault()\r\n    var value = event.target.value.trim()\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = value\r\n    this.setState({ fieldValue: fieldValue })\r\n    // console.log(\"REGNOACT\", event.target.value)\r\n    // if(event.target.value === \"\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\"){\r\n    //   console.log(\"REGNO null\")\r\n    //   let fieldValue = this.state.fieldValue\r\n    //   fieldValue[event.target.name] = null\r\n    //   this.setState({fieldValue: fieldValue})\r\n    // }\r\n    // else{\r\n    //   for(let i=value.length; i>0; i--){\r\n    //     let lastChar = value.substring(i -1, i)\r\n    //     console.log(\"LAST\", lastChar)\r\n    //     if(lastChar !== '\\u2000'){\r\n    //       let fieldValue = this.state.fieldValue\r\n    //       fieldValue[event.target.name] = value\r\n    //       this.setState({fieldValue: fieldValue})\r\n    //       break\r\n    //     }\r\n    //     value = value.substring(0, value.length -1)\r\n    //   }\r\n    // }\r\n    // REGEX\r\n    // let regex = /[0-9-]/\r\n    // let lastChar = value.substring(value.length -1, value.length)\r\n    // console.log(\"LAST\", lastChar)\r\n    // // let chars = event.target.value.split('')\r\n    // // let char = chars.pop()\r\n\r\n    // if(!regex.test(lastChar)){\r\n    //   // value = chars.join('')\r\n    //   console.log(\"not valid\", lastChar)\r\n    // }\r\n    // else{\r\n    //   let fieldValue = this.state.fieldValue\r\n    //   fieldValue[event.target.name] = value\r\n    //   this.setState({fieldValue: fieldValue})\r\n    // }\r\n  }\r\n  // regNoKeyPress=(event)=>{\r\n  //   let x = event.charCode\r\n  //   console.log(\"CODE\", x)\r\n  // }\r\n  // getRegNoMask(){\r\n  //   let value = this.state.fieldValue[\"RegNoAct\"] !== undefined ? this.state.fieldValue[\"RegNoAct\"] : \"\"\r\n  //   let valueLength = value.length\r\n  //   console.log(\"VAL LEN\", valueLength)\r\n  //   let regex = /[1-9-]/\r\n  //   let mask = []\r\n  //   for(let i=0; i<valueLength; i++){\r\n  //     mask.push(regex)\r\n  //   }\r\n  //   // let mask=[/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/]\r\n  //   return mask\r\n  // }\r\n\r\n  // Handler that control input of components with type of integer\r\n  componentIntChange = (event) => {\r\n    // console.log(\"CHANGE\", event.target.name, event.target.value)\r\n    if (event.target.value > 2147483646) {\r\n      let value = event.target.value\r\n      let maxValue = value.substring(0, value.length - 1)\r\n      // console.log(\"SLICE\", value, maxValue)\r\n      let fieldValue = this.state.fieldValue\r\n      fieldValue[event.target.name] = maxValue\r\n      this.setState({ fieldValue: fieldValue })\r\n    }\r\n\r\n    // else{\r\n    //   let fieldValue = this.state.fieldValue\r\n    //   console.log(\"CHANGE\", event.target.name, event.target.value)\r\n    //   fieldValue[event.target.name] = event.target.value\r\n    //   this.setState({fieldValue: fieldValue})\r\n    // }\r\n  }\r\n  // Handler of select copmponet changes\r\n  handleSelectChange = (event) => {\r\n    let fstate = this.state\r\n    if (event.name === \"Occupation\") {\r\n      if (event.value === \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\r\n        for (let i = 0; i < fstate.Form.sections.length; i++) {\r\n          if (fstate.Form.sections[i].name === \"HowToDoJob\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = true\r\n            }\r\n          }\r\n          else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = true\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (event.value !== \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\r\n        for (let i = 0; i < fstate.Form.sections.length; i++) {\r\n          if (fstate.Form.sections[i].name === \"HowToDoJob\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = false\r\n              fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false\r\n            }\r\n          }\r\n          else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = false\r\n              fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    fstate.fieldValue[event.name] = event.value\r\n    this.setState(fstate)\r\n    console.log(`Option selected:`, event)\r\n  }\r\n  // 5 Hadlers that control changing of address data changing\r\n  // countryChange =(event) => {\r\n  //   let fieldValue = this.state.fieldValue\r\n  //   fieldValue[event.target.name] = event.target.value\r\n  //   fieldValue[\"Region\"] = null\r\n  //   fieldValue[\"District\"] = null\r\n  //   fieldValue[\"subDistrict\"] = null\r\n  //   fieldValue[\"Village\"] = null\r\n  //   console.log(\"Country selected\", event.target.name)\r\n  //   this.setState({fieldValue: fieldValue})\r\n  // }\r\n  regionChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    fieldValue[\"District\"] = null\r\n    fieldValue[\"subDistrict\"] = null\r\n    fieldValue[\"Village\"] = null\r\n    console.log(\"Region selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  districtChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    fieldValue[\"subDistrict\"] = null\r\n    fieldValue[\"Village\"] = null\r\n    console.log(\"District selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  subDistrictChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    fieldValue[\"Village\"] = null\r\n    console.log(\"District selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  villageChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    console.log(\"Village selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  // DateTime component change handler\r\n  handleDateTimeChange(date, name) {\r\n    let fieldValue = this.state.fieldValue\r\n    if (date !== null) {\r\n      var newDate = new Date(date)\r\n      var dd = String(newDate.getDate()).padStart(2, '0')\r\n      var mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\r\n      var yyyy = newDate.getFullYear()\r\n      var convertedDate = String(dd + '.' + mm + '.' + yyyy)\r\n      // console.log(\"CDATE\", convertedDate)\r\n      fieldValue[name] = convertedDate\r\n      this.setState({ fieldValue: fieldValue })\r\n    }\r\n    else {\r\n      fieldValue[name] = undefined\r\n      this.setState({ fieldValue: fieldValue })\r\n    }\r\n\r\n  }\r\n  // Convert date to approptiate format\r\n  parseDate(date) {\r\n    if (date !== undefined) {\r\n      var dd = date.substring(0, 2)\r\n      var mm = date.substring(3, 5)\r\n      var yyyy = date.substring(6, 10)\r\n      var convertedDate = String(yyyy + '-' + mm + '-' + dd)\r\n      var newDate = new Date(convertedDate) // \"2020-01-26\"\r\n      dd = String(newDate.getDate()).padStart(2, '0')\r\n      mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\r\n      yyyy = newDate.getFullYear()\r\n      convertedDate = yyyy + '-' + mm + '-' + dd\r\n    }\r\n    // console.log(\"DATE\", convertedDate)\r\n    return convertedDate\r\n  }\r\n  handCheckboxChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.checked\r\n    this.setState({ fieldValue: fieldValue })\r\n    // console.log(\"new checkbox status\", this.state.fieldValue[event.target.name])\r\n  }\r\n  // Get name of address by its code\r\n  getAddressData(code) {\r\n    for (var i = 0; i < this.state.SOAT.countries.length; i++) {\r\n      if (code === this.state.SOAT.countries[i].code) {\r\n        return this.state.SOAT.countries[i].name\r\n      }\r\n      else {\r\n        for (var j = 0; j < this.state.SOAT.countries[i].regions.length; j++) {\r\n          if (code === this.state.SOAT.countries[i].regions[j].code) {\r\n            return this.state.SOAT.countries[i].regions[j].name\r\n          }\r\n          else {\r\n            for (var k = 0; k < this.state.SOAT.countries[i].regions[j].districts.length; k++) {\r\n              if (code === this.state.SOAT.countries[i].regions[j].districts[k].code) {\r\n                return this.state.SOAT.countries[i].regions[j].districts[k].name\r\n              }\r\n              else {\r\n                if (this.state.SOAT.countries[i].regions[j].districts[k].subDistricts !== undefined) {\r\n                  for (var l = 0; l < this.state.SOAT.countries[i].regions[j].districts[k].subDistricts.length; l++) {\r\n                    if (code === this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].code) {\r\n                      return this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].name\r\n                    }\r\n                    else {\r\n                      if (this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages !== undefined) {\r\n                        for (var m = 0; m < this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages.length; m++) {\r\n                          if (code === this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages[m].code) {\r\n                            return this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages[m].name\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Collecting all field values and return as attributes\r\n  getFieldValues() {\r\n    var attributes = []\r\n    if (this.state.taskType === \"showIPRForm\" || this.state.taskType === \"showChildIPRForm\") {\r\n      console.log(\"IPR FORM\")\r\n      for (var key in this.state.fieldValue) {\r\n        if (key === \"AdultsMedicalCart\") {\r\n          attributes.push({\r\n            name: \"AdultsMedicalCart\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Doc\",\r\n          })\r\n        }\r\n        else if (key === \"IPRNo\") {\r\n          attributes.push({\r\n            name: \"IPRNo\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else {\r\n          for (var section = 0; section < this.state.Form.sections.length; section++) {\r\n            for (var item = 0; item < this.state.Form.sections[section].contents.length; item++) {\r\n              if (key === this.state.Form.sections[section].contents[item].name) {\r\n                if (this.state.Form.sections[section].contents[item].edit === true) {\r\n                  attributes.push({\r\n                    name: this.state.Form.sections[section].contents[item].name,\r\n                    value: this.state.fieldValue[key],\r\n                    type: this.state.Form.sections[section].contents[item].type,\r\n                  })\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else if (this.state.taskType === \"showIPRSearchForm\" || this.state.taskType === \"showChildIPRSearchForm\") {\r\n      var subDocumentAttributes = []\r\n      for (key in this.state.fieldValue) {\r\n        if (this.state.fieldValue[key] !== null && this.state.fieldValue[key] !== \"\") {\r\n          if (key === \"Country\") {\r\n            subDocumentAttributes.push({\r\n              name: \"Country\",\r\n              value: this.state.fieldValue[key],\r\n              type: \"Text\",\r\n            })\r\n          }\r\n          else if (key === \"Region\") {\r\n            subDocumentAttributes.push({\r\n              name: \"Region\",\r\n              value: this.state.fieldValue[key],\r\n              type: \"Text\",\r\n            })\r\n          }\r\n          else if (key === \"District\") {\r\n            subDocumentAttributes.push({\r\n              name: \"District\",\r\n              value: this.state.fieldValue[key],\r\n              type: \"Text\",\r\n            })\r\n          }\r\n        }\r\n        for (let section = 0; section < this.state.Form.sections.length; section++) {\r\n          for (let item = 0; item < this.state.Form.sections[section].contents.length; item++) {\r\n            if (key === this.state.Form.sections[section].contents[item].name) {\r\n              subDocumentAttributes.push({\r\n                name: this.state.Form.sections[section].contents[item].name,\r\n                value: this.state.fieldValue[key],\r\n                type: this.state.Form.sections[section].contents[item].type,\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n      attributes.push({\r\n        name: \"AdultsMedicalCart\",\r\n        type: \"Doc\",\r\n        docDef: this.state.Form.medicalCardDocDefId,\r\n        \"subDocument\": {\r\n          \"attributes\": subDocumentAttributes\r\n        }\r\n      })\r\n      if (Object.keys(this.state.subDocument).length !== 0) {\r\n        var subDocumentPersonAttributes = []\r\n        for (var key in this.state.subDocument) {\r\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\r\n            if (key === this.state.documentViewForm.attributes[i].name) {\r\n              subDocumentPersonAttributes.push({\r\n                name: this.state.documentViewForm.attributes[i].name,\r\n                value: this.state.subDocument[key],\r\n                type: this.state.documentViewForm.attributes[i].type,\r\n              })\r\n              console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key])\r\n            }\r\n          }\r\n        }\r\n        attributes.subDocumentAttributes.push({\r\n          name: \"Person\",\r\n          type: \"Doc\",\r\n          docDef: this.state.documentViewForm.docDefId,\r\n          \"subDocument\": {\r\n            \"attributes\": subDocumentPersonAttributes\r\n          }\r\n        })\r\n      }\r\n      console.log(\"IPRATRS\", attributes)\r\n    }\r\n    else {\r\n      // console.log(\"Fiel Values\", this.state.fieldValue)\r\n      for (key in this.state.fieldValue) {\r\n        if (key === \"Country\") {\r\n          attributes.push({\r\n            name: \"Country\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Region\") {\r\n          attributes.push({\r\n            name: \"Region\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"District\") {\r\n          attributes.push({\r\n            name: \"District\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"subDistrict\") {\r\n          attributes.push({\r\n            name: \"subDistrict\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Village\") {\r\n          attributes.push({\r\n            name: \"Village\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"ResidentialAddress\") {\r\n          attributes.push({\r\n            name: \"ResidentialAddress\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Phone\") {\r\n          attributes.push({\r\n            name: \"Phone\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Person\") {\r\n          attributes.push({\r\n            name: \"Person\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Doc\",\r\n          })\r\n        }\r\n\r\n        else {\r\n          for (section = 0; section < this.state.Form.sections.length; section++) {\r\n            for (item = 0; item < this.state.Form.sections[section].contents.length; item++) {\r\n              if (key === this.state.Form.sections[section].contents[item].name) {\r\n                attributes.push({\r\n                  name: this.state.Form.sections[section].contents[item].name,\r\n                  value: this.state.fieldValue[key],\r\n                  type: this.state.Form.sections[section].contents[item].type\r\n                })\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (Object.keys(this.state.subDocument).length !== 0) {\r\n        subDocumentAttributes = []\r\n        for (key in this.state.subDocument) {\r\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\r\n            if (key === this.state.documentViewForm.attributes[i].name) {\r\n              subDocumentAttributes.push({\r\n                name: this.state.documentViewForm.attributes[i].name,\r\n                value: this.state.subDocument[key],\r\n                type: this.state.documentViewForm.attributes[i].type,\r\n              })\r\n              console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key])\r\n            }\r\n          }\r\n        }\r\n        attributes.push({\r\n          name: \"Person\",\r\n          type: \"Doc\",\r\n          docDef: this.state.documentViewForm.docDefId,\r\n          \"subDocument\": {\r\n            \"attributes\": subDocumentAttributes\r\n          }\r\n        })\r\n      }\r\n    }\r\n    // console.log(\"ATTR\", attributes)\r\n    return attributes\r\n  }\r\n  getFieldValuesToSearch() {\r\n    var attributes = []\r\n    for (var key in this.state.fieldValue) {\r\n      if (this.state.fieldValue[key] !== null && this.state.fieldValue[key] !== \"\") { //&& this.state.fieldValue[key] !== \"NaN.NaN.NaN\"\r\n        if (key === \"Country\") {\r\n          attributes.push({\r\n            name: \"Country\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Region\") {\r\n          attributes.push({\r\n            name: \"Region\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"District\") {\r\n          attributes.push({\r\n            name: \"District\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"subDistrict\") {\r\n          attributes.push({\r\n            name: \"subDistrict\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Village\") {\r\n          attributes.push({\r\n            name: \"Village\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"ResidentialAddress\") {\r\n          attributes.push({\r\n            name: \"ResidentialAddress\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Phone\") {\r\n          attributes.push({\r\n            name: \"Phone\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Person\") {\r\n          attributes.push({\r\n            name: \"Person\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Doc\",\r\n          })\r\n        }\r\n\r\n        else {\r\n          for (var section = 0; section < this.state.Form.sections.length; section++) {\r\n            for (var item = 0; item < this.state.Form.sections[section].contents.length; item++) {\r\n              if (key === this.state.Form.sections[section].contents[item].name) {\r\n                attributes.push({\r\n                  name: this.state.Form.sections[section].contents[item].name,\r\n                  value: this.state.fieldValue[key],\r\n                  type: this.state.Form.sections[section].contents[item].type\r\n                })\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (Object.keys(this.state.subDocument).length !== 0) {\r\n      var subDocumentAttributes = []\r\n      for (key in this.state.subDocument) {\r\n        if (this.state.subDocument[key] !== null && this.state.subDocument[key] !== \"\") { //&& this.state.subDocument[key] !== \"NaN.NaN.NaN\"\r\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\r\n            if (key === this.state.documentViewForm.attributes[i].name) {\r\n              subDocumentAttributes.push({\r\n                name: this.state.documentViewForm.attributes[i].name,\r\n                value: this.state.subDocument[key],\r\n                type: this.state.documentViewForm.attributes[i].type,\r\n              })\r\n              // console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key])\r\n            }\r\n          }\r\n        }\r\n      }\r\n      attributes.push({\r\n        name: \"Person\",\r\n        type: \"Doc\",\r\n        docDef: this.state.documentViewForm.docDefId,\r\n        \"subDocument\": {\r\n          \"attributes\": subDocumentAttributes\r\n        }\r\n      })\r\n    }\r\n    return attributes\r\n  }\r\n  // checkForEmptyFields(commandJson, length) {\r\n  //   //  Adulds Medakt || Reg Form\r\n  //   if (this.state.taskType === \"showRegForm\" || this.state.taskType === \"showDetailedForm\") {\r\n  //     // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\r\n  //     if (this.state.fieldValue[\"Country\"] !== null && this.state.fieldValue[\"Country\"] !== undefined) {\r\n  //       if (this.state.fieldValue[\"Region\"] !== null && this.state.fieldValue[\"Region\"] !== undefined) {\r\n  //         if (this.state.fieldValue[\"EducationAct\"] !== null && this.state.fieldValue[\"EducationAct\"] !== undefined) {\r\n  //           if (this.state.fieldValue[\"Occupation\"] !== null && this.state.fieldValue[\"Occupation\"] !== undefined) {\r\n  //             if (this.state.fieldValue[\"ExaminationPrRe\"] !== null && this.state.fieldValue[\"ExaminationPrRe\"] !== undefined) {\r\n  //               if (this.state.fieldValue[\"ExaminationPlace\"] !== null && this.state.fieldValue[\"ExaminationPlace\"] !== undefined) {\r\n  //                 if (this.state.fieldValue[\"PensionStatus\"] !== null && this.state.fieldValue[\"PensionStatus\"] !== undefined) {\r\n  //                   if (\r\n  //                     (this.state.fieldValue[\"goal1\"] !== false && this.state.fieldValue[\"goal1\"] !== undefined && this.state.fieldValue[\"goal1\"] !== \"False\") ||\r\n  //                     (this.state.fieldValue[\"goal2\"] !== false && this.state.fieldValue[\"goal2\"] !== undefined && this.state.fieldValue[\"goal2\"] !== \"False\") ||\r\n  //                     (this.state.fieldValue[\"goal3\"] !== false && this.state.fieldValue[\"goal3\"] !== undefined && this.state.fieldValue[\"goal3\"] !== \"False\") ||\r\n  //                     (this.state.fieldValue[\"goal4\"] !== null && this.state.fieldValue[\"goal4\"] !== undefined && this.state.fieldValue[\"goal4\"] !== \"False\") ||\r\n  //                     (this.state.fieldValue[\"goal5\"] !== false && this.state.fieldValue[\"goal5\"] !== undefined && this.state.fieldValue[\"goal5\"] !== \"False\") ||\r\n  //                     (this.state.fieldValue[\"goal6\"] !== false && this.state.fieldValue[\"goal6\"] !== undefined && this.state.fieldValue[\"goal6\"] !== \"False\") ||\r\n  //                     (this.state.fieldValue[\"goalAnother\"] !== \"\" && this.state.fieldValue[\"goalAnother\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"PlaceOfWork\"] !== \"\" && this.state.fieldValue[\"PlaceOfWork\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"Wage\"] !== \"\" && this.state.fieldValue[\"Wage\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"PensionAmount\"] !== \"\" && this.state.fieldValue[\"PensionAmount\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"Profession\"] !== \"\" && this.state.fieldValue[\"Profession\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined)\r\n  //                   ) {\r\n  //                     if (\r\n  //                       (this.state.fieldValue[\"Good\"] !== false && this.state.fieldValue[\"Good\"] !== undefined && this.state.fieldValue[\"Good\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"Satisfactory\"] !== false && this.state.fieldValue[\"Satisfactory\"] !== undefined && this.state.fieldValue[\"Satisfactory\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"goUnsatisfactoryal1\"] !== false && this.state.fieldValue[\"Unsatisfactory\"] !== undefined && this.state.fieldValue[\"Unsatisfactory\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"SeparateApartment\"] !== false && this.state.fieldValue[\"SeparateApartment\"] !== undefined && this.state.fieldValue[\"SeparateApartment\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"OwnHouse\"] !== false && this.state.fieldValue[\"OwnHouse\"] !== undefined && this.state.fieldValue[\"OwnHouse\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"Dormitory\"] !== false && this.state.fieldValue[\"Dormitory\"] !== undefined && this.state.fieldValue[\"Dormitory\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"LivingAreaRemovable\"] !== false && this.state.fieldValue[\"LivingAreaRemovable\"] !== undefined && this.state.fieldValue[\"LivingAreaRemovable\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"NoOwnAccommodation\"] !== false && this.state.fieldValue[\"NoOwnAccommodation\"] !== undefined && this.state.fieldValue[\"NoOwnAccommodation\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"Additionally\"] !== false && this.state.fieldValue[\"Additionally\"] !== undefined && this.state.fieldValue[\"Additionally\"] !== \"False\")\r\n  //                     ) {\r\n  //                       // if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\r\n  //                       if (this.state.taskType === \"showDetailedForm\" || this.state.taskType === \"showChildDetailedForm\") {\r\n  //                         if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\r\n  //                           if (this.state.fieldValue[\"ExamOfDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamOfDate\"] !== undefined) {\r\n  //                             this.checkForRegNoAct(commandJson, length)\r\n  //                             // this.sendFieldValues(commandJson)\r\n  //                           } else this.props.callErrorToast(\"Заполните поле \\\"Дата проведения экспертизы\\\"\")\r\n  //                         } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\r\n  //                       } else this.checkForRegNoAct(commandJson, length)\r\n  //                       // } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\r\n  //                     } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Жилищно-бытовые условия\\\"\")\r\n  //                   } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Цель освидетельствования\\\"\")\r\n  //                 } else this.props.callErrorToast(\"Заполните поле \\\"Получает пенсию\\\"\")\r\n  //               } else this.props.callErrorToast(\"Заполните поле \\\"Место освидетельствования\\\"\")\r\n  //             } else this.props.callErrorToast(\"Заполните поле \\\"Освидетельствование\\\"\")\r\n  //           } else this.props.callErrorToast(\"Заполните поле \\\"Род деятельности\\\"\")\r\n  //         } else this.props.callErrorToast(\"Заполните поле \\\"Образование\\\"\")\r\n  //       } else this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\")\r\n  //     } else this.props.callErrorToast(\"Заполните поле \\\"Страна\\\"\")\r\n  //     // } else this.props.callErrorToast(\"Заполните поле \\\"№ акта по МСЭ\\\"\")\r\n  //   }\r\n  //   // Child Medakt || Reg Form\r\n  //   else if (this.state.taskType === \"showChildRegForm\" || this.state.taskType === \"showChildDetailedForm\") {\r\n  //     // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\r\n  //     if (this.state.fieldValue[\"Country\"] !== null && this.state.fieldValue[\"Country\"] !== undefined) {\r\n  //       if (this.state.fieldValue[\"Region\"] !== null && this.state.fieldValue[\"Region\"] !== undefined) {\r\n  //         if (this.state.fieldValue[\"EducationAct\"] !== null && this.state.fieldValue[\"EducationAct\"] !== undefined) {\r\n  //           if (this.state.fieldValue[\"ExaminationPrRe\"] !== null && this.state.fieldValue[\"ExaminationPrRe\"] !== undefined) {\r\n  //             if (this.state.fieldValue[\"Examination4\"] !== null && this.state.fieldValue[\"Examination4\"] !== undefined) {\r\n  //               if (this.state.fieldValue[\"PensionStatus\"] !== null && this.state.fieldValue[\"PensionStatus\"] !== undefined) {\r\n  //                 if (\r\n  //                   (this.state.fieldValue[\"goal1\"] !== false && this.state.fieldValue[\"goal1\"] !== undefined && this.state.fieldValue[\"goal1\"] !== \"False\") ||\r\n  //                   (this.state.fieldValue[\"goal2\"] !== false && this.state.fieldValue[\"goal2\"] !== undefined && this.state.fieldValue[\"goal2\"] !== \"False\") ||\r\n  //                   (this.state.fieldValue[\"goal3\"] !== false && this.state.fieldValue[\"goal3\"] !== undefined && this.state.fieldValue[\"goal3\"] !== \"False\") ||\r\n  //                   (this.state.fieldValue[\"goal4\"] !== null && this.state.fieldValue[\"goal4\"] !== undefined && this.state.fieldValue[\"goal4\"] !== \"False\") ||\r\n  //                   (this.state.fieldValue[\"goal5\"] !== false && this.state.fieldValue[\"goal5\"] !== undefined && this.state.fieldValue[\"goal5\"] !== \"False\") ||\r\n  //                   (this.state.fieldValue[\"goal6\"] !== false && this.state.fieldValue[\"goal6\"] !== undefined && this.state.fieldValue[\"goal6\"] !== \"False\") ||\r\n  //                   (this.state.fieldValue[\"goalAnother\"] !== \"\" && this.state.fieldValue[\"goalAnother\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"PlaceOfWork\"] !== \"\" && this.state.fieldValue[\"PlaceOfWork\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"Wage\"] !== 0 && this.state.fieldValue[\"Wage\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"PensionAmount\"] !== 0 && this.state.fieldValue[\"PensionAmount\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"Profession\"] !== \"\" && this.state.fieldValue[\"Profession\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined)\r\n  //                 ) {\r\n  //                   if (this.state.taskType === \"showChildDetailedForm\") {\r\n  //                     if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\r\n  //                       if (this.state.fieldValue[\"ExamOfDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamOfDate\"] !== undefined) {\r\n  //                         this.checkForRegNoAct(commandJson, length)\r\n  //                         // this.sendFieldValues(commandJson)\r\n  //                       } else this.props.callErrorToast(\"Заполните поле \\\"Дата проведения экспертизы\\\"\")\r\n  //                     } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\r\n  //                   } else this.checkForRegNoAct(commandJson, length) // this.sendFieldValues(commandJson)\r\n  //                 } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Цель освидетельствования\\\"\")\r\n  //               } else this.props.callErrorToast(\"Заполните поле \\\"Получает пенсию\\\"\")\r\n  //             } else this.props.callErrorToast(\"Заполните поле \\\"Место освидетельствования\\\"\")\r\n  //           } else this.props.callErrorToast(\"Заполните поле \\\"Освидетельствование\\\"\")\r\n  //         } else this.props.callErrorToast(\"Заполните поле \\\"Образование\\\"\")\r\n  //       } else this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\")\r\n  //     } else this.props.callErrorToast(\"Заполните поле \\\"Страна\\\"\")\r\n  //     // }else this.swAlert(\"Заполните поле \\\"№ акта по МСЭ\\\"\")\r\n  //   }\r\n  //   else {\r\n  //     this.sendFieldValues(commandJson)\r\n  //     this.clearTabData(this.state.process_id)\r\n  //   }\r\n  // }\r\n  checkForRequieredFields() {\r\n    let checkedSuccessfuly = null\r\n    let f = this.state.Form\r\n    let fv = this.state.fieldValue\r\n    let tt = this.state.taskType\r\n    if (tt === \"showRegForm\" || tt === \"showDetailedForm\" || tt === \"showChildRegForm\" || tt === \"showChildDetailedForm\") {\r\n      // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\r\n      if (fv[\"Region\"] !== null && fv[\"Region\"] !== undefined) {\r\n        checkedSuccessfuly = true\r\n      }\r\n      else {\r\n        this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\")\r\n        return false\r\n      }\r\n    }\r\n    for (let s = 0; s < f.sections.length; s++) {\r\n      if (f.sections[s].required === true) {\r\n        for (let c = 0; c < f.sections[s].contents.length; c++) {\r\n          let fieldName = f.sections[s].contents[c].name\r\n          console.log(\"CH1\", fieldName, f.sections[s].contents[c].required)\r\n          if (fv[fieldName] === undefined || fv[fieldName] === null || fv[fieldName] === \"NaN.NaN.NaN\" ||\r\n            fv[fieldName] === \"\" || fv[fieldName] === \"01.01.1970\") {\r\n            checkedSuccessfuly = false\r\n          }\r\n          else {\r\n            checkedSuccessfuly = true\r\n            break\r\n            // return checkedSuccessfuly\r\n          }\r\n        }\r\n        if (checkedSuccessfuly === false) {\r\n          this.props.callErrorToast(\"Заполните одно из полей секции \\\"\" + f.sections[s].label + \"\\\"\", \"warning\")\r\n        }\r\n      }\r\n      else {\r\n        for (let c = 0; c < f.sections[s].contents.length; c++) {\r\n          let fieldName = f.sections[s].contents[c].name\r\n          console.log(\"CH2\", fieldName, f.sections[s].contents[c].name)\r\n          if (f.sections[s].contents[c].required === true) {\r\n            if (fv[fieldName] === undefined || fv[fieldName] === null || fv[fieldName] === \"NaN.NaN.NaN\" || fv[fieldName] === \"\" ||\r\n              fv[fieldName] === \"\" || fv[fieldName] === \"01.01.1970\") {\r\n              checkedSuccessfuly = false\r\n              this.props.callErrorToast(\"Внимание заполните поле \\\"\" + f.sections[s].contents[c].label + \"\\\"\", \"warning\")\r\n              // break\r\n              return false\r\n            }\r\n            else {\r\n              checkedSuccessfuly = true\r\n            }\r\n          }\r\n          else {\r\n            checkedSuccessfuly = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return checkedSuccessfuly\r\n  }\r\n  // Collect id of all documents that are in the local state\r\n  getDocsIdToSign() {\r\n    var docsId = []\r\n    docsId.push(this.state.selectedDoc.id)\r\n    if (this.state.docListIPR !== null) {\r\n      for (var i = 0; i < this.state.docListIPR.length; i++) {\r\n        docsId.push(this.state.docListIPR[i].id)\r\n      }\r\n    }\r\n    return docsId\r\n  }\r\n  // Return person full age\r\n  getPersonAge() {\r\n    for (let i = 0; i < this.state.person.attributes.length; i++) {\r\n      if (this.state.person.attributes[i].name === \"Date_of_Birth\") {\r\n        let birthday = new Date(this.parseDate(this.state.person.attributes[i].value))\r\n        let ageDifMs = Date.now() - birthday.getTime()\r\n        let ageDate = new Date(ageDifMs); // miliseconds from epoch\r\n        let fullAge = Math.abs(ageDate.getUTCFullYear() - 1970)\r\n        console.log(\"AGE\", fullAge)\r\n        return fullAge\r\n      }\r\n    }\r\n  }\r\n  // Return label of select by it's id from fieldValue\r\n  getEnumValueTextByValue(value) {\r\n    for (let i = 0; i < this.state.enumData.length; i++) {\r\n      for (let l = 0; l < this.state.enumData[i].data.length; l++) {\r\n        if (this.state.enumData[i].data[l].Id === value) {\r\n          return this.state.enumData[i].data[l].Text\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Set new organization ID to all document in local state, prepare them to transfer to another Mse\r\n  setOrgIdToMedakt() {\r\n    let fstate = this.state\r\n    var newDocList = []\r\n    // console.log(\"DOCLIST CUR\" , fstate.docList)\r\n    for (let i = 0; i < fstate.docList.length; i++) {\r\n      newDocList.push({ id: fstate.docList[i].id, attributes: [] })\r\n      for (let l = 0; l < fstate.docList[i].attributes.length; l++) {\r\n        if (fstate.docList[i].attributes[l].name === \"MseName\") {\r\n          let newItem = {\r\n            name: fstate.docList[i].attributes[l].name,\r\n            type: fstate.docList[i].attributes[l].type,\r\n            value: fstate.fieldValue[\"MseName\"],\r\n            enumValueText: this.getEnumValueTextByValue(this.state.fieldValue[\"MseName\"]),\r\n          }\r\n          newDocList[i].attributes.push(newItem)\r\n        }\r\n        else {\r\n          if (fstate.docList[i].attributes[l].name !== \"State\" && fstate.docList[i].attributes[l].value !== null) {\r\n            let newItem = {\r\n              name: fstate.docList[i].attributes[l].name,\r\n              type: fstate.docList[i].attributes[l].type,\r\n              value: fstate.docList[i].attributes[l].value\r\n            }\r\n            newDocList[i].attributes.push(newItem)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    fstate.docList = newDocList\r\n    var newDocListIPR = []\r\n    for (let i = 0; i < fstate.docListIPR.length; i++) {\r\n      newDocListIPR.push({ id: fstate.docListIPR[i].id, attributes: [] })\r\n      for (let l = 0; l < fstate.docListIPR[i].attributes.length; l++) {\r\n        if (fstate.docListIPR[i].attributes[l].name !== \"State\" && fstate.docListIPR[i].attributes[l].value !== null) {\r\n          var newItem = {\r\n            value: fstate.docListIPR[i].attributes[l].value,\r\n            name: fstate.docListIPR[i].attributes[l].name,\r\n            type: fstate.docListIPR[i].attributes[l].type,\r\n          }\r\n          newDocListIPR[i].attributes.push(newItem)\r\n        }\r\n      }\r\n    }\r\n    fstate.docListIPR = newDocListIPR\r\n    this.setState(fstate)\r\n    // console.log(\"DOCLIST\", JSON.stringify(this.state.docList))\r\n    // console.log(\"DOCLISTIPR\", JSON.stringify(this.state.docListIPR))\r\n  }\r\n  // Main button click handler\r\n  async buttonClick(name) {\r\n    console.log(\"Butt\", name)\r\n    if (name === \"createDocument\") {\r\n      let createDocument = { attributes: this.getFieldValues() }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"createDocument\" },\r\n          doc: { value: JSON.stringify(createDocument) },\r\n          docDefId: { value: this.state.Form.docDefId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole }\r\n        }\r\n      }\r\n      console.log(\"button createDocument: \", commandJson)\r\n      let checkResult = this.checkForRequieredFields()\r\n      if (checkResult === true) {\r\n        this.sendFieldValues(commandJson)\r\n        this.clearTabData(this.state.process_id)\r\n      }\r\n      // this.checkForEmptyFields(commandJson, 0)\r\n    }\r\n    else if (name === \"updateDocument\") {\r\n      let updateDocument = { attributes: this.getFieldValues() }\r\n      let filterIPR = {\r\n        attributes: [\r\n          {\r\n            name: \"AdultsMedicalCart\",\r\n            value: this.state.docId,\r\n            type: \"Doc\"\r\n          }\r\n        ]\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"updateDocument\" },\r\n          doc: { value: JSON.stringify(updateDocument) },\r\n          filterIPR: { value: JSON.stringify(filterIPR) },\r\n          docDefId: { value: this.state.Form.docDefId },\r\n          docId: { value: this.state.docId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole }\r\n        }\r\n      }\r\n      console.log(\"button updateDocument: \", commandJson)\r\n      let checkResult = this.checkForRequieredFields()\r\n      if (checkResult === true) {\r\n        console.log(\"FV\", this.state.fieldValue)\r\n        this.sendFieldValues(commandJson)\r\n        this.clearTabData(this.state.process_id)\r\n      }\r\n      // this.checkForEmptyFields(commandJson, 1)\r\n      // this.sendFieldValues(commandJson)\r\n    }\r\n    else if (name === \"findDocument\") {\r\n      let filterDocument = { attributes: this.getFieldValuesToSearch() }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        docDefId: this.state.Form.docDefId,\r\n        variables: {\r\n          userAction: { value: \"findDocument\" },\r\n          doc: { value: JSON.stringify(filterDocument) },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole },\r\n          size: { value: this.state.size },\r\n          page: { value: 1 }\r\n        }\r\n      }\r\n      console.log(\"button findDocument: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"findIPR\") {\r\n      let filterDocument = {\r\n        attributes: [\r\n          {\r\n            name: \"AdultsMedicalCart\",\r\n            type: \"Doc\",\r\n            docDef: this.state.Form.medicalCardDocDefId,\r\n            subDocument: { attributes: this.getFieldValuesToSearch() }\r\n          }\r\n        ]\r\n\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        docDefId: this.state.Form.docDefId,\r\n        variables: {\r\n          userAction: { value: \"findDocument\" },\r\n          doc: { value: JSON.stringify(filterDocument) },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole },\r\n          size: { value: this.state.size },\r\n          page: { value: this.state.page }\r\n        }\r\n      }\r\n      console.log(\"button findIPR: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"editDocument\") {\r\n      let editDocument = { attributes: this.getFieldValues() }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"editDocument\" },\r\n          doc: { value: JSON.stringify(editDocument) },\r\n          docId: { value: this.state.docId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole }\r\n        }\r\n      }\r\n      console.log(\"button editDocument: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"reexamination\") {\r\n      let updateDocument = { attributes: this.getFieldValues() }\r\n      let age = this.getPersonAge()\r\n      let Adult = (age >= 18) ? \"True\" : \"False\"\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"reexamination\" },\r\n          doc: { value: JSON.stringify(updateDocument) },\r\n          docId: { value: this.state.docId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole },\r\n          adult: { value: Adult }\r\n        }\r\n      }\r\n      console.log(\"button reexamination: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"medakt\") {\r\n      // let updateDocument = {attributes: this.getFieldValues()}\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"medakt\" },\r\n          docId: { value: this.state.docId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole }\r\n        }\r\n      }\r\n      console.log(\"button Medakt: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"ipr\") {\r\n      // if (this.state.docListIPR !== null && this.state.docListIPR !== \"null\") {\r\n      //   if (this.state.docListIPR.length > 0) {\r\n      //     this.props.callErrorToast(\"Данный Медакт уже имеет ИПР\")\r\n      //   }\r\n      // }\r\n      if (this.state.docListIPR === null || this.state.docListIPR === \"null\" || this.state.docListIPR.length === 0) {\r\n        let commandJson =\r\n        {\r\n          commandType: \"completeTask\",\r\n          session_id: this.state.session_id,\r\n          process_id: this.state.process_id,\r\n          taskID: this.state.taskID,\r\n          variables: {\r\n            userAction: { value: \"ipr\" },\r\n            docId: { value: this.state.docId },\r\n            userId: { value: this.state.userId },\r\n            userRole: { value: this.state.userRole }\r\n          }\r\n        }\r\n        console.log(\"button IPR: \", commandJson)\r\n        this.sendFieldValues(commandJson)\r\n        this.clearTabData(this.state.process_id)\r\n      }\r\n      else {\r\n        this.props.callErrorToast(\"Данный Медакт уже имеет ИПР!\")\r\n      }\r\n\r\n    }\r\n    else if (name === \"deleteDocument\") {\r\n      swal({\r\n        text: \"Вы точно хотите удалить этот документ?\",\r\n        icon: \"warning\",\r\n        buttons: { yes: \"Да\", no: \"Нет\" },\r\n        dangerMode: true,\r\n      })\r\n        .then((click) => {\r\n          if (click === \"yes\") {\r\n            let commandJson =\r\n            {\r\n              commandType: \"completeTask\",\r\n              session_id: this.state.session_id,\r\n              process_id: this.state.process_id,\r\n              taskID: this.state.taskID,\r\n              variables: {\r\n                userAction: { value: \"deleteDocument\" },\r\n                docId: { value: this.state.docId },\r\n                userId: { value: this.state.userId },\r\n                userRole: { value: this.state.userRole }\r\n              }\r\n            }\r\n            console.log(\"button deleteDocument: \", commandJson)\r\n            this.sendFieldValues(commandJson)\r\n            this.clearTabData(this.state.process_id)\r\n          }\r\n        })\r\n    }\r\n    else if (name === \"signDocument\") {\r\n      let docsToSign = {\r\n        docIdList: this.getDocsIdToSign(),\r\n        stateTypeId: \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\"\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"signDocument\" },\r\n          doc: { value: JSON.stringify(docsToSign) }\r\n          // doc: {\r\n          //   value: {\r\n          //     docIdList: this.getDocsIdToSign(),\r\n          //     stateTypeId: \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\"\r\n          //   }\r\n          // }\r\n        }\r\n      }\r\n      console.log(\"button signDocument: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"registerDocument\") {\r\n      let docsToRegister = {\r\n        docIdList: this.getDocsIdToSign(),\r\n        stateTypeId: \"C1414D0C-417A-45AB-8B57-01D30A567F08\"\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"registerDocument\" },\r\n          doc: { value: JSON.stringify(docsToRegister) }\r\n        }\r\n      }\r\n      console.log(\"button registerDocument: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"showStatusSelectingForm\") {\r\n\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"showStatusSelectingForm\" },\r\n          doc: {\r\n            value: JSON.stringify({\r\n              docIdList: this.getDocsIdToSign(),\r\n              stateTypeId: \"\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n      console.log(\"button showStatusSelectingForm: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n\r\n    }\r\n    else if (name === \"setNewState\") {\r\n      if (this.state.fieldValue[\"StatusName\"] !== null && this.state.fieldValue[\"StatusName\"] !== undefined) {\r\n        let states = {\r\n          \"29a5cf05-30de-45b9-8526-69de5ea8ab12\": \"a9e360f0-eed1-4ff6-9ab8-e4255c62ce4a\", // умер\r\n          \"6a0f2699-eb53-4175-ac07-71deb84ae641\": \"10a96e4b-df5d-4f55-9d81-83f9e3e51de5\", // приостановлена инвалидность \r\n          \"3d2dd30f-3ab0-439f-a8dd-149431af67be\": \"d203372c-236b-4b3e-953a-11f09a4aca61\", // истекший срок инвалидности\r\n          \"b042e77b-9a12-47f1-a6d2-cc85e9029e61\": \"c9cfe461-e822-4f97-b34d-9312f8917fa9\", // переехал за переделами рт\r\n          \"c5f3563c-688f-44f1-9c01-70d190ae9edb\": \"1fa96e5b-908f-4c57-bc4a-b61423951081\", // перешел на возрастную пенсию\r\n          \"d5e1a3aa-dfb3-4c49-8360-c1278e70429f\": \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\", // вернуть в подписанные\r\n        }\r\n        // console.log(\"ST\", this.state.fieldValue[\"StatesName\"]);\r\n        let commandJson =\r\n        {\r\n          commandType: \"completeTask\",\r\n          process_id: this.state.process_id,\r\n          session_id: this.state.session_id,\r\n          taskID: this.state.taskID,\r\n          variables: {\r\n            userAction: { value: \"setNewState\" },\r\n            newState: { value: states[this.state.fieldValue[\"StatusName\"]] }\r\n          }\r\n        }\r\n        console.log(\"button setNewState: \", commandJson)\r\n        this.sendFieldValues(commandJson)\r\n        this.clearTabData(this.state.process_id)\r\n      }\r\n      else { this.props.callErrorToast(\"Заполните поле \\\"Статус\\\"\") }\r\n    }\r\n    else if (name === \"setNewStateChild\") {\r\n      let states = {\r\n        \"adcb9640-51d0-4952-b196-27e87bb28d31\": \"10a96e4b-df5d-4f55-9d81-83f9e3e51de5\", // приостановлена инвалидность \r\n        \"a61fcb5d-e858-4183-b1cd-1fef00c6b4bc\": \"d203372c-236b-4b3e-953a-11f09a4aca61\", // истекший срок инвалидности\r\n        \"184e3fac-a6b6-4c60-89a8-517862ecd9c4\": \"c9cfe461-e822-4f97-b34d-9312f8917fa9\", // переехал за переделами рт          \r\n        \"05be1899-8d41-4dfd-ae72-41cba4aa9223\": \"a9e360f0-eed1-4ff6-9ab8-e4255c62ce4a\", // умер\r\n      }\r\n      // console.log(\"ST\", this.state.fieldValue[\"StatesName\"]);\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"setNewStateChild\" },\r\n          newState: { value: states[this.state.fieldValue[\"StatesName\"]] }\r\n        }\r\n      }\r\n      console.log(\"button setNewStateChild: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"setStateDied\") {\r\n      let docsToSetState = {\r\n        docIdList: this.getDocsIdToSign(),\r\n        stateTypeId: \"A9E360F0-EED1-4FF6-9AB8-E4255C62CE4A\"\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"setStateDied\" },\r\n          doc: { value: JSON.stringify(docsToSetState) }\r\n          // doc: {\r\n          //   value: {\r\n          //     docIdList: this.getDocsIdToSign(),\r\n          //     stateTypeId: \"A9E360F0-EED1-4FF6-9AB8-E4255C62CE4A\"\r\n          //   }\r\n          // }\r\n        }\r\n      }\r\n      console.log(\"button setStateDied: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"backToMedakt\") {\r\n      let Document = {\r\n        attributes: [\r\n          {\r\n            name: \"AdultsMedicalCart\",\r\n            value: this.state.fieldValue[\"AdultsMedicalCart\"],\r\n            type: \"Doc\"\r\n          }]\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"backToMedakt\" },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole },\r\n          docDefId: { value: this.state.Form.docDefId },\r\n          doc: { value: JSON.stringify(Document) },\r\n          docId: { value: this.state.fieldValue[\"AdultsMedicalCart\"] },\r\n          size: { value: 10 },\r\n          page: { value: 1 }\r\n        }\r\n      }\r\n      console.log(\"button backToMedakt: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"transferDocuments\") {\r\n      if (Object.keys(this.state.docList).length !== 0) {\r\n        var age = this.getPersonAge()\r\n        console.log(\"AGE\", age)\r\n        if (age >= 18) {\r\n          var docDefId = this.state.Form.adultsMedaktDocDefId\r\n        }\r\n        else if (age < 18) {\r\n          var docDefId = this.state.Form.childMedaktDocDefId\r\n        }\r\n        this.setOrgIdToMedakt()\r\n\r\n        let commandJson =\r\n        {\r\n          commandType: \"transferDocuments\",\r\n          session_id: this.state.session_id,\r\n          process_id: this.state.process_id,\r\n          taskID: this.state.taskID,\r\n          medaktDocDefId: docDefId,\r\n          IPRDocDefId: this.state.IPRGridForm.docDefId,\r\n          medakts: JSON.stringify(this.state.docList),\r\n          IPR: JSON.stringify(this.state.docListIPR),\r\n          userId: this.state.userId,\r\n          userRole: this.state.userRole\r\n        }\r\n        if (this.state.fieldValue[\"MseName\"] !== null && this.state.fieldValue[\"MseName\"] !== undefined) {\r\n          console.log(\"button transfeDocuments: \", commandJson)\r\n          this.sendFieldValues(commandJson)\r\n          this.clearTabData(this.state.process_id)\r\n        }\r\n        else {\r\n          this.props.callErrorToast(\"Выберите МСЭК для передачи данных\")\r\n        }\r\n      }\r\n      else this.props.callErrorToast(\"Нет данных для передачи\")\r\n    }\r\n    else if (name === \"downloadMemo\") {\r\n      this.downloadDocument(\"downloadPDF\")\r\n    }\r\n    else if (name === \"viewRegForm\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"viewRegForm\" },\r\n          userId: { value: this.state.userId },\r\n          size: { value: 10 },\r\n          page: { value: 1 }\r\n        }\r\n      }\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"acceptComplaint\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"acceptComplaint\" },\r\n        }\r\n      }\r\n      console.log(\"button acceptComplaint: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"rejectComplaint\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"rejectComplaint\" },\r\n        }\r\n      }\r\n      console.log(\"button rejectComplaint: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"downloadMedakt\") {\r\n      if (this.state.fieldValue.State !== null && this.state.fieldValue.State !== undefined) {\r\n        this.props.callSuccessToast(\"Выгрузка начата дождитесь окончания процедуры!\")\r\n        let url = \"api/ExportDataToXlsx/ExportChildByStatus?state=\" + this.state.fieldValue.State\r\n        let age = \"(Детский)\"\r\n        if (this.state.taskType === \"showDownloadAdultsMedaktStatesSelectingForm\") {\r\n          url = \"/api/ExportDataToXlsx/ExportGrownByStatus?state=\" + this.state.fieldValue.State\r\n          age = \"(Взрослый)\"\r\n        }\r\n        var requestOptions = {\r\n          method: 'GET',\r\n          redirect: 'follow'\r\n        }\r\n\r\n        await fetch(url, requestOptions)\r\n          .then(response => response.blob())\r\n          .then(bl => {\r\n            console.log(\"RES\", bl)\r\n\r\n            var docUrl = window.URL.createObjectURL(bl)\r\n            var a = document.createElement('a')\r\n            a.href = docUrl\r\n            a.download = `Выгрузка Медактов ${age}.xls`\r\n            document.body.appendChild(a)\r\n            a.click()\r\n            a.remove()\r\n          })\r\n          .catch(error => console.log('error', error))\r\n      }\r\n      else{\r\n        this.props.callErrorToast(\"Заполните поле Статус\")\r\n      }\r\n    }\r\n    \r\n\r\n    else if (name === \"back\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"back\" },\r\n        }\r\n      }\r\n      console.log(\"button back: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"finish\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"finish\" },\r\n        }\r\n      }\r\n      console.log(\"button finish: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"cancel\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"cancel\" },\r\n        }\r\n      }\r\n      console.log(\"button cancel: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else {\r\n      console.log(\"Unknown button\", name)\r\n    }\r\n  }\r\n  // Handler of amount of rows per page of grid form\r\n  rowsPageChange(size, page) {\r\n    console.log(\"Rows changed: \", size)\r\n    let filterDocument = { attributes: this.getFieldValuesToSearch() }\r\n    let commandJson =\r\n    {\r\n      commandType: \"completeTask\",\r\n      session_id: this.state.session_id,\r\n      process_id: this.state.process_id,\r\n      taskID: this.state.taskID,\r\n      docDefId: this.state.Form.docDefId,\r\n      variables: {\r\n        userAction: { value: \"findDocument\" },\r\n        doc: { value: JSON.stringify(filterDocument) },\r\n        size: { value: size },\r\n        page: { value: page }\r\n      }\r\n    }\r\n    console.log(\"JSON Collected: \", commandJson)\r\n    this.sendFieldValues(commandJson)\r\n    this.clearTabData(this.state.process_id)\r\n  }\r\n  // Returns Button component\r\n  createButton(button, index) {\r\n    if (button.name === \"downloadExcel\" || button.name === \"downloadPDF\") {\r\n      return (\r\n        <Button variant=\"outlined\"\r\n          name={button.name}\r\n          onClick={() => this.downloadDocument(button.name)}\r\n          value={button.name}\r\n          style={{\r\n            margin: 3,\r\n            backgroundColor: button.backgroundColor,\r\n            height: 32,\r\n            fontSize: 12\r\n          }}\r\n        >\r\n          {button.label}\r\n        </Button>\r\n      )\r\n    }\r\n    else if (button.name === \"attachDocument\") {\r\n      return (\r\n        <Button variant=\"outlined\"\r\n          name={button.name}\r\n          onClick={() => this.showScanComponentClick()}\r\n          value={button.name}\r\n          style={{\r\n            margin: 3,\r\n            backgroundColor: button.backgroundColor,\r\n            height: 32,\r\n            fontSize: 12\r\n          }}\r\n        >\r\n          {button.label}\r\n        </Button>\r\n      )\r\n    }\r\n    else return (\r\n      <Button variant=\"outlined\"\r\n        name={button.name}\r\n        onClick={() => this.buttonClick(button.name)}\r\n        style={{\r\n          margin: 3,\r\n          backgroundColor: button.backgroundColor,\r\n          height: 32,\r\n          fontSize: 12\r\n        }}\r\n        value={button.name}\r\n      >\r\n        {button.label}\r\n      </Button>\r\n    )\r\n  }\r\n  getEnumValueText(enumName) {\r\n    for (let i = 0; i < this.state.selectedDoc.attributes.length; i++) {\r\n      if (this.state.selectedDoc.attributes[i].name === enumName) {\r\n        return this.state.selectedDoc.attributes[i].enumValueText\r\n      }\r\n    }\r\n  }\r\n  // Create sections with labels and call bodyBuilder function\r\n  sectionBuilder(section, index) {\r\n    return (\r\n      <Table size=\"small\" key={index + \"table\"}>\r\n        <TableHead>\r\n          <TableRow style={{ height: 30 }}>\r\n            <TableCell\r\n              key={index = \"head\"}\r\n              style={{\r\n                color: \"black\",\r\n                fontSize: 14,\r\n                backgroundColor: \"#D3D3FE\",\r\n                width: \"100%\"\r\n              }}>\r\n              {section.label}\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        {this.bodyBuilder(section)}\r\n      </Table>\r\n    )\r\n  }\r\n  // Create body of each section and call contentBuilder function\r\n  bodyBuilder(section) {\r\n    return (\r\n      <Table size=\"small\">\r\n        <TableBody>\r\n          {section.contents.map((contentItem, index) => (\r\n            <TableRow key={index} style={{ height: 30 }}>\r\n              {contentItem.name !== \"PersonDetailFormAddress\" && contentItem.name !== \"PersonData\" &&\r\n                contentItem.label !== \"\" &&\r\n                <TableCell\r\n                  key={index + \"cell1\"}\r\n                  align=\"left\"\r\n                  style={{ width: \"40%\" }}>\r\n                  {contentItem.label}\r\n                </TableCell>\r\n              }\r\n              <TableCell\r\n                key={index + \"cell2\"}\r\n                align=\"left\"\r\n                style={{ width: \"60%\", height: (this.state.Form.formName === \"TransferMedicalCertificateForm\") ? 100 : 30 }}\r\n              >{this.contentBuilder(contentItem)}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    )\r\n  }\r\n  // Create component by it's type\r\n  contentBuilder(contentItem) {\r\n    if (contentItem.type === \"Text\" || contentItem.type === \"BLOB\") {\r\n      // if (contentItem.name === \"RegNoAct\") {\r\n      //   return (\r\n      //     <FormControl>\r\n      //       <Input\r\n      //         name={contentItem.name}\r\n      //         value={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\r\n      //         // onChange={this.componentChange}\r\n      //         onBlur={this.regNoChange}\r\n      //         style={{ width: \"100%\", height: 30 }}\r\n      //         disabled={(this.props.formType === \"view\" || this.props.edit === false) ? true : false}\r\n      //         inputComponent={RegNoMask}\r\n      //       />\r\n      //     </FormControl>\r\n      //   )\r\n      // }\r\n      // else {\r\n      return (\r\n        <TextField\r\n          multiline\r\n          // onChange={this.componentChange}\r\n          // onBlur={this.handleChange}\r\n          // defaultValue={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\r\n          onChange={this.handleChange}\r\n          value={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\r\n          name={contentItem.name}\r\n          style={{ width: \"100%\" }}\r\n          disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n        />\r\n      )\r\n      // }\r\n    }\r\n    else if (contentItem.type === \"Int\") {\r\n      return (\r\n        <TextField\r\n          disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n          style={{ width: \"100%\" }}\r\n          // defaultValue = {(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name]: \"\"}\r\n          value={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\r\n          onChange={this.componentIntChange}\r\n          // onBlur={this.handleChange}\r\n          name={contentItem.name}\r\n          InputProps={{ inputComponent: NumberFormatCustom }}\r\n        />\r\n      )\r\n    }\r\n    else if (contentItem.type === \"DateTime\") {\r\n      return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\r\n          <DatePicker\r\n            clearable\r\n            cancelLabel=\"Отмена\"\r\n            okLabel=\"Ок\"\r\n            clearLabel=\"Очистить\"\r\n            invalidDateMessage=\"неверный формат\"\r\n            name={contentItem.name}\r\n            margin=\"small\"\r\n            format=\"dd.MM.yyyy\"\r\n            disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n            value={(this.state.fieldValue[contentItem.name] !== undefined) ? this.parseDate(this.state.fieldValue[contentItem.name]) : null}\r\n            onChange={date => this.handleDateTimeChange(date, contentItem.name)}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      )\r\n    }\r\n    else if (contentItem.type === \"Enum\") {\r\n      // console.log(\"EN DATA\", this.state.enumData)\r\n      let options = []\r\n      options.push({\r\n        \"value\": null,\r\n        \"label\": null,\r\n        \"name\": contentItem.name\r\n      })\r\n      for (let i = 0; i < this.state.enumData.length; i++) {\r\n        if (contentItem.enumDef === this.state.enumData[i].enumDef) {\r\n          for (let l = 0; l < this.state.enumData[i].data.length; l++) {\r\n            options.push({\r\n              \"value\": this.state.enumData[i].data[l].Id,\r\n              \"label\": this.state.enumData[i].data[l].Text,\r\n              \"name\": contentItem.name\r\n            })\r\n          }\r\n          break\r\n        }\r\n      }\r\n      // console.log(\"OPTOPNS\", options)\r\n      // console.log(\"S OPTOPNS\", this.state.fieldValue[contentItem.name])\r\n      var selectedOption = {}\r\n      if (this.state.fieldValue[contentItem.name] !== undefined) {\r\n        for (let i = 0; i < options.length; i++) {\r\n          if (options[i].value === this.state.fieldValue[contentItem.name]) {\r\n            selectedOption = {\r\n              \"value\": options[i].value,\r\n              \"name\": options[i].name,\r\n              \"label\": options[i].label\r\n            }\r\n            break\r\n          }\r\n          else selectedOption = {\r\n            \"value\": null,\r\n            \"label\": null,\r\n            \"name\": contentItem.name\r\n          }\r\n        }\r\n      }\r\n      return (\r\n        <Select\r\n          name={contentItem.name}\r\n          value={selectedOption}\r\n          onChange={this.handleSelectChange}\r\n          style={{ height: 30, width: \"100%\" }}\r\n          options={options}\r\n          isDisabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n        />\r\n      )\r\n    }\r\n    else if (contentItem.type === \"Currency\" || contentItem.type === \"Float\") {\r\n      return (\r\n        <TextField\r\n          value={this.state.fieldValue[contentItem.name] ? this.state.fieldValue[contentItem.name] : \"\"}\r\n          // onChange = {this.componentChange}\r\n          onBlur={this.handleChange}\r\n          name={contentItem.name}\r\n          style={{ width: \"100%\" }}\r\n          disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n          InputProps={{ inputComponent: NumberFormatCustom }}\r\n        />\r\n      )\r\n    }\r\n    else if (contentItem.type === \"Bool\") {\r\n      return (\r\n        <Checkbox\r\n          // key={this.getUUID()}\r\n          style={{ maxWidth: 20, height: 15, color: (this.state.formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\" }}\r\n          name={contentItem.name}\r\n          onChange={this.handCheckboxChange}\r\n          disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n          checked={(this.state.fieldValue[contentItem.name] === \"True\" || this.state.fieldValue[contentItem.name] === true) ? true : false}\r\n        />\r\n      )\r\n    }\r\n    else if (contentItem.type === \"PersonData\") {\r\n      return (\r\n        <Person\r\n          userId={this.state.userId}\r\n          userRole={this.state.userRole}\r\n          process_id={this.state.process_id}\r\n          session_id={this.state.session_id}\r\n          selectedDoc={this.state.person}\r\n          documentViewForm={this.state.documentViewForm}\r\n          taskID={this.state.taskID}\r\n          subDocument={true}\r\n          changeSubDocument={this.changeSubDocument}\r\n          formType={this.state.personFormType}\r\n          enumData={this.state.personEnumData}\r\n          // formType = {this.state.formName === \"AdultsIPRForm\" ? \"view\" : \"edit\"}\r\n          docList={null}\r\n        >\r\n        </Person>\r\n      )\r\n    }\r\n    else if (contentItem.type === \"Address\") {\r\n      return (\r\n        <Address\r\n          SOAT={this.state.SOAT}\r\n          // countryChange = {this.countryChange}\r\n          regionChange={this.regionChange}\r\n          districtChange={this.districtChange}\r\n          subDistrictChange={this.subDistrictChange}\r\n          villageChange={this.villageChange}\r\n          handleChange={this.handleChange}\r\n          Country={this.state.fieldValue.Country}\r\n          Region={this.state.fieldValue.Region}\r\n          District={this.state.fieldValue.District}\r\n          subDistrict={this.state.fieldValue.subDistrict}\r\n          Village={this.state.fieldValue.Village}\r\n          ResidentialAddress={this.state.fieldValue.ResidentialAddress}\r\n          Phone={this.state.fieldValue.Phone}\r\n          formType={this.state.formType}\r\n          edit={contentItem.edit}\r\n          formName={this.state.Form.formName}\r\n        />\r\n      )\r\n    }\r\n  }\r\n  // custom allerts\r\n  swAlert(text) {\r\n    return (\r\n      swal({\r\n        text: text,\r\n        icon: \"warning\",\r\n        buttons: { ok: \"Ок\" },\r\n        // dangerMode: true,\r\n      })\r\n        .then((click) => {\r\n          if (click === \"ok\") {\r\n            console.log(\"CLICK OK\", click)\r\n          }\r\n        })\r\n    )\r\n  }\r\n  render() {\r\n    try {\r\n      if (!this.state.Form) return <div>No Form</div>\r\n      if (this.state.buttons === undefined) return <div>No Buttons</div>\r\n      // console.log(\"ViewForm State\", this.state)\r\n      // console.log(\"ViewForm Props\", this.props)\r\n      return (\r\n        <Grid>\r\n          <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\r\n            <Grid item xs={10}>\r\n              <Paper>\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                  <TableHead>\r\n                    <TableRow style={{ maxHeight: 25 }}>\r\n                      <TableCell style={{ fontSize: 16, color: \"black\" }}>{this.state.Form.label}</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                </Grid>\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                  {this.state.Form.sections.map((section, index) => {\r\n                    return this.sectionBuilder(section, index)\r\n                  })}\r\n                </Grid>\r\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n                  {this.state.buttons.map((button, index) => {\r\n                    return this.createButton(button, index)\r\n                  })}\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <br></br>\r\n\r\n          {this.state.docList !== null && this.state.docList !== \"null\" &&\r\n            this.state.docList !== undefined ?\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n              <GridForm key=\"grid form\"\r\n                process_id={this.state.process_id}\r\n                session_id={this.state.session_id}\r\n                taskID={this.state.taskID}\r\n                userId={this.state.userId}\r\n                organizationId={this.state.organizationId}\r\n                userRole={this.state.userRole}\r\n                docList={this.state.docList}\r\n                size={this.state.size}\r\n                page={this.state.page}\r\n                Form={this.state.gridForm}\r\n                gridFormButtons={this.state.gridFormButtons}\r\n                rowsPageChange={this.rowsPageChange}\r\n                sendFieldValues={this.sendFieldValues}\r\n                SOAT={this.state.SOAT}\r\n                handleCloseCurrentTab={this.handleCloseCurrentTab}\r\n                clearTabData={this.clearTabData}\r\n                callSuccessToast={this.props.callSuccessToast}\r\n                callErrorToast={this.props.callErrorToast}\r\n              >\r\n              </GridForm>\r\n            </Grid>\r\n            :\r\n            <br></br>\r\n          }\r\n          {this.state.docListIPR !== null && this.state.docListIPR !== \"null\" &&\r\n            this.state.docListIPR !== undefined ?\r\n            <GridForm\r\n              key=\"grid form\"\r\n              process_id={this.state.process_id}\r\n              session_id={this.state.session_id}\r\n              taskID={this.state.taskID}\r\n              userId={this.state.userId}\r\n              organizationId={this.state.organizationId}\r\n              userRole={this.state.userRole}\r\n              docListIPR={this.state.docListIPR}\r\n              size={this.state.size}\r\n              page={this.state.page}\r\n              Form={this.state.IPRGridForm} // {this.state.gridForm.Form}\r\n              medicalCardId={this.state.docId}\r\n              gridFormButtons={this.state.gridFormButtons}\r\n              rowsPageChange={this.rowsPageChange}\r\n              sendFieldValues={this.sendFieldValues}\r\n              SOAT={this.state.SOAT}\r\n              handleCloseCurrentTab={this.handleCloseCurrentTab}\r\n              clearTabData={this.clearTabData}\r\n              callSuccessToast={this.props.callSuccessToast}\r\n              callErrorToast={this.props.callErrorToast}\r\n            >\r\n            </GridForm>\r\n            :\r\n            <br></br>\r\n          }\r\n          <br></br>\r\n          {this.state.download === \"downloadExcel\" &&\r\n            <Download\r\n              downloadType={this.state.download}\r\n              Form={this.state.Form}\r\n              fieldValue={this.state.fieldValue}\r\n              person={this.state.person}\r\n              SOAT={this.state.SOAT}\r\n              selectedDoc={this.state.selectedDoc}\r\n\r\n            />\r\n          }\r\n          {this.state.download === \"downloadPDF\" &&\r\n            <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} id=\"TableToDownload\">\r\n              <Grid item xs={12}>\r\n                <Card>\r\n                  <Download\r\n                    downloadType={this.state.download}\r\n                    Form={this.state.Form}\r\n                    fieldValue={this.state.fieldValue}\r\n                    person={this.state.person}\r\n                    SOAT={this.state.SOAT}\r\n                    selectedDoc={this.state.selectedDoc}\r\n                    enumData={this.state.enumData}\r\n                  />\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          }\r\n        </Grid>\r\n      )\r\n    }\r\n    catch (error) {\r\n      console.log(\"ERROR\", error)\r\n      return <div>error</div>\r\n    }\r\n  }\r\n}\r\nexport default ViewForm"]},"metadata":{},"sourceType":"module"}