{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\Serj\\\\Desktop\\\\ismse\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Serj\\\\Desktop\\\\ismse\\\\src\\\\components\\\\Person\\\\Person.jsx\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport GridForm from \"../GridForm/GridForm.jsx\";\nimport Address from \"../Address/Address.jsx\"; // import NumberFormat from 'react-number-format';\n// import PropTypes from 'prop-types';\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport Input from '@material-ui/core/Input';\nimport MaskedInput from 'react-text-mask';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport ruLocale from \"date-fns/locale/ru\";\nimport toast, { Toaster } from 'react-hot-toast'; // https://react-hot-toast.com/docs\n// function NumberFormatCustom(props) {\n//   const {inputRef, onChange, ...other} = props;\n//   return (\n//     <NumberFormat\n//       {...other}\n//       getInputRef={inputRef}\n//       onValueChange={values => {\n//         onChange({\n//           target: {\n//             value: values.value,\n//           },\n//         });\n//       }}\n//       decimalSeparator={','} \n//       isNumericString\n//     />\n//   );\n// }\n// NumberFormatCustom.propTypes = {\n//   inputRef: PropTypes.func.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// }\n\nfunction PassportSeriesMask(props) {\n  const inputRef = props.inputRef,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return React.createElement(MaskedInput, Object.assign({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    },\n    mask: [/[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/],\n    placeholderChar: '\\u2000' // showMask\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }));\n}\n\nfunction PassportNoMask(props) {\n  const inputRef = props.inputRef,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return React.createElement(MaskedInput, Object.assign({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    },\n    mask: [/[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/],\n    placeholderChar: '\\u2000' // showMask\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n}\n\nvar showScanComponent = false;\n\nclass Person extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTextChange = event => {\n      // console.log(\"TARGET\", event.target)\n      let fieldValue = this.state.fieldValue;\n      var name = event.target.name;\n      var value = event.target.value.trim();\n      let maxLength = this.checkLength(name); // console.log(\"MAXL\", event.target.name, maxLength)\n\n      if (event.target.value.length > maxLength) {\n        let maxValue = value.substring(0, maxLength);\n        fieldValue[name] = maxValue; // this.callErrorToast(maxValue)\n\n        this.state.key = this.getUUID();\n        this.setState({\n          fieldValue: fieldValue,\n          key: key\n        });\n        this.callErrorToast(\"Длинна данного поля не должна превышать\" + maxLength + \"символов!\");\n      } else {\n        fieldValue[event.target.name] = event.target.value;\n        this.setState({\n          fieldValue: fieldValue\n        }); // let nv = event.target.name + \" : \" + event.target.value\n        // this.callSuccessToast(nv)\n      }\n    };\n\n    this.handleSelectChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      this.setState({\n        fieldValue: fieldValue\n      });\n\n      if (this.state.subDocument === true) {\n        this.props.changeSubDocument(event.target.name, event.target.value);\n      } // this.callSuccessToast(\"2\")\n\n    };\n\n    this.buttonClick = event => {\n      // console.log(\"Event\", event.currentTarget.name)\n      if (event.currentTarget.name === \"findDocument\") {\n        const filterDocument = {\n          attributes: this.getFieldValues()\n        };\n        const commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          docDefId: this.state.documentViewForm.docDefId,\n          variables: {\n            userAction: {\n              value: \"findDocument\"\n            },\n            doc: {\n              value: JSON.stringify(filterDocument)\n            },\n            userId: {\n              value: this.state.userId\n            },\n            userRole: {\n              value: this.state.userRole\n            },\n            size: {\n              value: 10\n            },\n            page: {\n              value: 1\n            }\n          }\n        };\n        console.log(\"button findDocument Person: \", commandJson);\n        this.sendFieldValues(commandJson);\n      } else if (event.currentTarget.name === \"createDocument\") {\n        const createDocument = {\n          attributes: this.getFieldValuesToCreateDoc()\n        };\n        const commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"createDocument\"\n            },\n            doc: {\n              value: JSON.stringify(createDocument)\n            },\n            userId: {\n              value: this.state.userId\n            },\n            userRole: {\n              value: this.state.userRole\n            }\n          }\n        };\n        console.log(\"Create Document: \", commandJson);\n        this.clearTabData(this.state.process_id); // this.setState({documentViewForm: null})\n\n        this.sendFieldValues(commandJson);\n      } else if (event.currentTarget.name === \"saveDocument\") {\n        const createDocumentNRSZ = this.getFieldValuesNRSZ();\n        const createDocument = {\n          attributes: this.getFieldValues()\n        };\n        let age = this.getPersonAge();\n        const Adult = age >= 18 ? \"True\" : \"False\";\n        const commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"saveDocument\"\n            },\n            docNRSZ: {\n              value: JSON.stringify(createDocumentNRSZ)\n            },\n            doc: {\n              value: JSON.stringify(createDocument)\n            },\n            userId: {\n              value: this.state.userId\n            },\n            userRole: {\n              value: this.state.userRole\n            },\n            docDefId: {\n              value: this.state.documentViewForm.docDefId\n            },\n            regionNo: {\n              value: this.state.fieldValue[\"Region\"]\n            },\n            districtNo: {\n              value: this.state.fieldValue[\"District\"]\n            },\n            adult: {\n              value: Adult\n            }\n          }\n        };\n        console.log(\"button saveDocument: \", commandJson); // this.clearTabData(this.state.process_id)\n\n        this.checkForEmptyFields(commandJson);\n      } else if (event.currentTarget.name === \"deleteDocument\") {\n        // const filterDocument = {attributes: this.getFieldValues()}\n        const commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"deleteDocument\"\n            },\n            docId: {\n              value: this.state.selectedDoc.id\n            },\n            userId: {\n              value: this.state.userId\n            },\n            userRole: {\n              value: this.state.userRole\n            }\n          }\n        };\n        console.log(\"button deleteDocument: \", commandJson);\n        this.sendFieldValues(commandJson);\n      } else if (event.currentTarget.name === \"updateDocument\") {\n        const updateDocument = {\n          attributes: this.getFieldValues()\n        };\n        let age = this.getPersonAge();\n        const Adult = age >= 18 ? \"True\" : \"False\";\n        const commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"updateDocument\"\n            },\n            doc: {\n              value: JSON.stringify(updateDocument)\n            },\n            personId: {\n              value: this.state.selectedDoc.id\n            },\n            userId: {\n              value: this.state.userId\n            },\n            userRole: {\n              value: this.state.userRole\n            },\n            adult: {\n              value: Adult\n            }\n          }\n        };\n        console.log(\"button updateDocument: \", commandJson);\n        this.sendFieldValues(commandJson);\n      } else if (event.currentTarget.name === \"cancel\") {\n        const commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"cancel\"\n            },\n            docId: {\n              value: \"null\"\n            }\n          }\n        };\n        this.sendFieldValues(commandJson); // this.clearTabData(this.state.process_id)\n        // this.closeTab(this.state.process_id)\n\n        console.log(\"Button cancel\", commandJson);\n      } else if (event.currentTarget.name === \"back\") {\n        const commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"back\"\n            }\n          }\n        };\n        this.sendFieldValues(commandJson);\n        console.log(\"Button back\");\n      }\n    };\n\n    this.countryChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      fieldValue[\"Region\"] = null;\n      fieldValue[\"District\"] = null; // console.log(\"Country selected\", event.target.name)\n\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.regionChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      fieldValue[\"District\"] = null; // console.log(\"Region selected\", event.target.name)\n\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.districtChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value; // console.log(\"District selected\", event.target.name)\n\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.passportSeriesChange = event => {\n      // event.preventDefault()\n      var value = event.target.value.trim(); // console.log(\"PasportSer\", event.target.value)\n\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = value;\n      this.setState({\n        fieldValue: fieldValue\n      }); // if(value === \"\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\"){\n      //   // console.log(\"PasportSer null\")\n      //   let fieldValue = this.state.fieldValue\n      //   fieldValue[event.target.name] = null\n      //   this.setState({fieldValue: fieldValue})\n      // }\n      // else{\n      //   for(let i=value.length; i>0; i--){\n      //     let lastChar = value.substring(i -1, i)\n      //     // console.log(\"LAST\", lastChar)\n      //     if(lastChar !== '\\u2000'){\n      //       let fieldValue = this.state.fieldValue\n      //       fieldValue[event.target.name] = value\n      //       this.setState({fieldValue: fieldValue})\n      //       break\n      //     }\n      //     value = value.substring(0, value.length -1)\n      //   }\n      // }\n    };\n\n    this.placeOfLivingChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      fieldValue[\"District\"] = null; // console.log(\"Region selected\", event.target.name)\n\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.state = {\n      documentViewForm: null,\n      selectedDoc: null,\n      subDocument: false,\n      fieldValue: {},\n      process_id: this.props.process_id,\n      session_id: this.props.session_id,\n      organizationId: this.props.organizationId,\n      taskID: this.props.taskID,\n      enumData: [],\n      buttons: null,\n      gridFormButtons: null,\n      userId: this.props.userId,\n      userRole: this.props.userRole,\n      formType: null,\n      formSize: 6,\n      docList: null,\n      size: this.props.size,\n      page: this.props.page,\n      ws: null,\n      key: this.getUUID()\n    };\n    this.sendFieldValues = this.sendFieldValues.bind(this);\n    this.clearTabData = this.clearTabData.bind(this);\n    this.rowsPerPageChange = this.rowsPerPageChange.bind(this);\n    this.rowsPageChange = this.rowsPageChange.bind(this);\n    this.handleCloseCurrentTab = this.handleCloseCurrentTab.bind(this); // this.callSuccessToast = this.callSuccessToast.bind(this)\n    // this.callErrorToast = this.callErrorToast.bind(this)\n  }\n\n  callSuccessToast(text) {\n    toast.success(text, {\n      duration: 3000,\n      position: 'top-right'\n    });\n  }\n\n  callErrorToast(text) {\n    toast.error(text, {\n      duration: 8000,\n      position: 'top-right'\n    });\n  }\n\n  handleCloseCurrentTab(process_id) {\n    this.props.handleCloseCurrentTab(process_id);\n  }\n\n  clearTabData(process_id) {\n    this.props.clearTabData(process_id);\n  }\n\n  async componentDidMount() {\n    console.log(\"PERSON PROPS\", this.props);\n\n    if (this.state.documentViewForm === null) {\n      this.setDataFromProps();\n    }\n  }\n\n  async componentDidUpdate() {\n    if (this.state.documentViewForm === null) {\n      this.setDataFromProps();\n    }\n  }\n\n  async setDataFromProps() {\n    let fstate = this.state;\n    fstate.documentViewForm = this.props.documentViewForm;\n    fstate.formType = this.props.formType;\n    fstate.gridFormButtons = this.props.gridFormButtons;\n\n    if (this.props.docList !== null && this.props.docList !== \"null\" && this.props.docList !== undefined) {\n      fstate.docList = JSON.parse(this.props.docList);\n    }\n\n    if (this.props.subDocument !== undefined) {\n      fstate.subDocument = this.props.subDocument;\n\n      if (this.props.subDocument === true) {\n        fstate.formSize = 12;\n      }\n    }\n\n    if (this.props.buttons !== undefined) {\n      fstate.buttons = this.props.buttons;\n    }\n\n    if (this.props.enumData !== undefined && this.props.enumData !== null) {\n      fstate.enumData = this.props.enumData;\n\n      if (this.props.selectedDoc !== null && this.props.selectedDoc !== undefined) {\n        fstate.selectedDoc = this.props.selectedDoc; // console.log(\"SELDOC\", this.props.selectedDoc)\n\n        const docAttr = this.props.selectedDoc.attributes;\n\n        for (var i = 0; i < docAttr.length; i++) {\n          fstate.fieldValue[docAttr[i].name] = docAttr[i].value;\n        }\n\n        for (let i = 0; i < docAttr.length; i++) {\n          fstate.fieldValue[docAttr[i].name] = docAttr[i].value;\n\n          if (this.state.enumData === null) {\n            if (docAttr[i].type === \"Enum\") {\n              fstate.fieldValue[docAttr[i].name] = docAttr[i].enumValueText;\n            }\n          }\n        }\n      }\n    }\n\n    if (this.props.enumData === undefined || this.props.enumData === null) {\n      fstate.enumData = null;\n    }\n\n    this.setState(fstate);\n\n    if (fstate.fieldValue[\"Country\"] === undefined) {\n      fstate.fieldValue[\"Country\"] = \"4170000000000\";\n    }\n\n    this.setState(fstate);\n  }\n\n  sendFieldValues(commandJson) {\n    this.props.sendFieldValues(commandJson);\n  } // passportSeriesChange=(event)=>{\n  //   let value = event.target.value\n  //   const regex = /[a-zA-z]/\n  //   const chars = event.target.value.split('')\n  //   const char = chars.pop()\n  //   if(!regex.test(char)){\n  //     console.log(\"not valid\", char)\n  //   }\n  //   else{\n  //     let fieldValue = this.state.fieldValue\n  //     fieldValue[event.target.name] = value\n  //     this.setState({fieldValue: fieldValue})\n  //   }\n  // }\n\n\n  checkLength(name) {\n    for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\n      if (name === this.state.documentViewForm.attributes[i].name) {\n        return this.state.documentViewForm.attributes[i].maxLength;\n      }\n    }\n  }\n\n  handleDateTimeChange(date, name) {\n    // console.log(\"EV\", date, name)\n    let fieldValue = this.state.fieldValue;\n\n    if (date !== null) {\n      var newDate = new Date(date);\n      var dd = String(newDate.getDate()).padStart(2, '0');\n      var mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n      var yyyy = newDate.getFullYear();\n      var convertedDate = String(dd + '.' + mm + '.' + yyyy); // console.log(\"CDATE\", convertedDate)\n\n      fieldValue[name] = convertedDate;\n      if (this.state.subDocument === true) this.props.changeSubDocument(name, convertedDate);\n      this.setState({\n        fieldValue: fieldValue\n      });\n    } else {\n      fieldValue[name] = undefined;\n      if (this.state.subDocument === true) this.props.changeSubDocument(name, convertedDate);\n      this.setState({\n        fieldValue: fieldValue\n      });\n    } // let fieldValue = this.state.fieldValue\n    // var newDate = new Date(event.target.value)\n    // var dd = String(newDate.getDate()).padStart(2, '0')\n    // var mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\n    // var yyyy = newDate.getFullYear()\n    // var convertedDate = String(dd + '.' + mm + '.' + yyyy)\n    // fieldValue[event.target.name] = convertedDate\n    // if (this.state.subDocument === true)  this.props.changeSubDocument(event.target.name, convertedDate)\n    // this.setState({fieldValue: fieldValue})\n\n  }\n\n  parseDate(date) {\n    // Parsing DAteTime to appropriate format\n    if (date !== undefined && date !== null) {\n      var dd = date.substring(0, 2);\n      var mm = date.substring(3, 5);\n      var yyyy = date.substring(6, 10);\n      var convertedDate = String(yyyy + '-' + mm + '-' + dd);\n      var newDate = new Date(convertedDate); // \"2017-01-26\"\n\n      dd = String(newDate.getDate()).padStart(2, '0');\n      mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n      yyyy = newDate.getFullYear();\n      convertedDate = yyyy + '-' + mm + '-' + dd;\n    } // console.log(\"DATE\", convertedDate)\n\n\n    return convertedDate;\n  }\n\n  getEnumValues(enumDef) {\n    // Get items to show in \"Select\" component\n    // console.log(\"ENUM value search\", this.state.enumData)\n    for (let i = 0; i < this.state.enumData.length; i++) if (this.state.enumData[i].enumDef === enumDef) {\n      return this.state.enumData[i].data;\n    }\n\n    return null;\n  }\n\n  rowsPerPageChange(size) {\n    // Hendler of selected amount of rows to show on Table form\n    const filterDocument = {\n      attributes: this.getFieldValues()\n    };\n    const commandJson = {\n      commandType: \"completeTask\",\n      session_id: this.state.session_id,\n      process_id: this.state.process_id,\n      taskID: this.state.taskID,\n      docDefId: this.state.documentViewForm.docDefId,\n      variables: {\n        userAction: {\n          value: \"findDocument\"\n        },\n        doc: {\n          value: JSON.stringify(filterDocument)\n        },\n        size: {\n          value: size\n        },\n        page: {\n          value: 1\n        }\n      }\n    };\n    this.sendFieldValues(commandJson);\n  }\n\n  getButton(button, index) {\n    // Create buttons related to form\n    if (button.name === \"attachDocument\") return showScanComponent = true;else return React.createElement(Button, {\n      name: button.name,\n      variant: \"outlined\",\n      style: {\n        margin: 3,\n        backgroundColor: button.backgroundColor,\n        height: 32,\n        fontSize: 12\n      },\n      onClick: this.buttonClick,\n      value: button.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, button.label);\n  }\n\n  getFieldValuesNRSZ() {\n    // Collect data to create document in NRSZ DB\n    var attributes = {}; // console.log(\"Docview form GET\", this.state.documentViewForm)\n\n    for (var key in this.state.fieldValue) {\n      if (key !== \"Country\" && key !== \"Region\" && key !== \"District\") {\n        if (key === \"Date_of_Issue\" || key === \"Date_of_Birth\") {\n          attributes[key] = this.parseDate(this.state.fieldValue[key]);\n        } else attributes[key] = this.state.fieldValue[key];\n      }\n    } // console.log(\"Variables\", attributes)\n\n\n    return attributes;\n  }\n\n  getFieldValues() {\n    // Collect all data from form fields\n    var attributes = []; // console.log(\"Docview form GET\", this.state.documentViewForm)\n\n    for (var key in this.state.fieldValue) {\n      if (key !== \"Country\" && key !== \"Region\" && key !== \"District\") {\n        for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\n          if (key === this.state.documentViewForm.attributes[i].name) {\n            attributes.push({\n              name: this.state.documentViewForm.attributes[i].name,\n              value: this.state.fieldValue[key],\n              type: this.state.documentViewForm.attributes[i].type\n            });\n          }\n        }\n      } // console.log(\"item\",key)\n\n    } // console.log(\"Variables\", attributes)\n\n\n    return attributes;\n  }\n\n  getFieldValuesToCreateDoc() {\n    // Collect all data from form fields\n    var attributes = []; // console.log(\"Docview form GET\", this.state.documentViewForm)\n\n    for (var key in this.state.fieldValue) {\n      if (key !== \"IIN\") {\n        for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\n          if (key === this.state.documentViewForm.attributes[i].name) {\n            attributes.push({\n              name: this.state.documentViewForm.attributes[i].name,\n              value: this.state.fieldValue[key],\n              type: this.state.documentViewForm.attributes[i].type\n            });\n          }\n        }\n      }\n    }\n\n    return attributes;\n  }\n\n  checkForEmptyFields(commandJson) {\n    // Controls on obligated fields\n    if (this.state.fieldValue[\"Last_Name\"] !== \"\" && this.state.fieldValue[\"Last_Name\"] !== undefined) {\n      if (this.state.fieldValue[\"Date_of_Birth\"] !== \"01.01.1970\" && this.state.fieldValue[\"Date_of_Birth\"] !== undefined) {\n        if (this.state.fieldValue[\"Sex\"] !== null && this.state.fieldValue[\"Sex\"] !== undefined) {\n          if (this.state.fieldValue[\"FamilyState\"] !== null && this.state.fieldValue[\"FamilyState\"] !== undefined) {\n            if (this.state.fieldValue[\"PassportType\"] !== null && this.state.fieldValue[\"PassportType\"] !== undefined) {\n              if (this.state.fieldValue[\"PassportSeries\"] !== \"\" && this.state.fieldValue[\"PassportSeries\"] !== undefined) {\n                if (this.state.fieldValue[\"PassportNo\"] !== \"\" && this.state.fieldValue[\"PassportNo\"] !== undefined) {\n                  if (this.state.fieldValue[\"Issuing_Authority\"] !== \"\" && this.state.fieldValue[\"Issuing_Authority\"] !== undefined) {\n                    if (this.state.fieldValue[\"Date_of_Issue\"] !== \"01.01.1970\" && this.state.fieldValue[\"Date_of_Issue\"] !== undefined) {\n                      if (this.state.fieldValue[\"Region\"] !== null && this.state.fieldValue[\"Region\"] !== undefined) {\n                        if (this.state.fieldValue[\"District\"] !== null && this.state.fieldValue[\"District\"] !== undefined) {\n                          // this.sendFieldValues(commandJson)\n                          // this.clearTabData(this.state.process_id)\n                          this.chekForExsistedPersonPassport(commandJson);\n                        } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Район\\\"\");\n                      } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Область\\\"\");\n                    } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Дата выдачи\\\"\");\n                  } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Выдавший орган\\\"\");\n                } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Номер\\\"\");\n              } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Серия\\\"\");\n            } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Типы удостоверяющих документов\\\"\");\n          } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Семейное положение\\\"\");\n        } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Пол\\\"\");\n      } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Дата рождения\\\"\");\n    } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Фамилия\\\"\");\n  }\n\n  async chekForExsistedPersonPassport(commandJson) {\n    var Passport = {\n      attributes: [{\n        name: \"PassportSeries\",\n        value: this.state.fieldValue[\"PassportSeries\"],\n        type: \"Text\"\n      }, {\n        name: \"PassportNo\",\n        value: this.state.fieldValue[\"PassportNo\"],\n        type: \"Text\"\n      }]\n    };\n    await fetch(\"api/Document/FilterDocumentsByDefId?defId=\" + this.state.documentViewForm.docDefId + \"&size=10&page=1&userId=\" + this.state.userId, {\n      headers: {\n        \"Accept\": \"application/x-www-form-urlencoded\",\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\",\n      body: JSON.stringify(Passport) // mode: 'no-cors'\n\n    }).then(response => {\n      console.log(\"CHK PASPORT\", response);\n      response.text().then(string => {\n        var document = JSON.parse(string);\n\n        if (document.length === 0) {// this.clearTabData(this.state.process_id)\n          // this.sendFieldValues(commandJson)\n        } else this.swAlert(\"Гражданин с таким номером пасспорта уже существует!\"); // console.log(\"RESPONSE\", document)\n\n      });\n    });\n  }\n\n  getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  }\n\n  swAlert(text) {\n    return swal({\n      text: text,\n      icon: \"warning\",\n      buttons: {\n        ok: \"Ок\"\n      } // dangerMode: true,\n\n    }).then(click => {\n      if (click === \"ok\") {\n        console.log(\"CLICK OK\", click);\n      }\n    });\n  }\n\n  getPersonAge() {\n    var birthday = new Date(this.parseDate(this.state.fieldValue[\"Date_of_Birth\"]));\n    var ageDifMs = Date.now() - birthday.getTime();\n    var ageDate = new Date(ageDifMs); // miliseconds from epoch\n\n    var fullAge = Math.abs(ageDate.getUTCFullYear() - 1970);\n    console.log(\"AGE\", fullAge);\n    return fullAge;\n  }\n\n  rowsPageChange(size, page) {\n    // console.log(\"Rows changed: \", size)\n    const filterDocument = {\n      attributes: this.getFieldValues()\n    };\n    const commandJson = {\n      commandType: \"completeTask\",\n      session_id: this.state.session_id,\n      process_id: this.state.process_id,\n      taskID: this.state.taskID,\n      docDefId: this.state.documentViewForm.docDefId,\n      variables: {\n        userAction: {\n          value: \"findDocument\"\n        },\n        doc: {\n          value: JSON.stringify(filterDocument)\n        },\n        size: {\n          value: size\n        },\n        page: {\n          value: page\n        }\n      }\n    }; // console.log(\"JSON Collected: \", commandJson)\n\n    this.sendFieldValues(commandJson);\n  }\n\n  getComponent(fieldItem) {\n    // Create form component by it's \"type\"   \n    if (fieldItem.type === \"Text\") {\n      // if(fieldItem.name === \"PassportNo\"){\n      //   return (\n      //     // <TextField\n      //     //   id = {\"PassportNo\"}\n      //     //   disabled={(this.state.formType === \"view\" || fieldItem.edit === false) ? true : false}\n      //     //   style={{minWidth: 220}}\n      //     //   // defaultValue = {(this.state.fieldValue[fieldItem.name] !== undefined) ? this.state.fieldValue[fieldItem.name]: \"\"}\n      //     //   value = {(this.state.fieldValue[fieldItem.name] !== undefined) ? this.state.fieldValue[fieldItem.name]: \"\"}\n      //     //   // onChange = {this.componentIntChange}\n      //     //   onBlur = {this.handleChange}\n      //     //   name = {fieldItem.name}\n      //     //   InputProps={{inputComponent: NumberFormat}}\n      //     // />\n      //     <FormControl>\n      //       <Input\n      //         name = {fieldItem.name}\n      //         value = {(this.state.fieldValue[fieldItem.name] !== undefined) ? this.state.fieldValue[fieldItem.name]: \"\"}                onChange = {this.handleTextChange}\n      //         onBlur = {this.passportSeriesChange}\n      //         style={{minWidth: 260, maxWidth: 350, height: 30}}\n      //         disabled={(this.props.formType === \"view\" || this.props.edit === false) ? true : false}\n      //         inputComponent={PassportNoMask}\n      //       />\n      //     </FormControl>\n      //   )\n      // } \n      // if (fieldItem.name === \"PassportSeries\") {\n      //   return (\n      //     <FormControl>\n      //       <Input\n      //         name={fieldItem.name}\n      //         value={(this.state.fieldValue[fieldItem.name] !== undefined) ? this.state.fieldValue[fieldItem.name] : \"\"} onChange={this.handleTextChange}\n      //         onBlur={this.passportSeriesChange}\n      //         style={{ width: \"100%\", height: 30 }}\n      //         disabled={(this.props.formType === \"view\" || this.props.edit === false) ? true : false}\n      //         inputComponent={PassportSeriesMask}\n      //       />\n      //     </FormControl>\n      //   )\n      // }\n      // else {\n      return React.createElement(TextField, {\n        id: fieldItem.name,\n        defaultValue: this.state.fieldValue[fieldItem.name] ? this.state.fieldValue[fieldItem.name] : \"\" // onChange={this.handleTextChange}\n        ,\n        onBlur: this.handleTextChange,\n        name: fieldItem.name,\n        len: fieldItem.len,\n        style: {\n          width: \"100%\"\n        },\n        disabled: this.state.formType === \"view\" || fieldItem.edit === false ? true : false,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743\n        },\n        __self: this\n      }); // }\n    } else if (fieldItem.type === \"DateTime\") {\n      return (// <TextField\n        //   type=\"date\"\n        //   onChange = {this.handleTextChange}\n        //   onBlur = {this.handleDateTimeChange}\n        //   name = {fieldItem.name}\n        //   style={{minWidth: 200}}\n        //   disabled={(this.state.formType === \"view\" || fieldItem.edit === false) ? true : false}\n        //   defaultValue = {this.parseDate(this.state.fieldValue[fieldItem.name]) ? this.parseDate(this.state.fieldValue[fieldItem.name]) : \"\" }\n        //   InputLabelProps={{\n        //     shrink: true,\n        //   }}\n        //   size=\"small\"\n        // />\n        React.createElement(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          locale: ruLocale,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 773\n          },\n          __self: this\n        }, React.createElement(DatePicker, {\n          clearable: true,\n          cancelLabel: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\",\n          okLabel: \"\\u041E\\u043A\",\n          clearLabel: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\",\n          invalidDateMessage: \"\\u043D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\",\n          name: fieldItem.name,\n          margin: \"small\",\n          format: \"dd.MM.yyyy\",\n          disabled: this.state.formType === \"view\" || fieldItem.edit === false ? true : false,\n          value: this.state.fieldValue[fieldItem.name] !== undefined ? this.parseDate(this.state.fieldValue[fieldItem.name]) : null,\n          onChange: date => this.handleDateTimeChange(date, fieldItem.name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 774\n          },\n          __self: this\n        }))\n      );\n    } else if (fieldItem.type === \"Enum\") {\n      return React.createElement(FormControl, {\n        variant: \"outlined\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792\n        },\n        __self: this\n      }, React.createElement(Select, {\n        onChange: this.handleSelectChange,\n        name: fieldItem.name,\n        input: React.createElement(OutlinedInput, {\n          name: fieldItem.name,\n          labelWidth: 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 799\n          },\n          __self: this\n        }),\n        disabled: this.state.formType === \"view\" || fieldItem.edit === false ? true : false,\n        value: this.state.fieldValue[fieldItem.name] ? this.state.fieldValue[fieldItem.name] : \"\",\n        style: {\n          height: 30,\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805\n        },\n        __self: this\n      })), this.getEnumValues(fieldItem.enumDef).map((enumValue, index) => React.createElement(MenuItem, {\n        key: index,\n        value: enumValue.Id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808\n        },\n        __self: this\n      }, enumValue.Text))));\n    } else if (fieldItem.type === \"Address\") {\n      return React.createElement(Address, {\n        SOAT: this.props.SOAT,\n        countryChange: this.countryChange,\n        regionChange: this.regionChange,\n        districtChange: this.districtChange,\n        Country: this.state.fieldValue.Country,\n        Region: this.state.fieldValue.Region,\n        District: this.state.fieldValue.District,\n        formType: \"edit\",\n        edit: true,\n        formName: \"AdultsIPRSearchForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    if (this.state.documentViewForm === null) return React.createElement(LinearProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837\n      },\n      __self: this\n    });\n    return React.createElement(Grid, {\n      key: this.state.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      spacing: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: this.state.formSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842\n      },\n      __self: this\n    }, React.createElement(Table, {\n      size: \"small\",\n      id: \"ViewForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843\n      },\n      __self: this\n    }, this.state.subDocument === false && React.createElement(TableHead, {\n      style: {\n        backgroundColor: \"#D3D3FE\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      style: {\n        minHeight: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 15,\n        minHeight: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847\n      },\n      __self: this\n    }, \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\"), React.createElement(TableCell, {\n      style: {\n        color: \"black\",\n        fontSize: 15,\n        minHeight: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u043F\\u0438\\u0441\\u044C\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852\n      },\n      __self: this\n    }, this.state.documentViewForm.attributes.map((fieldItem, index) => React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 854\n      },\n      __self: this\n    }, fieldItem.type !== \"Address\" && React.createElement(TableCell, {\n      key: \"Caption\",\n      align: \"left\",\n      style: {\n        maxWidth: 160\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 856\n      },\n      __self: this\n    }, fieldItem.caption), React.createElement(TableCell, {\n      align: \"left\",\n      style: {\n        maxWidth: 160\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864\n      },\n      __self: this\n    }, this.getComponent(fieldItem)))))), this.state.buttons !== null && this.state.buttons.map((button, index) => {\n      return this.getButton(button, index);\n    })))), React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 881\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 882\n      },\n      __self: this\n    })), this.state.docList === \"[]\" && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885\n      },\n      __self: this\n    }, \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"), this.state.docList !== null && this.state.docList !== \"[]\" && React.createElement(GridForm, {\n      key: \"grid form\",\n      process_id: this.state.process_id,\n      session_id: this.state.session_id,\n      taskID: this.state.taskID,\n      userId: this.state.userId,\n      organizationId: this.state.organizationId,\n      userRole: this.state.userRole,\n      docList: this.state.docList,\n      size: this.state.size,\n      page: this.state.page,\n      Form: this.state.documentViewForm,\n      gridFormButtons: this.state.gridFormButtons,\n      rowsPageChange: this.rowsPageChange,\n      sendFieldValues: this.sendFieldValues,\n      handleCloseCurrentTab: this.handleCloseCurrentTab,\n      clearTabData: this.clearTabData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Person;","map":{"version":3,"sources":["C:\\Users\\Serj\\Desktop\\ismse\\src\\components\\Person\\Person.jsx"],"names":["React","Grid","Card","Table","TableHead","TableRow","TableBody","TableCell","LinearProgress","TextField","Button","Select","MenuItem","FormControl","OutlinedInput","GridForm","Address","swal","Input","MaskedInput","MuiPickersUtilsProvider","DatePicker","DateFnsUtils","ruLocale","toast","Toaster","PassportSeriesMask","props","inputRef","other","ref","inputElement","PassportNoMask","showScanComponent","Person","Component","constructor","handleTextChange","event","fieldValue","state","name","target","value","trim","maxLength","checkLength","length","maxValue","substring","key","getUUID","setState","callErrorToast","handleSelectChange","subDocument","changeSubDocument","buttonClick","currentTarget","filterDocument","attributes","getFieldValues","commandJson","commandType","session_id","process_id","taskID","docDefId","documentViewForm","variables","userAction","doc","JSON","stringify","userId","userRole","size","page","console","log","sendFieldValues","createDocument","getFieldValuesToCreateDoc","clearTabData","createDocumentNRSZ","getFieldValuesNRSZ","age","getPersonAge","Adult","docNRSZ","regionNo","districtNo","adult","checkForEmptyFields","docId","selectedDoc","id","updateDocument","personId","countryChange","regionChange","districtChange","passportSeriesChange","placeOfLivingChange","organizationId","enumData","buttons","gridFormButtons","formType","formSize","docList","ws","bind","rowsPerPageChange","rowsPageChange","handleCloseCurrentTab","callSuccessToast","text","success","duration","position","error","componentDidMount","setDataFromProps","componentDidUpdate","fstate","undefined","parse","docAttr","i","type","enumValueText","handleDateTimeChange","date","newDate","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","convertedDate","parseDate","getEnumValues","enumDef","data","getButton","button","index","margin","backgroundColor","height","fontSize","label","push","chekForExsistedPersonPassport","Passport","fetch","headers","method","body","then","response","string","document","swAlert","uuidv1","require","icon","ok","click","birthday","ageDifMs","now","getTime","ageDate","fullAge","Math","abs","getUTCFullYear","getComponent","fieldItem","len","width","edit","map","enumValue","Id","Text","SOAT","Country","Region","District","render","minHeight","color","maxWidth","caption"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from '@material-ui/core/Card';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport GridForm from \"../GridForm/GridForm.jsx\";\r\nimport Address from \"../Address/Address.jsx\";\r\n// import NumberFormat from 'react-number-format';\r\n// import PropTypes from 'prop-types';\r\nimport swal from 'sweetalert' // https://sweetalert.js.org/guides/\r\nimport Input from '@material-ui/core/Input';\r\nimport MaskedInput from 'react-text-mask';\r\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport ruLocale from \"date-fns/locale/ru\";\r\n\r\nimport toast, { Toaster } from 'react-hot-toast'; // https://react-hot-toast.com/docs\r\n\r\n// function NumberFormatCustom(props) {\r\n//   const {inputRef, onChange, ...other} = props;\r\n\r\n//   return (\r\n//     <NumberFormat\r\n//       {...other}\r\n//       getInputRef={inputRef}\r\n//       onValueChange={values => {\r\n//         onChange({\r\n//           target: {\r\n//             value: values.value,\r\n//           },\r\n//         });\r\n//       }}\r\n//       decimalSeparator={','} \r\n//       isNumericString\r\n//     />\r\n//   );\r\n// }\r\n\r\n// NumberFormatCustom.propTypes = {\r\n//   inputRef: PropTypes.func.isRequired,\r\n//   onChange: PropTypes.func.isRequired,\r\n// }\r\nfunction PassportSeriesMask(props) {\r\n  const { inputRef, ...other } = props;\r\n\r\n  return (\r\n    <MaskedInput\r\n      {...other}\r\n      ref={ref => {\r\n        inputRef(ref ? ref.inputElement : null);\r\n      }}\r\n      mask={[/[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/, /[a-zA-z]/]}\r\n      placeholderChar={'\\u2000'}\r\n    // showMask\r\n    />\r\n  );\r\n}\r\nfunction PassportNoMask(props) {\r\n  const { inputRef, ...other } = props;\r\n\r\n  return (\r\n    <MaskedInput\r\n      {...other}\r\n      ref={ref => {\r\n        inputRef(ref ? ref.inputElement : null);\r\n      }}\r\n      mask={[/[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/]}\r\n      placeholderChar={'\\u2000'}\r\n    // showMask\r\n    />\r\n  );\r\n}\r\nvar showScanComponent = false\r\nclass Person extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      documentViewForm: null,\r\n      selectedDoc: null,\r\n      subDocument: false,\r\n      fieldValue: {},\r\n      process_id: this.props.process_id,\r\n      session_id: this.props.session_id,\r\n      organizationId: this.props.organizationId,\r\n      taskID: this.props.taskID,\r\n      enumData: [],\r\n      buttons: null,\r\n      gridFormButtons: null,\r\n      userId: this.props.userId,\r\n      userRole: this.props.userRole,\r\n      formType: null,\r\n      formSize: 6,\r\n      docList: null,\r\n      size: this.props.size,\r\n      page: this.props.page,\r\n      ws: null,\r\n      key: this.getUUID()\r\n    }\r\n    this.sendFieldValues = this.sendFieldValues.bind(this)\r\n    this.clearTabData = this.clearTabData.bind(this)\r\n    this.rowsPerPageChange = this.rowsPerPageChange.bind(this)\r\n    this.rowsPageChange = this.rowsPageChange.bind(this)\r\n    this.handleCloseCurrentTab = this.handleCloseCurrentTab.bind(this)\r\n    // this.callSuccessToast = this.callSuccessToast.bind(this)\r\n    // this.callErrorToast = this.callErrorToast.bind(this)\r\n  }\r\n\r\n  callSuccessToast(text) {\r\n    toast.success(text, {\r\n      duration: 3000,\r\n      position: 'top-right',\r\n    })\r\n  }\r\n\r\n  callErrorToast(text) {\r\n    toast.error(text, {\r\n      duration: 8000,\r\n      position: 'top-right',\r\n    })\r\n  }\r\n\r\n  handleCloseCurrentTab(process_id) {\r\n    this.props.handleCloseCurrentTab(process_id)\r\n  }\r\n\r\n  clearTabData(process_id) {\r\n    this.props.clearTabData(process_id)\r\n  }\r\n  async componentDidMount() {\r\n    console.log(\"PERSON PROPS\", this.props)\r\n    if (this.state.documentViewForm === null) {\r\n      this.setDataFromProps()\r\n    }\r\n  }\r\n  async componentDidUpdate() {\r\n    if (this.state.documentViewForm === null) {\r\n      this.setDataFromProps()\r\n    }\r\n  }\r\n  async setDataFromProps() {\r\n    let fstate = this.state\r\n    fstate.documentViewForm = this.props.documentViewForm\r\n\r\n    fstate.formType = this.props.formType\r\n    fstate.gridFormButtons = this.props.gridFormButtons\r\n    if (this.props.docList !== null && this.props.docList !== \"null\" && this.props.docList !== undefined) {\r\n      fstate.docList = JSON.parse(this.props.docList)\r\n    }\r\n    if (this.props.subDocument !== undefined) {\r\n      fstate.subDocument = this.props.subDocument\r\n      if (this.props.subDocument === true) {\r\n        fstate.formSize = 12\r\n      }\r\n    }\r\n    if (this.props.buttons !== undefined) {\r\n      fstate.buttons = this.props.buttons\r\n    }\r\n\r\n    if (this.props.enumData !== undefined && this.props.enumData !== null) {\r\n      fstate.enumData = this.props.enumData\r\n      if (this.props.selectedDoc !== null && this.props.selectedDoc !== undefined) {\r\n        fstate.selectedDoc = this.props.selectedDoc\r\n        // console.log(\"SELDOC\", this.props.selectedDoc)\r\n        const docAttr = this.props.selectedDoc.attributes\r\n        for (var i = 0; i < docAttr.length; i++) {\r\n          fstate.fieldValue[docAttr[i].name] = docAttr[i].value\r\n        }\r\n        for (let i = 0; i < docAttr.length; i++) {\r\n          fstate.fieldValue[docAttr[i].name] = docAttr[i].value\r\n          if (this.state.enumData === null) {\r\n            if (docAttr[i].type === \"Enum\") {\r\n              fstate.fieldValue[docAttr[i].name] = docAttr[i].enumValueText\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.props.enumData === undefined || this.props.enumData === null) {\r\n      fstate.enumData = null\r\n    }\r\n    this.setState(fstate)\r\n    if (fstate.fieldValue[\"Country\"] === undefined) {\r\n      fstate.fieldValue[\"Country\"] = \"4170000000000\"\r\n    }\r\n    this.setState(fstate)\r\n  }\r\n  sendFieldValues(commandJson) {\r\n    this.props.sendFieldValues(commandJson)\r\n  }\r\n  // passportSeriesChange=(event)=>{\r\n  //   let value = event.target.value\r\n  //   const regex = /[a-zA-z]/\r\n  //   const chars = event.target.value.split('')\r\n  //   const char = chars.pop()\r\n\r\n  //   if(!regex.test(char)){\r\n  //     console.log(\"not valid\", char)\r\n  //   }\r\n  //   else{\r\n  //     let fieldValue = this.state.fieldValue\r\n  //     fieldValue[event.target.name] = value\r\n  //     this.setState({fieldValue: fieldValue})\r\n  //   }\r\n  // }\r\n  handleTextChange = (event) => {\r\n    // console.log(\"TARGET\", event.target)\r\n    let fieldValue = this.state.fieldValue\r\n    var name = event.target.name\r\n    var value = event.target.value.trim()\r\n    let maxLength = this.checkLength(name)\r\n    // console.log(\"MAXL\", event.target.name, maxLength)\r\n    if (event.target.value.length > maxLength) {\r\n      let maxValue = value.substring(0, maxLength)\r\n      fieldValue[name] = maxValue\r\n      // this.callErrorToast(maxValue)\r\n      this.state.key = this.getUUID()\r\n      this.setState({ fieldValue: fieldValue, key: key })\r\n      this.callErrorToast(\"Длинна данного поля не должна превышать\" + maxLength + \"символов!\")\r\n    }\r\n    else{\r\n      fieldValue[event.target.name] = event.target.value\r\n      this.setState({ fieldValue: fieldValue })\r\n      // let nv = event.target.name + \" : \" + event.target.value\r\n      // this.callSuccessToast(nv)\r\n    }\r\n  }\r\n  checkLength(name) {\r\n    for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\r\n      if (name === this.state.documentViewForm.attributes[i].name) {\r\n        return this.state.documentViewForm.attributes[i].maxLength\r\n      }\r\n    }\r\n  }\r\n  handleSelectChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    this.setState({ fieldValue: fieldValue })\r\n    if (this.state.subDocument === true) {\r\n      this.props.changeSubDocument(event.target.name, event.target.value)\r\n    }\r\n    // this.callSuccessToast(\"2\")\r\n  }\r\n  handleDateTimeChange(date, name) {\r\n    // console.log(\"EV\", date, name)\r\n    let fieldValue = this.state.fieldValue\r\n    if (date !== null) {\r\n      var newDate = new Date(date)\r\n      var dd = String(newDate.getDate()).padStart(2, '0')\r\n      var mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\r\n      var yyyy = newDate.getFullYear()\r\n      var convertedDate = String(dd + '.' + mm + '.' + yyyy)\r\n      // console.log(\"CDATE\", convertedDate)\r\n      fieldValue[name] = convertedDate\r\n      if (this.state.subDocument === true) this.props.changeSubDocument(name, convertedDate)\r\n      this.setState({ fieldValue: fieldValue })\r\n    }\r\n    else {\r\n      fieldValue[name] = undefined\r\n      if (this.state.subDocument === true) this.props.changeSubDocument(name, convertedDate)\r\n      this.setState({ fieldValue: fieldValue })\r\n    }\r\n\r\n    // let fieldValue = this.state.fieldValue\r\n    // var newDate = new Date(event.target.value)\r\n    // var dd = String(newDate.getDate()).padStart(2, '0')\r\n    // var mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\r\n    // var yyyy = newDate.getFullYear()\r\n    // var convertedDate = String(dd + '.' + mm + '.' + yyyy)\r\n    // fieldValue[event.target.name] = convertedDate\r\n    // if (this.state.subDocument === true)  this.props.changeSubDocument(event.target.name, convertedDate)\r\n    // this.setState({fieldValue: fieldValue})\r\n  }\r\n  parseDate(date) {\r\n    // Parsing DAteTime to appropriate format\r\n    if (date !== undefined && date !== null) {\r\n      var dd = date.substring(0, 2)\r\n      var mm = date.substring(3, 5)\r\n      var yyyy = date.substring(6, 10)\r\n      var convertedDate = String(yyyy + '-' + mm + '-' + dd)\r\n      var newDate = new Date(convertedDate) // \"2017-01-26\"\r\n      dd = String(newDate.getDate()).padStart(2, '0')\r\n      mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\r\n      yyyy = newDate.getFullYear()\r\n      convertedDate = yyyy + '-' + mm + '-' + dd\r\n    }\r\n    // console.log(\"DATE\", convertedDate)\r\n    return convertedDate\r\n  }\r\n  getEnumValues(enumDef) {\r\n    // Get items to show in \"Select\" component\r\n    // console.log(\"ENUM value search\", this.state.enumData)\r\n    for (let i = 0; i < this.state.enumData.length; i++)\r\n      if (this.state.enumData[i].enumDef === enumDef) {\r\n        return this.state.enumData[i].data;\r\n      }\r\n    return null\r\n  }\r\n  rowsPerPageChange(size) {\r\n    // Hendler of selected amount of rows to show on Table form\r\n    const filterDocument = { attributes: this.getFieldValues() }\r\n    const commandJson =\r\n    {\r\n      commandType: \"completeTask\",\r\n      session_id: this.state.session_id,\r\n      process_id: this.state.process_id,\r\n      taskID: this.state.taskID,\r\n      docDefId: this.state.documentViewForm.docDefId,\r\n      variables: {\r\n        userAction: { value: \"findDocument\" },\r\n        doc: { value: JSON.stringify(filterDocument) },\r\n        size: { value: size },\r\n        page: { value: 1 }\r\n      }\r\n    }\r\n    this.sendFieldValues(commandJson)\r\n  }\r\n  getButton(button, index) {\r\n    // Create buttons related to form\r\n    if (button.name === \"attachDocument\")\r\n      return (\r\n        showScanComponent = true\r\n      )\r\n    else\r\n      return (\r\n        <Button\r\n          name={button.name}\r\n          variant=\"outlined\"\r\n          style={{\r\n            margin: 3,\r\n            backgroundColor: button.backgroundColor,\r\n            height: 32,\r\n            fontSize: 12\r\n          }}\r\n          onClick={this.buttonClick}\r\n          value={button.name}\r\n        >\r\n          {button.label}\r\n        </Button>\r\n      )\r\n  }\r\n  getFieldValuesNRSZ() {\r\n    // Collect data to create document in NRSZ DB\r\n    var attributes = {}\r\n    // console.log(\"Docview form GET\", this.state.documentViewForm)\r\n    for (var key in this.state.fieldValue) {\r\n      if (key !== \"Country\" && key !== \"Region\" && key !== \"District\") {\r\n        if (key === \"Date_of_Issue\" || key === \"Date_of_Birth\") {\r\n          attributes[key] = this.parseDate(this.state.fieldValue[key])\r\n        }\r\n        else attributes[key] = this.state.fieldValue[key]\r\n      }\r\n    }\r\n    // console.log(\"Variables\", attributes)\r\n    return attributes\r\n  }\r\n  getFieldValues() {\r\n    // Collect all data from form fields\r\n    var attributes = []\r\n    // console.log(\"Docview form GET\", this.state.documentViewForm)\r\n    for (var key in this.state.fieldValue) {\r\n      if (key !== \"Country\" && key !== \"Region\" && key !== \"District\") {\r\n        for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\r\n          if (key === this.state.documentViewForm.attributes[i].name) {\r\n            attributes.push({\r\n              name: this.state.documentViewForm.attributes[i].name,\r\n              value: this.state.fieldValue[key],\r\n              type: this.state.documentViewForm.attributes[i].type,\r\n            })\r\n          }\r\n        }\r\n      }\r\n      // console.log(\"item\",key)\r\n    }\r\n    // console.log(\"Variables\", attributes)\r\n    return attributes\r\n  }\r\n  getFieldValuesToCreateDoc() {\r\n    // Collect all data from form fields\r\n    var attributes = []\r\n    // console.log(\"Docview form GET\", this.state.documentViewForm)\r\n    for (var key in this.state.fieldValue) {\r\n      if (key !== \"IIN\") {\r\n        for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\r\n          if (key === this.state.documentViewForm.attributes[i].name) {\r\n            attributes.push({\r\n              name: this.state.documentViewForm.attributes[i].name,\r\n              value: this.state.fieldValue[key],\r\n              type: this.state.documentViewForm.attributes[i].type,\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return attributes\r\n  }\r\n  checkForEmptyFields(commandJson) {\r\n    // Controls on obligated fields\r\n    if (this.state.fieldValue[\"Last_Name\"] !== \"\" && this.state.fieldValue[\"Last_Name\"] !== undefined) {\r\n      if (this.state.fieldValue[\"Date_of_Birth\"] !== \"01.01.1970\" && this.state.fieldValue[\"Date_of_Birth\"] !== undefined) {\r\n        if (this.state.fieldValue[\"Sex\"] !== null && this.state.fieldValue[\"Sex\"] !== undefined) {\r\n          if (this.state.fieldValue[\"FamilyState\"] !== null && this.state.fieldValue[\"FamilyState\"] !== undefined) {\r\n            if (this.state.fieldValue[\"PassportType\"] !== null && this.state.fieldValue[\"PassportType\"] !== undefined) {\r\n              if(this.state.fieldValue[\"PassportSeries\"] !== \"\" && this.state.fieldValue[\"PassportSeries\"] !== undefined){\r\n                if(this.state.fieldValue[\"PassportNo\"] !== \"\" && this.state.fieldValue[\"PassportNo\"] !== undefined){\r\n              if (this.state.fieldValue[\"Issuing_Authority\"] !== \"\" && this.state.fieldValue[\"Issuing_Authority\"] !== undefined) {\r\n                if (this.state.fieldValue[\"Date_of_Issue\"] !== \"01.01.1970\" && this.state.fieldValue[\"Date_of_Issue\"] !== undefined) {\r\n                  if (this.state.fieldValue[\"Region\"] !== null && this.state.fieldValue[\"Region\"] !== undefined) {\r\n                    if (this.state.fieldValue[\"District\"] !== null && this.state.fieldValue[\"District\"] !== undefined) {\r\n                      // this.sendFieldValues(commandJson)\r\n                      // this.clearTabData(this.state.process_id)\r\n                      this.chekForExsistedPersonPassport(commandJson)\r\n                    } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Район\\\"\")\r\n                  } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Область\\\"\")\r\n                } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Дата выдачи\\\"\")\r\n              } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Выдавший орган\\\"\")\r\n                }else this.callErrorToast(\"Пожалуйста заполните поле \\\"Номер\\\"\")\r\n              }else this.callErrorToast(\"Пожалуйста заполните поле \\\"Серия\\\"\")\r\n            } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Типы удостоверяющих документов\\\"\")\r\n          } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Семейное положение\\\"\")\r\n        } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Пол\\\"\")\r\n      } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Дата рождения\\\"\")\r\n    } else this.callErrorToast(\"Пожалуйста заполните поле \\\"Фамилия\\\"\")\r\n  }\r\n  async chekForExsistedPersonPassport(commandJson) {\r\n    var Passport = { attributes: [{ name: \"PassportSeries\", value: this.state.fieldValue[\"PassportSeries\"], type: \"Text\" }, { name: \"PassportNo\", value: this.state.fieldValue[\"PassportNo\"], type: \"Text\" }] }\r\n    await fetch(\"api/Document/FilterDocumentsByDefId?defId=\" + this.state.documentViewForm.docDefId + \"&size=10&page=1&userId=\" + this.state.userId, {\r\n      headers: {\r\n        \"Accept\": \"application/x-www-form-urlencoded\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(Passport),\r\n      // mode: 'no-cors'\r\n    })\r\n      .then(response => {\r\n        console.log(\"CHK PASPORT\", response)\r\n        response.text().then(string => {\r\n          var document = JSON.parse(string)\r\n          if (document.length === 0) {\r\n            // this.clearTabData(this.state.process_id)\r\n            // this.sendFieldValues(commandJson)\r\n          }\r\n          else this.swAlert(\"Гражданин с таким номером пасспорта уже существует!\")\r\n          // console.log(\"RESPONSE\", document)\r\n        })\r\n      })\r\n  }\r\n  getUUID() {\r\n    const uuidv1 = require(\"uuid/v1\")\r\n    return uuidv1()\r\n  }\r\n  swAlert(text) {\r\n    return (\r\n      swal({\r\n        text: text,\r\n        icon: \"warning\",\r\n        buttons: { ok: \"Ок\" },\r\n        // dangerMode: true,\r\n      })\r\n        .then((click) => {\r\n          if (click === \"ok\") {\r\n            console.log(\"CLICK OK\", click)\r\n          }\r\n        })\r\n    )\r\n  }\r\n  getPersonAge() {\r\n    var birthday = new Date(this.parseDate(this.state.fieldValue[\"Date_of_Birth\"]))\r\n    var ageDifMs = Date.now() - birthday.getTime()\r\n    var ageDate = new Date(ageDifMs); // miliseconds from epoch\r\n    var fullAge = Math.abs(ageDate.getUTCFullYear() - 1970)\r\n    console.log(\"AGE\", fullAge)\r\n    return fullAge\r\n  }\r\n  buttonClick = (event) => {\r\n    // console.log(\"Event\", event.currentTarget.name)\r\n    if (event.currentTarget.name === \"findDocument\") {\r\n      const filterDocument = { attributes: this.getFieldValues() }\r\n      const commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        docDefId: this.state.documentViewForm.docDefId,\r\n        variables: {\r\n          userAction: { value: \"findDocument\" },\r\n          doc: { value: JSON.stringify(filterDocument) },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole },\r\n          size: { value: 10 },\r\n          page: { value: 1 }\r\n        }\r\n      }\r\n      console.log(\"button findDocument Person: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n    }\r\n    else if (event.currentTarget.name === \"createDocument\") {\r\n      const createDocument = { attributes: this.getFieldValuesToCreateDoc() }\r\n      const commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"createDocument\" },\r\n          doc: { value: JSON.stringify(createDocument) },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole }\r\n        }\r\n      }\r\n      console.log(\"Create Document: \", commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n      // this.setState({documentViewForm: null})\r\n      this.sendFieldValues(commandJson)\r\n    }\r\n    else if (event.currentTarget.name === \"saveDocument\") {\r\n      const createDocumentNRSZ = this.getFieldValuesNRSZ()\r\n      const createDocument = { attributes: this.getFieldValues() }\r\n      let age = this.getPersonAge()\r\n      const Adult = (age >= 18) ? \"True\" : \"False\"\r\n      const commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"saveDocument\" },\r\n          docNRSZ: { value: JSON.stringify(createDocumentNRSZ) },\r\n          doc: { value: JSON.stringify(createDocument) },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole },\r\n          docDefId: { value: this.state.documentViewForm.docDefId },\r\n          regionNo: { value: this.state.fieldValue[\"Region\"] },\r\n          districtNo: { value: this.state.fieldValue[\"District\"] },\r\n          adult: { value: Adult }\r\n        }\r\n      }\r\n      console.log(\"button saveDocument: \", commandJson)\r\n      // this.clearTabData(this.state.process_id)\r\n      this.checkForEmptyFields(commandJson)\r\n    }\r\n    else if (event.currentTarget.name === \"deleteDocument\") {\r\n      // const filterDocument = {attributes: this.getFieldValues()}\r\n      const commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"deleteDocument\" },\r\n          docId: { value: this.state.selectedDoc.id },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole }\r\n        }\r\n      }\r\n      console.log(\"button deleteDocument: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n    }\r\n    else if (event.currentTarget.name === \"updateDocument\") {\r\n      const updateDocument = { attributes: this.getFieldValues() }\r\n      let age = this.getPersonAge()\r\n      const Adult = (age >= 18) ? \"True\" : \"False\"\r\n      const commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"updateDocument\" },\r\n          doc: { value: JSON.stringify(updateDocument) },\r\n          personId: { value: this.state.selectedDoc.id },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole },\r\n          adult: { value: Adult }\r\n        }\r\n      }\r\n      console.log(\"button updateDocument: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n    }\r\n    else if (event.currentTarget.name === \"cancel\") {\r\n      const commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"cancel\" },\r\n          docId: { value: \"null\" }\r\n        }\r\n      }\r\n      this.sendFieldValues(commandJson)\r\n      // this.clearTabData(this.state.process_id)\r\n      // this.closeTab(this.state.process_id)\r\n      console.log(\"Button cancel\", commandJson)\r\n    }\r\n    else if (event.currentTarget.name === \"back\") {\r\n      const commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: { userAction: { value: \"back\" } }\r\n      }\r\n      this.sendFieldValues(commandJson)\r\n      console.log(\"Button back\")\r\n    }\r\n  }\r\n  rowsPageChange(size, page) {\r\n    // console.log(\"Rows changed: \", size)\r\n    const filterDocument = { attributes: this.getFieldValues() }\r\n    const commandJson =\r\n    {\r\n      commandType: \"completeTask\",\r\n      session_id: this.state.session_id,\r\n      process_id: this.state.process_id,\r\n      taskID: this.state.taskID,\r\n      docDefId: this.state.documentViewForm.docDefId,\r\n      variables: {\r\n        userAction: { value: \"findDocument\" },\r\n        doc: { value: JSON.stringify(filterDocument) },\r\n        size: { value: size },\r\n        page: { value: page }\r\n      }\r\n    }\r\n    // console.log(\"JSON Collected: \", commandJson)\r\n    this.sendFieldValues(commandJson)\r\n  }\r\n  countryChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    fieldValue[\"Region\"] = null\r\n    fieldValue[\"District\"] = null\r\n    // console.log(\"Country selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  regionChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    fieldValue[\"District\"] = null\r\n    // console.log(\"Region selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  districtChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    // console.log(\"District selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  passportSeriesChange = (event) => {\r\n    // event.preventDefault()\r\n    var value = event.target.value.trim()\r\n    // console.log(\"PasportSer\", event.target.value)\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = value\r\n    this.setState({ fieldValue: fieldValue })\r\n    // if(value === \"\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\"){\r\n    //   // console.log(\"PasportSer null\")\r\n    //   let fieldValue = this.state.fieldValue\r\n    //   fieldValue[event.target.name] = null\r\n    //   this.setState({fieldValue: fieldValue})\r\n    // }\r\n    // else{\r\n    //   for(let i=value.length; i>0; i--){\r\n    //     let lastChar = value.substring(i -1, i)\r\n    //     // console.log(\"LAST\", lastChar)\r\n    //     if(lastChar !== '\\u2000'){\r\n    //       let fieldValue = this.state.fieldValue\r\n    //       fieldValue[event.target.name] = value\r\n    //       this.setState({fieldValue: fieldValue})\r\n    //       break\r\n    //     }\r\n    //     value = value.substring(0, value.length -1)\r\n    //   }\r\n    // }\r\n  }\r\n  placeOfLivingChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    fieldValue[\"District\"] = null\r\n    // console.log(\"Region selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  getComponent(fieldItem) {\r\n    // Create form component by it's \"type\"   \r\n    if (fieldItem.type === \"Text\") {\r\n      // if(fieldItem.name === \"PassportNo\"){\r\n      //   return (\r\n      //     // <TextField\r\n      //     //   id = {\"PassportNo\"}\r\n      //     //   disabled={(this.state.formType === \"view\" || fieldItem.edit === false) ? true : false}\r\n      //     //   style={{minWidth: 220}}\r\n      //     //   // defaultValue = {(this.state.fieldValue[fieldItem.name] !== undefined) ? this.state.fieldValue[fieldItem.name]: \"\"}\r\n      //     //   value = {(this.state.fieldValue[fieldItem.name] !== undefined) ? this.state.fieldValue[fieldItem.name]: \"\"}\r\n      //     //   // onChange = {this.componentIntChange}\r\n      //     //   onBlur = {this.handleChange}\r\n      //     //   name = {fieldItem.name}\r\n      //     //   InputProps={{inputComponent: NumberFormat}}\r\n      //     // />\r\n      //     <FormControl>\r\n      //       <Input\r\n      //         name = {fieldItem.name}\r\n      //         value = {(this.state.fieldValue[fieldItem.name] !== undefined) ? this.state.fieldValue[fieldItem.name]: \"\"}                onChange = {this.handleTextChange}\r\n      //         onBlur = {this.passportSeriesChange}\r\n      //         style={{minWidth: 260, maxWidth: 350, height: 30}}\r\n      //         disabled={(this.props.formType === \"view\" || this.props.edit === false) ? true : false}\r\n      //         inputComponent={PassportNoMask}\r\n      //       />\r\n      //     </FormControl>\r\n      //   )\r\n      // } \r\n      // if (fieldItem.name === \"PassportSeries\") {\r\n      //   return (\r\n      //     <FormControl>\r\n      //       <Input\r\n      //         name={fieldItem.name}\r\n      //         value={(this.state.fieldValue[fieldItem.name] !== undefined) ? this.state.fieldValue[fieldItem.name] : \"\"} onChange={this.handleTextChange}\r\n      //         onBlur={this.passportSeriesChange}\r\n      //         style={{ width: \"100%\", height: 30 }}\r\n      //         disabled={(this.props.formType === \"view\" || this.props.edit === false) ? true : false}\r\n      //         inputComponent={PassportSeriesMask}\r\n      //       />\r\n      //     </FormControl>\r\n      //   )\r\n      // }\r\n      // else {\r\n        return (\r\n          <TextField\r\n            id={fieldItem.name}\r\n            defaultValue={this.state.fieldValue[fieldItem.name] ? this.state.fieldValue[fieldItem.name] : \"\"}\r\n            // onChange={this.handleTextChange}\r\n            onBlur={this.handleTextChange}\r\n            name={fieldItem.name}\r\n            len={fieldItem.len}\r\n            style={{ width: \"100%\" }}\r\n            disabled={(this.state.formType === \"view\" || fieldItem.edit === false) ? true : false}\r\n            size=\"small\"\r\n          />\r\n        )\r\n      // }\r\n    }\r\n\r\n    else if (fieldItem.type === \"DateTime\") {\r\n      return (\r\n        // <TextField\r\n        //   type=\"date\"\r\n        //   onChange = {this.handleTextChange}\r\n        //   onBlur = {this.handleDateTimeChange}\r\n        //   name = {fieldItem.name}\r\n        //   style={{minWidth: 200}}\r\n        //   disabled={(this.state.formType === \"view\" || fieldItem.edit === false) ? true : false}\r\n        //   defaultValue = {this.parseDate(this.state.fieldValue[fieldItem.name]) ? this.parseDate(this.state.fieldValue[fieldItem.name]) : \"\" }\r\n        //   InputLabelProps={{\r\n        //     shrink: true,\r\n        //   }}\r\n        //   size=\"small\"\r\n        // />\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\r\n          <DatePicker\r\n            clearable\r\n            cancelLabel=\"Отмена\"\r\n            okLabel=\"Ок\"\r\n            clearLabel=\"Очистить\"\r\n            invalidDateMessage=\"неверный формат\"\r\n            name={fieldItem.name}\r\n            margin=\"small\"\r\n            format=\"dd.MM.yyyy\"\r\n            disabled={(this.state.formType === \"view\" || fieldItem.edit === false) ? true : false}\r\n            value={(this.state.fieldValue[fieldItem.name] !== undefined) ? this.parseDate(this.state.fieldValue[fieldItem.name]) : null}\r\n            onChange={date => this.handleDateTimeChange(date, fieldItem.name)}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      )\r\n    }\r\n    else if (fieldItem.type === \"Enum\") {\r\n      return (\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          <Select\r\n            onChange={this.handleSelectChange}\r\n            name={fieldItem.name}\r\n            input={<OutlinedInput name={fieldItem.name} labelWidth={0} />}\r\n            disabled={(this.state.formType === \"view\" || fieldItem.edit === false) ? true : false}\r\n            value={(this.state.fieldValue[fieldItem.name]) ? this.state.fieldValue[fieldItem.name] : \"\"}\r\n            style={{ height: 30, width: \"100%\" }}\r\n          >\r\n            <MenuItem value={null}>\r\n              <em></em>\r\n            </MenuItem>\r\n            {this.getEnumValues(fieldItem.enumDef).map((enumValue, index) => (\r\n              <MenuItem\r\n                key={index}\r\n                value={enumValue.Id}\r\n              >\r\n                {enumValue.Text}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      )\r\n    }\r\n    else if (fieldItem.type === \"Address\") {\r\n      return (\r\n        <Address\r\n          SOAT={this.props.SOAT}\r\n          countryChange={this.countryChange}\r\n          regionChange={this.regionChange}\r\n          districtChange={this.districtChange}\r\n          Country={this.state.fieldValue.Country}\r\n          Region={this.state.fieldValue.Region}\r\n          District={this.state.fieldValue.District}\r\n          formType={\"edit\"}\r\n          edit={true}\r\n          formName={\"AdultsIPRSearchForm\"}\r\n        />\r\n      )\r\n    }\r\n  }\r\n  render() {\r\n    if (this.state.documentViewForm === null) return <LinearProgress />\r\n    return (\r\n      <Grid key={this.state.key}>\r\n        <Grid container direction=\"row\" justify=\"flex-start\" spacing={0}>\r\n          <Grid item xs={this.state.formSize}>\r\n            <Card>\r\n              <Table size=\"small\" id=\"ViewForm\">\r\n                {this.state.subDocument === false &&\r\n                  <TableHead style={{ backgroundColor: \"#D3D3FE\" }}>\r\n                    <TableRow style={{ minHeight: 50 }}>\r\n                      <TableCell style={{ color: \"black\", fontSize: 15, minHeight: 50 }}>Наименование</TableCell>\r\n                      <TableCell style={{ color: \"black\", fontSize: 15, minHeight: 50 }}>Запись</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                }\r\n                <TableBody>\r\n                  {this.state.documentViewForm.attributes.map((fieldItem, index) => (\r\n                    <TableRow style={{ height: 30 }}>\r\n                      {fieldItem.type !== \"Address\" &&\r\n                        <TableCell\r\n                          key=\"Caption\"\r\n                          align=\"left\"\r\n                          style={{ maxWidth: 160 }}\r\n                        >\r\n                          {fieldItem.caption}\r\n                        </TableCell>\r\n                      }\r\n                      <TableCell\r\n                        align=\"left\"\r\n                        style={{ maxWidth: 160 }}\r\n                      >\r\n                        {this.getComponent(fieldItem)}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n              {this.state.buttons !== null &&\r\n                this.state.buttons.map((button, index) => {\r\n                  return this.getButton(button, index)\r\n                })}\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid>\r\n          <br></br>\r\n        </Grid>\r\n        {this.state.docList === \"[]\" &&\r\n          <div>Нет данных</div>\r\n        }\r\n        {this.state.docList !== null && this.state.docList !== \"[]\" &&\r\n          <GridForm key=\"grid form\"\r\n            process_id={this.state.process_id}\r\n            session_id={this.state.session_id}\r\n            taskID={this.state.taskID}\r\n            userId={this.state.userId}\r\n            organizationId={this.state.organizationId}\r\n            userRole={this.state.userRole}\r\n            docList={this.state.docList}\r\n            size={this.state.size}\r\n            page={this.state.page}\r\n            Form={this.state.documentViewForm}\r\n            gridFormButtons={this.state.gridFormButtons}\r\n            rowsPageChange={this.rowsPageChange}\r\n            sendFieldValues={this.sendFieldValues}\r\n            handleCloseCurrentTab={this.handleCloseCurrentTab}\r\n            clearTabData={this.clearTabData}\r\n          >\r\n          </GridForm>\r\n        }\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\nexport default Person"]},"metadata":{},"sourceType":"module"}