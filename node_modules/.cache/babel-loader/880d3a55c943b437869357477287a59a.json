{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Serj\\\\Desktop\\\\ismse\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Serj\\\\Desktop\\\\ismse\\\\src\\\\lib\\\\components\\\\Provider.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactKeycloakContext from './Context';\nconst initialState = {\n  initialized: false,\n  isLoading: true,\n  token: undefined\n};\n\nclass KeycloakProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = _objectSpread({}, initialState);\n\n    this.onKeycloakError = event => error => {\n      const _this$props = this.props,\n            onError = _this$props.onError,\n            onEvent = _this$props.onEvent; // @Deprecated: Remove on next major\n\n      onError && onError(error); // Notify Events listener\n\n      onEvent && onEvent(event, error);\n    };\n\n    this.updateState = event => () => {\n      const _this$props2 = this.props,\n            keycloak = _this$props2.keycloak,\n            onEvent = _this$props2.onEvent,\n            onToken = _this$props2.onToken,\n            onTokens = _this$props2.onTokens,\n            isLoadingCheck = _this$props2.isLoadingCheck;\n      const _this$state = this.state,\n            prevInitialized = _this$state.initialized,\n            prevLoading = _this$state.isLoading,\n            prevToken = _this$state.token;\n      const idToken = keycloak.idToken,\n            refreshToken = keycloak.refreshToken,\n            newToken = keycloak.token; // Notify Events listener\n\n      onEvent && onEvent(event); // Check Loading state\n\n      const isLoading = isLoadingCheck ? isLoadingCheck(keycloak) : false; // Avoid double-refresh if state hasn't changed\n\n      if (!prevInitialized || isLoading !== prevLoading || newToken !== prevToken) {\n        this.setState({\n          initialized: true,\n          isLoading,\n          token: newToken\n        });\n      } // Notify token listener, if any\n\n\n      if (newToken !== prevToken) {\n        // @Deprecated: Remove on next major\n        onToken && onToken(newToken);\n        onTokens && onTokens({\n          idToken,\n          refreshToken,\n          token: newToken\n        });\n      }\n    };\n\n    this.refreshKeycloakToken = event => () => {\n      const _this$props3 = this.props,\n            keycloak = _this$props3.keycloak,\n            onEvent = _this$props3.onEvent; // Notify Events listener\n\n      onEvent && onEvent(event); // Refresh Keycloak token\n\n      keycloak.updateToken();\n    };\n\n    const _keycloak = props.keycloak;\n\n    if (!_keycloak) {\n      throw new Error(\"KeycloakProvider requires 'keycloak' prop to be defined\");\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.init();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentDidUpdate({\n    keycloak: prevKeycloak\n  }) {\n    if (this.props.keycloak !== prevKeycloak) {\n      // De-init previous Keycloak instance\n      prevKeycloak.onReady = null;\n      prevKeycloak.onAuthSuccess = null;\n      prevKeycloak.onAuthError = null;\n      prevKeycloak.onAuthRefreshSuccess = null;\n      prevKeycloak.onAuthRefreshError = null;\n      prevKeycloak.onAuthLogout = null;\n      prevKeycloak.onTokenExpired = null; // Reset state\n\n      this.setState(_objectSpread({}, initialState)); // Init new Keycloak instance\n\n      this.init();\n    }\n  }\n\n  init() {\n    const _this$props4 = this.props,\n          initConfig = _this$props4.initConfig,\n          keycloak = _this$props4.keycloak; // Attach Keycloak listeners\n\n    keycloak.onReady = this.updateState('onReady');\n    keycloak.onAuthSuccess = this.updateState('onAuthSuccess');\n    keycloak.onAuthError = this.onKeycloakError('onAuthError');\n    keycloak.onAuthRefreshSuccess = this.updateState('onAuthRefreshSuccess');\n    keycloak.onAuthRefreshError = this.onKeycloakError('onAuthRefreshError');\n    keycloak.onAuthLogout = this.updateState('onAuthLogout');\n    keycloak.onTokenExpired = this.refreshKeycloakToken('onTokenExpired'); // keycloak.init({ ...initConfig });\n\n    keycloak.init({\n      onLoad: 'login-required',\n      \"checkLoginIframe\": false\n    });\n  }\n\n  render() {\n    const _this$props5 = this.props,\n          children = _this$props5.children,\n          keycloak = _this$props5.keycloak,\n          LoadingComponent = _this$props5.LoadingComponent;\n    const _this$state2 = this.state,\n          initialized = _this$state2.initialized,\n          isLoading = _this$state2.isLoading;\n\n    if (!!LoadingComponent && (!initialized || isLoading)) {\n      return LoadingComponent;\n    }\n\n    return React.createElement(ReactKeycloakContext.Provider, {\n      value: {\n        initialized,\n        keycloak\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, children);\n  }\n\n}\n\nKeycloakProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n  keycloak: PropTypes.shape({\n    init: PropTypes.func.isRequired,\n    updateToken: PropTypes.func.isRequired\n  }).isRequired,\n  initConfig: PropTypes.shape({}),\n  isLoadingCheck: PropTypes.func,\n  LoadingComponent: PropTypes.element,\n  onError: PropTypes.func,\n  onEvent: PropTypes.func,\n  onToken: PropTypes.func\n};\nKeycloakProvider.defaultProps = {\n  initConfig: {\n    onLoad: 'check-sso'\n  },\n  isLoadingCheck: null,\n  LoadingComponent: null,\n  onError: null,\n  onEvent: null,\n  onToken: null\n};\nexport default KeycloakProvider;","map":{"version":3,"sources":["C:\\Users\\Serj\\Desktop\\ismse\\src\\lib\\components\\Provider.js"],"names":["React","Component","PropTypes","ReactKeycloakContext","initialState","initialized","isLoading","token","undefined","KeycloakProvider","constructor","props","state","onKeycloakError","event","error","onError","onEvent","updateState","keycloak","onToken","onTokens","isLoadingCheck","prevInitialized","prevLoading","prevToken","idToken","refreshToken","newToken","setState","refreshKeycloakToken","updateToken","Error","componentDidMount","_isMounted","init","componentWillUnmount","componentDidUpdate","prevKeycloak","onReady","onAuthSuccess","onAuthError","onAuthRefreshSuccess","onAuthRefreshError","onAuthLogout","onTokenExpired","initConfig","onLoad","render","children","LoadingComponent","propTypes","element","isRequired","shape","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ReactKeycloakContext from './Context';\n\nconst initialState = {\n  initialized: false,\n  isLoading: true,\n  token: undefined,\n};\n\nclass KeycloakProvider extends Component {\n  state = { ...initialState };\n\n  constructor(props) {\n    super(props);\n\n    const { keycloak } = props;\n    if (!keycloak) {\n      throw new Error(\"KeycloakProvider requires 'keycloak' prop to be defined\");\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.init();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentDidUpdate({ keycloak: prevKeycloak }) {\n    if (this.props.keycloak !== prevKeycloak) {\n      // De-init previous Keycloak instance\n      prevKeycloak.onReady = null;\n      prevKeycloak.onAuthSuccess = null;\n      prevKeycloak.onAuthError = null;\n      prevKeycloak.onAuthRefreshSuccess = null;\n      prevKeycloak.onAuthRefreshError = null;\n      prevKeycloak.onAuthLogout = null;\n      prevKeycloak.onTokenExpired = null;\n\n      // Reset state\n      this.setState({ ...initialState });\n      // Init new Keycloak instance\n      this.init();\n    }\n  }\n\n  init() {\n    const { initConfig, keycloak } = this.props;\n\n    // Attach Keycloak listeners\n    keycloak.onReady = this.updateState('onReady');\n    keycloak.onAuthSuccess = this.updateState('onAuthSuccess');\n    keycloak.onAuthError = this.onKeycloakError('onAuthError');\n    keycloak.onAuthRefreshSuccess = this.updateState('onAuthRefreshSuccess');\n    keycloak.onAuthRefreshError = this.onKeycloakError('onAuthRefreshError');\n    keycloak.onAuthLogout = this.updateState('onAuthLogout');\n    keycloak.onTokenExpired = this.refreshKeycloakToken('onTokenExpired');\n\n    // keycloak.init({ ...initConfig });\n    keycloak.init({onLoad: 'login-required',\"checkLoginIframe\" : false})\n  }\n\n  onKeycloakError = event => error => {\n    const { onError, onEvent } = this.props;\n    // @Deprecated: Remove on next major\n    onError && onError(error);\n\n    // Notify Events listener\n    onEvent && onEvent(event, error);\n  };\n\n  updateState = event => () => {\n    const { keycloak, onEvent, onToken, onTokens, isLoadingCheck } = this.props;\n    const {\n      initialized: prevInitialized,\n      isLoading: prevLoading,\n      token: prevToken,\n    } = this.state;\n    const { idToken, refreshToken, token: newToken } = keycloak;\n\n    // Notify Events listener\n    onEvent && onEvent(event);\n\n    // Check Loading state\n    const isLoading = isLoadingCheck ? isLoadingCheck(keycloak) : false;\n\n    // Avoid double-refresh if state hasn't changed\n    if (\n      !prevInitialized ||\n      isLoading !== prevLoading ||\n      newToken !== prevToken\n    ) {\n      this.setState({\n        initialized: true,\n        isLoading,\n        token: newToken,\n      });\n    }\n\n    // Notify token listener, if any\n    if (newToken !== prevToken) {\n      // @Deprecated: Remove on next major\n      onToken && onToken(newToken);\n\n      onTokens &&\n        onTokens({\n          idToken,\n          refreshToken,\n          token: newToken,\n        });\n    }\n  };\n\n  refreshKeycloakToken = event => () => {\n    const { keycloak, onEvent } = this.props;\n    // Notify Events listener\n    onEvent && onEvent(event);\n\n    // Refresh Keycloak token\n    keycloak.updateToken();\n  };\n\n  render() {\n    const { children, keycloak, LoadingComponent } = this.props;\n    const { initialized, isLoading } = this.state;\n\n    if (!!LoadingComponent && (!initialized || isLoading)) {\n      return LoadingComponent;\n    }\n\n    return (\n      <ReactKeycloakContext.Provider value={{ initialized, keycloak }}>\n        {children}\n      </ReactKeycloakContext.Provider>\n    );\n  }\n}\n\nKeycloakProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n  keycloak: PropTypes.shape({\n    init: PropTypes.func.isRequired,\n    updateToken: PropTypes.func.isRequired,\n  }).isRequired,\n  initConfig: PropTypes.shape({}),\n  isLoadingCheck: PropTypes.func,\n  LoadingComponent: PropTypes.element,\n  onError: PropTypes.func,\n  onEvent: PropTypes.func,\n  onToken: PropTypes.func,\n};\n\nKeycloakProvider.defaultProps = {\n  initConfig: {\n    onLoad: 'check-sso',\n  },\n  isLoadingCheck: null,\n  LoadingComponent: null,\n  onError: null,\n  onEvent: null,\n  onToken: null,\n};\n\nexport default KeycloakProvider;\n"]},"metadata":{},"sourceType":"module"}