{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\ismse\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\SERGO\\\\Desktop\\\\ismse\\\\src\\\\components\\\\ViewForm\\\\ViewForm.jsx\";\n// Import material and react components\nimport React from \"react\";\nimport Select from 'react-select';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\"; // import Typography from '@material-ui/core/Typography';\n\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers'; // Import libraries\n\nimport TableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\n\nimport swal from 'sweetalert'; // https://sweetalert.js.org/guides/\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport ruLocale from \"date-fns/locale/ru\";\nimport moment from \"moment\"; // Import custom components\n\nimport Person from \"../Person/Person.jsx\";\nimport Address from \"../../components/Address/Address.jsx\";\nimport GridForm from \"../../components/GridForm/GridForm.jsx\";\nimport Download from \"../../components/Download/Download.jsx\";\n\nfunction NumberFormatCustom(props) {\n  const inputRef = props.inputRef,\n        onChange = props.onChange,\n        other = _objectWithoutProperties(props, [\"inputRef\", \"onChange\"]);\n\n  return React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: values => {\n      onChange({\n        target: {\n          value: values.value\n        }\n      });\n    },\n    decimalSeparator: \",\",\n    isNumericString: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nasync function tableToPdf(tableId) {\n  let mywindow = window.open('', 'PRINT', 'height=650, width=900, top=100, left=150');\n  mywindow.document.write(\"<html><head><title>\".concat('Экспорт в PDF', \"</title>\"));\n  mywindow.document.write('</head><body >');\n  mywindow.document.write(document.getElementById(tableId).innerHTML);\n  mywindow.document.write('</body></html>');\n  mywindow.document.close(); // necessary for IE >= 10\n  // mywindow.focus(); // necessary for IE >= 10*/\n\n  mywindow.print(); // mywindow.close();\n\n  return true;\n}\n\nfunction RegNoMask(props) {\n  const inputRef = props.inputRef,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return React.createElement(MaskedInput, Object.assign({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    },\n    mask: [/[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/],\n    placeholderChar: '\\u2000',\n    showMask: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }));\n}\n\nclass ViewForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeSubDocument = (name, value) => {\n      let subDoc = this.state.subDocument;\n      subDoc[name] = value;\n      this.setState({\n        subDocument: subDoc\n      });\n      console.log(\"Person Data\", name, value);\n    };\n\n    this.componentChange = event => {\n      console.log(\"COM CHANGE\", event.target.name, event.target.value);\n    };\n\n    this.handleChange = event => {\n      // console.log(\"HANDLE TEXT CHANGE\", event.target.name, event.target.value)\n      let fieldValue = this.state.fieldValue;\n\n      if (event.target.name === \"RegNoAct\") {\n        let newValue = \"\";\n        let regex = /[0-9-№]/;\n\n        for (let key in event.target.value) {\n          if (regex.test(event.target.value[key]) === true) {\n            newValue = newValue + event.target.value[key];\n          }\n        }\n\n        fieldValue[event.target.name] = newValue; // console.log(\"newValue\", newValue, fieldValue)\n      } else {\n        fieldValue[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.regNoChange = event => {\n      // event.preventDefault()\n      var value = event.target.value.trim();\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = value;\n      this.setState({\n        fieldValue: fieldValue\n      }); // console.log(\"REGNOACT\", event.target.value)\n      // if(event.target.value === \"\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\"){\n      //   console.log(\"REGNO null\")\n      //   let fieldValue = this.state.fieldValue\n      //   fieldValue[event.target.name] = null\n      //   this.setState({fieldValue: fieldValue})\n      // }\n      // else{\n      //   for(let i=value.length; i>0; i--){\n      //     let lastChar = value.substring(i -1, i)\n      //     console.log(\"LAST\", lastChar)\n      //     if(lastChar !== '\\u2000'){\n      //       let fieldValue = this.state.fieldValue\n      //       fieldValue[event.target.name] = value\n      //       this.setState({fieldValue: fieldValue})\n      //       break\n      //     }\n      //     value = value.substring(0, value.length -1)\n      //   }\n      // }\n      // REGEX\n      // let regex = /[0-9-]/\n      // let lastChar = value.substring(value.length -1, value.length)\n      // console.log(\"LAST\", lastChar)\n      // // let chars = event.target.value.split('')\n      // // let char = chars.pop()\n      // if(!regex.test(lastChar)){\n      //   // value = chars.join('')\n      //   console.log(\"not valid\", lastChar)\n      // }\n      // else{\n      //   let fieldValue = this.state.fieldValue\n      //   fieldValue[event.target.name] = value\n      //   this.setState({fieldValue: fieldValue})\n      // }\n    };\n\n    this.componentIntChange = event => {\n      // console.log(\"CHANGE\", event.target.name, event.target.value)\n      if (event.target.value > 2147483646) {\n        let value = event.target.value;\n        let maxValue = value.substring(0, value.length - 1); // console.log(\"SLICE\", value, maxValue)\n\n        let fieldValue = this.state.fieldValue;\n        fieldValue[event.target.name] = maxValue;\n        this.setState({\n          fieldValue: fieldValue\n        });\n      } // else{\n      //   let fieldValue = this.state.fieldValue\n      //   console.log(\"CHANGE\", event.target.name, event.target.value)\n      //   fieldValue[event.target.name] = event.target.value\n      //   this.setState({fieldValue: fieldValue})\n      // }\n\n    };\n\n    this.handleSelectChange = event => {\n      let fstate = this.state;\n\n      if (event.name === \"Occupation\") {\n        if (event.value === \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\n          for (let i = 0; i < fstate.Form.sections.length; i++) {\n            if (fstate.Form.sections[i].name === \"HowToDoJob\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = true;\n              }\n            } else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = true;\n              }\n            }\n          }\n        }\n\n        if (event.value !== \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\n          for (let i = 0; i < fstate.Form.sections.length; i++) {\n            if (fstate.Form.sections[i].name === \"HowToDoJob\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = false;\n                fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false;\n              }\n            } else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = false;\n                fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false;\n              }\n            }\n          }\n        }\n      }\n\n      fstate.fieldValue[event.name] = event.value;\n      this.setState(fstate);\n      console.log(\"Option selected:\", event);\n    };\n\n    this.regionChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      fieldValue[\"District\"] = null;\n      fieldValue[\"subDistrict\"] = null;\n      fieldValue[\"Village\"] = null;\n      console.log(\"Region selected\", event.target.name);\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.districtChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      fieldValue[\"subDistrict\"] = null;\n      fieldValue[\"Village\"] = null;\n      console.log(\"District selected\", event.target.name);\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.subDistrictChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      fieldValue[\"Village\"] = null;\n      console.log(\"District selected\", event.target.name);\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.villageChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.value;\n      console.log(\"Village selected\", event.target.name);\n      this.setState({\n        fieldValue: fieldValue\n      });\n    };\n\n    this.handCheckboxChange = event => {\n      let fieldValue = this.state.fieldValue;\n      fieldValue[event.target.name] = event.target.checked;\n      this.setState({\n        fieldValue: fieldValue\n      }); // console.log(\"new checkbox status\", this.state.fieldValue[event.target.name])\n    };\n\n    this.state = {\n      process_id: this.props.process_id,\n      session_id: this.props.session_id,\n      taskID: this.props.taskID,\n      taskType: this.props.taskType,\n      fieldValue: {},\n      subDocument: {},\n      enumData: this.props.enumData,\n      Form: null,\n      selectedDoc: JSON.parse(this.props.selectedDoc),\n      docId: null,\n      buttons: this.props.buttons,\n      gridForm: null,\n      IPRGridForm: this.props.IPRGridForm,\n      gridFormButtons: null,\n      userId: this.props.userId,\n      userRole: this.props.userRole,\n      organizationId: this.props.organizationId,\n      formType: this.props.formType,\n      person: null,\n      personFormType: this.props.personFormType,\n      personEnumData: this.props.personEnumData,\n      documentViewForm: this.props.documentViewForm,\n      docList: null,\n      docListIPR: null,\n      download: null,\n      size: this.props.size,\n      page: this.props.page,\n      SOAT: null,\n      // regNoMask: []\n      // TRANSFER LIST\n      transferList: {\n        state: []\n      },\n      checked: {\n        state: []\n      },\n      selectedTransferList: {\n        state: []\n      }\n    };\n    this.sendFieldValues = this.sendFieldValues.bind(this);\n    this.buttonClick = this.buttonClick.bind(this);\n    this.parseDate = this.parseDate.bind(this);\n    this.changeSubDocument = this.changeSubDocument.bind(this);\n    this.rowsPageChange = this.rowsPageChange.bind(this);\n    this.handleCloseCurrentTab = this.handleCloseCurrentTab.bind(this);\n    this.clearTabData = this.clearTabData.bind(this);\n    this.showScanComponentClick = this.showScanComponentClick.bind(this);\n    this.pushNewBlobs = this.pushNewBlobs.bind(this);\n    this.pushNewImages = this.pushNewImages.bind(this);\n  }\n\n  handleCloseCurrentTab(process_id) {\n    this.props.handleCloseCurrentTab(process_id);\n  }\n\n  showScanComponentClick() {\n    this.props.showScanComponentClick();\n  }\n\n  sendFieldValues(commandJson) {\n    this.props.sendFieldValues(commandJson);\n  }\n\n  pushNewBlobs(blobs) {\n    this.props.pushNewBlobs(blobs);\n  }\n\n  pushNewImages(images) {\n    this.props.pushNewImages(images);\n  }\n\n  async componentDidUpdate(prevProps) {\n    // if (!this.state.Form) {\n    //   this.setDataFromProps()\n    // }\n    if (this.state.download !== null) {\n      if (this.state.download === \"downloadExcel\") {\n        TableToExcel.convert(document.getElementById(\"TableToDownload\"));\n        this.setState({\n          download: null\n        });\n      } else {\n        tableToPdf(\"TableToDownload\");\n        this.setState({\n          download: null\n        });\n      }\n    }\n  }\n\n  async componentDidMount() {\n    console.log(\"VIEW FORM PROPS\", this.props);\n    this.setDataFromProps();\n  } // Set data from props to local state\n\n\n  async setDataFromProps() {\n    try {\n      let fstate = this.state;\n      fstate.Form = this.props.Form;\n      fstate.gridForm = this.props.gridForm;\n\n      if (this.props.selectedDoc !== undefined && this.props.selectedDoc !== \"null\" && this.props.selectedDoc !== null) {\n        var sDoc = JSON.parse(this.props.selectedDoc);\n        console.log(\"S DOC\", sDoc); //SET PERSON DATA TO PERSON\n\n        if (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\") {\n          for (let i = 0; i < sDoc.attributes.length; i++) {\n            if (sDoc.attributes[i].name === \"AdultsMedicalCart\") {\n              for (let l = 0; l < sDoc.attributes[i].subDocument.attributes.length; l++) {\n                if (sDoc.attributes[i].subDocument.attributes[l].name === \"Person\") {\n                  fstate.person = sDoc.attributes[i].subDocument.attributes[l].subDocument;\n                }\n              }\n            }\n          }\n        } else {\n          for (let i = 0; i < sDoc.attributes.length; i++) {\n            if (sDoc.attributes[i].name === \"Person\") {\n              // console.log(\"PERSON\", sDoc.attributes[i].subDocument)\n              if (sDoc.attributes[i].subDocument !== null && sDoc.attributes[i].subDocument !== undefined) {\n                fstate.person = sDoc.attributes[i].subDocument;\n              }\n            }\n          }\n        } // SET FIELD VALUES\n\n\n        for (let i = 0; i < sDoc.attributes.length; i++) {\n          if (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\") {\n            if (sDoc.attributes[i].name === \"AdultsMedicalCart\") {\n              fstate.fieldValue.AdultsMedicalCart = sDoc.attributes[i].subDocument.id;\n\n              for (let l = 0; l < sDoc.attributes[i].subDocument.attributes.length; l++) {\n                if (sDoc.attributes[i].subDocument.attributes[l].value !== null) {\n                  fstate.fieldValue[sDoc.attributes[i].subDocument.attributes[l].name] = sDoc.attributes[i].subDocument.attributes[l].value;\n                }\n              }\n            } else {\n              if (sDoc.attributes[i].value !== null) {\n                fstate.fieldValue[sDoc.attributes[i].name] = sDoc.attributes[i].value;\n              }\n            }\n          } else {\n            if (sDoc.attributes[i].value !== null) {\n              fstate.fieldValue[sDoc.attributes[i].name] = sDoc.attributes[i].value;\n            }\n          }\n        }\n      } // SET PERSON DATA INTO EMPTY IPR FORM\n\n\n      if (this.props.person !== undefined && this.props.person !== \"null\" && this.props.person !== null) {\n        var personData = JSON.parse(this.props.person);\n        fstate.person = personData;\n        fstate.fieldValue.Person = personData.id;\n      }\n\n      if (this.props.docList !== undefined) {\n        fstate.docList = JSON.parse(this.props.docList);\n      }\n\n      if (this.props.docListIPR !== undefined) {\n        fstate.docListIPR = JSON.parse(this.props.docListIPR);\n      }\n\n      if (this.props.SOAT !== undefined) {\n        fstate.SOAT = this.props.SOAT;\n      }\n\n      if (this.props.gridFormButtons !== undefined) {\n        fstate.gridFormButtons = this.props.gridFormButtons;\n      }\n\n      if (this.props.docId !== null || this.props.docId !== \"null\" || this.props.docId !== undefined) {\n        fstate.docId = this.props.docId;\n      } // this.setState(fstate)\n      // UPDAETE SOME DATA if nesessary\n\n\n      if (this.props.userAction === \"reexamination\") {\n        var newDate = new Date();\n        var dd = String(newDate.getDate()).padStart(2, '0');\n        var mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n        var yyyy = newDate.getFullYear();\n        var convertedDate = String(dd + '.' + mm + '.' + yyyy);\n        fstate.fieldValue[\"Date\"] = convertedDate;\n        fstate.fieldValue[\"RegNoAct\"] = null;\n        fstate.fieldValue[\"ExaminationPrRe\"] = \"8d71baae-b834-42e5-be87-7f5637cc46d8\";\n        fstate.fieldValue[\"goal1\"] = false;\n        fstate.fieldValue[\"goal2\"] = false;\n        fstate.fieldValue[\"goal3\"] = false;\n        fstate.fieldValue[\"goal4\"] = null;\n        fstate.fieldValue[\"goal5\"] = false;\n        fstate.fieldValue[\"goal6\"] = false;\n        fstate.fieldValue[\"goalAnother\"] = null;\n        fstate.fieldValue[\"DisabilityGroup\"] = null; // fstate.fieldValue[\"ExamDateFrom\"] = \"NaN.NaN.NaN\"\t\n        // fstate.fieldValue[\"ExamDateTo\"] = \"NaN.NaN.NaN\"\t\n        // fstate.fieldValue[\"ExamStartDate\"] = \"NaN.NaN.NaN\"\n        // fstate.fieldValue[\"ExamOfDate\"] = \"NaN.NaN.NaN\"\n        // fstate.fieldValue[\"ExamFinishDate\"] = \"NaN.NaN.NaN\"\n\n        fstate.fieldValue[\"ExamDateFrom\"] = undefined;\n        fstate.fieldValue[\"ExamDateTo\"] = undefined;\n        fstate.fieldValue[\"ExamStartDate\"] = undefined;\n        fstate.fieldValue[\"ExamOfDate\"] = undefined;\n        fstate.fieldValue[\"ExamFinishDate\"] = undefined;\n        fstate.fieldValue[\"ReferenceNumber\"] = undefined;\n      }\n\n      if (fstate.Form !== null) {\n        if ((fstate.Form.formName === \"AdultsIPRForm\" || fstate.Form.formName === \"ChildIPRForm\") && fstate.fieldValue.AdultsMedicalCart === undefined) {\n          fstate.fieldValue.AdultsMedicalCart = this.props.docId;\n        }\n\n        if ((fstate.person === null || this.props.person !== \"null\") && fstate.Form.formName === \"TransferMedicalCertificateForm\" && fstate.docList !== \"[]\") {\n          var docListData = JSON.parse(this.props.docList); // console.log(\"docListData\", docListData)\n\n          for (let l = 0; l < docListData[0].attributes.length; l++) {\n            if (docListData[0].attributes[l].name === \"Person\") {\n              fstate.person = docListData[0].attributes[l].subDocument;\n            }\n          }\n        }\n\n        if (fstate.fieldValue[\"MseName\"] === undefined && fstate.Form.formName !== \"TransferMedicalCertificateForm\" && fstate.Form.formName !== \"AdultsDetailedSearchForm\" && fstate.Form.formName !== \"AdultsIPRSearchForm\" && fstate.Form.formName !== \"ChildDetailedSearchForm\" && fstate.Form.formName !== \"AdultsIPRSearchForm\" && fstate.Form.formName !== \"AdultsRegistrationSearchForm\") {\n          fstate.fieldValue[\"MseName\"] = fstate.organizationId;\n        } // DISABLE 2 BLOCKS OF FORM /FROM INCOMING DATA\n\n\n        if (fstate.fieldValue[\"Occupation\"] !== \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\n          for (let i = 0; i < fstate.Form.sections.length; i++) {\n            if (fstate.Form.sections[i].name === \"HowToDoJob\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = false;\n                fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false;\n              }\n            } else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\n                fstate.Form.sections[i].contents[l].edit = false;\n                fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false;\n              }\n            }\n          }\n        }\n      }\n\n      if (this.props.taskType === \"showAdultsStatesSelectingForm\") {\n        fstate.fieldValue[\"userName\"] = this.props.userFullName;\n      }\n\n      if (fstate.fieldValue[\"Country\"] === undefined && this.props.SOAT !== null && this.props.SOAT !== undefined) {\n        fstate.fieldValue[\"Country\"] = \"4170000000000\";\n      } // SET PERSON DATA IF IT\"S null\n\n\n      if (fstate.person === null && (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\")) {\n        if (fstate.fieldValue[\"IPRNo\"] === undefined) {\n          fstate.fieldValue[\"IPRNo\"] = fstate.fieldValue[\"No\"];\n        }\n\n        for (let l = 0; l < fstate.selectedDoc.attributes.length; l++) {\n          if (fstate.selectedDoc.attributes[l].name === \"Person\") {\n            fstate.person = fstate.selectedDoc.attributes[l].subDocument; // fstate.fieldValue.Person = fstate.selectedDoc.attributes[l].subDocument.id\n          }\n        }\n      }\n\n      if (fstate.person === null && this.props.person !== undefined && this.props.person !== \"null\" && this.props.person !== null) {\n        personData = JSON.parse(this.props.person);\n        fstate.person = personData;\n        fstate.fieldValue.Person = personData.id;\n      } // SET DATE OF REGISTRATION DEFAULT CURRENT DAY\n\n\n      if (this.props.taskType === \"showRegForm\" || this.props.taskType === \"showChildRegForm\" || this.props.taskType === \"showDetailedForm\" || this.props.taskType === \"showChildDetailedForm\") {\n        if (fstate.fieldValue[\"Date\"] === undefined) {\n          let newDate = new Date();\n          let dd = String(newDate.getDate()).padStart(2, '0');\n          let mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n          let yyyy = newDate.getFullYear();\n          let convertedDate = String(dd + '.' + mm + '.' + yyyy);\n          fstate.fieldValue[\"Date\"] = convertedDate;\n        }\n      }\n\n      this.setState(fstate);\n    } catch (er) {\n      console.log(\"ERROR\", er);\n    }\n  }\n\n  async downloadDocument(type) {\n    this.setState({\n      download: type\n    });\n  } // Delete close component and delete its data from hash stared in home component\n\n\n  clearTabData(process_id) {\n    this.props.clearTabData(process_id);\n  } // Check field regNoAct if it's exist in database, it should be unique\n\n\n  async checkForRegNoAct(commandJson, length) {\n    if (this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined) {\n      this.props.callSuccessToast(\"Проверка № Медакта\");\n      var RegNoAct = {\n        attributes: [{\n          name: \"RegNoAct\",\n          value: this.state.fieldValue[\"RegNoAct\"],\n          type: \"Text\"\n        }]\n      };\n      console.log(\"BODY\", RegNoAct);\n      await fetch(\"api/Document/FilterDocumentsByDefId?defId=\" + this.state.Form.docDefId + \"&size=3&page=1&userId=\" + this.state.userId, {\n        headers: {\n          \"Accept\": \"application/x-www-form-urlencoded\",\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"POST\",\n        body: JSON.stringify(RegNoAct) // mode: 'no-cors'\n\n      }).then(response => {\n        response.text().then(stringResponse => {\n          var document = JSON.parse(stringResponse);\n          console.log(\"RESPONSE\", document); // this.sendFieldValues(commandJson)\n\n          if (document.length <= length) {\n            console.log(\"LENGTH\", document.length, length);\n            this.sendFieldValues(commandJson);\n            this.clearTabData(this.state.process_id);\n            this.props.callSuccessToast(\"Проверка завершена!\");\n          } else {\n            this.swAlert(\"Гражданин с таким № акта уже существует!\");\n          }\n        });\n      });\n    } else {\n      this.props.callErrorToast(\"Заполните поле \\\"№ акта по МСЭК\\\"\");\n    }\n  } // Handle changing of person document fields if it is enabled for input and set values to local state\n\n\n  // Returns random id\n  getUUID() {\n    const uuidv1 = require(\"uuid/v1\");\n\n    return uuidv1();\n  } // Handling component changing without render all state, made for optimization\n\n\n  // DateTime component change handler\n  handleDateTimeChange(date, name) {\n    let fieldValue = this.state.fieldValue;\n\n    if (date !== null) {\n      var newDate = new Date(date);\n      var dd = String(newDate.getDate()).padStart(2, '0');\n      var mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n      var yyyy = newDate.getFullYear();\n      var convertedDate = String(dd + '.' + mm + '.' + yyyy); // console.log(\"CDATE\", convertedDate)\n\n      fieldValue[name] = convertedDate;\n      this.setState({\n        fieldValue: fieldValue\n      });\n    } else {\n      fieldValue[name] = undefined;\n      this.setState({\n        fieldValue: fieldValue\n      });\n    }\n  } // Convert date to approptiate format\n\n\n  parseDate(date) {\n    if (date !== undefined) {\n      var dd = date.substring(0, 2);\n      var mm = date.substring(3, 5);\n      var yyyy = date.substring(6, 10);\n      var convertedDate = String(yyyy + '-' + mm + '-' + dd);\n      var newDate = new Date(convertedDate); // \"2020-01-26\"\n\n      dd = String(newDate.getDate()).padStart(2, '0');\n      mm = String(newDate.getMonth() + 1).padStart(2, '0'); //January is 0!\n\n      yyyy = newDate.getFullYear();\n      convertedDate = yyyy + '-' + mm + '-' + dd;\n    } // console.log(\"DATE\", convertedDate)\n\n\n    return convertedDate;\n  }\n\n  // Get name of address by its code\n  getAddressData(code) {\n    for (var i = 0; i < this.state.SOAT.countries.length; i++) {\n      if (code === this.state.SOAT.countries[i].code) {\n        return this.state.SOAT.countries[i].name;\n      } else {\n        for (var j = 0; j < this.state.SOAT.countries[i].regions.length; j++) {\n          if (code === this.state.SOAT.countries[i].regions[j].code) {\n            return this.state.SOAT.countries[i].regions[j].name;\n          } else {\n            for (var k = 0; k < this.state.SOAT.countries[i].regions[j].districts.length; k++) {\n              if (code === this.state.SOAT.countries[i].regions[j].districts[k].code) {\n                return this.state.SOAT.countries[i].regions[j].districts[k].name;\n              } else {\n                if (this.state.SOAT.countries[i].regions[j].districts[k].subDistricts !== undefined) {\n                  for (var l = 0; l < this.state.SOAT.countries[i].regions[j].districts[k].subDistricts.length; l++) {\n                    if (code === this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].code) {\n                      return this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].name;\n                    } else {\n                      if (this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages !== undefined) {\n                        for (var m = 0; m < this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages.length; m++) {\n                          if (code === this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages[m].code) {\n                            return this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages[m].name;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  } // Collecting all field values and return as attributes\n\n\n  getFieldValues() {\n    var attributes = [];\n\n    if (this.state.taskType === \"showIPRForm\" || this.state.taskType === \"showChildIPRForm\") {\n      console.log(\"IPR FORM\");\n\n      for (var key in this.state.fieldValue) {\n        if (key === \"AdultsMedicalCart\") {\n          attributes.push({\n            name: \"AdultsMedicalCart\",\n            value: this.state.fieldValue[key],\n            type: \"Doc\"\n          });\n        } else if (key === \"IPRNo\") {\n          attributes.push({\n            name: \"IPRNo\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else {\n          for (var section = 0; section < this.state.Form.sections.length; section++) {\n            for (var item = 0; item < this.state.Form.sections[section].contents.length; item++) {\n              if (key === this.state.Form.sections[section].contents[item].name) {\n                if (this.state.Form.sections[section].contents[item].edit === true) {\n                  attributes.push({\n                    name: this.state.Form.sections[section].contents[item].name,\n                    value: this.state.fieldValue[key],\n                    type: this.state.Form.sections[section].contents[item].type\n                  });\n                }\n              }\n            }\n          }\n        }\n      }\n    } else if (this.state.taskType === \"showIPRSearchForm\" || this.state.taskType === \"showChildIPRSearchForm\") {\n      var subDocumentAttributes = [];\n\n      for (key in this.state.fieldValue) {\n        if (this.state.fieldValue[key] !== null && this.state.fieldValue[key] !== \"\") {\n          if (key === \"Country\") {\n            subDocumentAttributes.push({\n              name: \"Country\",\n              value: this.state.fieldValue[key],\n              type: \"Text\"\n            });\n          } else if (key === \"Region\") {\n            subDocumentAttributes.push({\n              name: \"Region\",\n              value: this.state.fieldValue[key],\n              type: \"Text\"\n            });\n          } else if (key === \"District\") {\n            subDocumentAttributes.push({\n              name: \"District\",\n              value: this.state.fieldValue[key],\n              type: \"Text\"\n            });\n          }\n        }\n\n        for (let section = 0; section < this.state.Form.sections.length; section++) {\n          for (let item = 0; item < this.state.Form.sections[section].contents.length; item++) {\n            if (key === this.state.Form.sections[section].contents[item].name) {\n              subDocumentAttributes.push({\n                name: this.state.Form.sections[section].contents[item].name,\n                value: this.state.fieldValue[key],\n                type: this.state.Form.sections[section].contents[item].type\n              });\n            }\n          }\n        }\n      }\n\n      attributes.push({\n        name: \"AdultsMedicalCart\",\n        type: \"Doc\",\n        docDef: this.state.Form.medicalCardDocDefId,\n        \"subDocument\": {\n          \"attributes\": subDocumentAttributes\n        }\n      });\n\n      if (Object.keys(this.state.subDocument).length !== 0) {\n        var subDocumentPersonAttributes = [];\n\n        for (var key in this.state.subDocument) {\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\n            if (key === this.state.documentViewForm.attributes[i].name) {\n              subDocumentPersonAttributes.push({\n                name: this.state.documentViewForm.attributes[i].name,\n                value: this.state.subDocument[key],\n                type: this.state.documentViewForm.attributes[i].type\n              });\n              console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key]);\n            }\n          }\n        }\n\n        attributes.subDocumentAttributes.push({\n          name: \"Person\",\n          type: \"Doc\",\n          docDef: this.state.documentViewForm.docDefId,\n          \"subDocument\": {\n            \"attributes\": subDocumentPersonAttributes\n          }\n        });\n      }\n\n      console.log(\"IPRATRS\", attributes);\n    } else {\n      // console.log(\"Fiel Values\", this.state.fieldValue)\n      for (key in this.state.fieldValue) {\n        if (key === \"Country\") {\n          attributes.push({\n            name: \"Country\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"Region\") {\n          attributes.push({\n            name: \"Region\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"District\") {\n          attributes.push({\n            name: \"District\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"subDistrict\") {\n          attributes.push({\n            name: \"subDistrict\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"Village\") {\n          attributes.push({\n            name: \"Village\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"ResidentialAddress\") {\n          attributes.push({\n            name: \"ResidentialAddress\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else if (key === \"Phone\") {\n          attributes.push({\n            name: \"Phone\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else if (key === \"Person\") {\n          attributes.push({\n            name: \"Person\",\n            value: this.state.fieldValue[key],\n            type: \"Doc\"\n          });\n        } else {\n          for (section = 0; section < this.state.Form.sections.length; section++) {\n            for (item = 0; item < this.state.Form.sections[section].contents.length; item++) {\n              if (key === this.state.Form.sections[section].contents[item].name) {\n                attributes.push({\n                  name: this.state.Form.sections[section].contents[item].name,\n                  value: this.state.fieldValue[key],\n                  type: this.state.Form.sections[section].contents[item].type\n                });\n              }\n            }\n          }\n        }\n      }\n\n      if (Object.keys(this.state.subDocument).length !== 0) {\n        subDocumentAttributes = [];\n\n        for (key in this.state.subDocument) {\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\n            if (key === this.state.documentViewForm.attributes[i].name) {\n              subDocumentAttributes.push({\n                name: this.state.documentViewForm.attributes[i].name,\n                value: this.state.subDocument[key],\n                type: this.state.documentViewForm.attributes[i].type\n              });\n              console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key]);\n            }\n          }\n        }\n\n        attributes.push({\n          name: \"Person\",\n          type: \"Doc\",\n          docDef: this.state.documentViewForm.docDefId,\n          \"subDocument\": {\n            \"attributes\": subDocumentAttributes\n          }\n        });\n      }\n    } // console.log(\"ATTR\", attributes)\n\n\n    return attributes;\n  }\n\n  getFieldValuesToSearch() {\n    var attributes = [];\n\n    for (var key in this.state.fieldValue) {\n      if (this.state.fieldValue[key] !== null && this.state.fieldValue[key] !== \"\") {\n        //&& this.state.fieldValue[key] !== \"NaN.NaN.NaN\"\n        if (key === \"Country\") {\n          attributes.push({\n            name: \"Country\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"Region\") {\n          attributes.push({\n            name: \"Region\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"District\") {\n          attributes.push({\n            name: \"District\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"subDistrict\") {\n          attributes.push({\n            name: \"subDistrict\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"Village\") {\n          attributes.push({\n            name: \"Village\",\n            value: this.state.fieldValue[key],\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\n            type: \"Text\"\n          });\n        } else if (key === \"ResidentialAddress\") {\n          attributes.push({\n            name: \"ResidentialAddress\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else if (key === \"Phone\") {\n          attributes.push({\n            name: \"Phone\",\n            value: this.state.fieldValue[key],\n            type: \"Text\"\n          });\n        } else if (key === \"Person\") {\n          attributes.push({\n            name: \"Person\",\n            value: this.state.fieldValue[key],\n            type: \"Doc\"\n          });\n        } else {\n          for (var section = 0; section < this.state.Form.sections.length; section++) {\n            for (var item = 0; item < this.state.Form.sections[section].contents.length; item++) {\n              if (key === this.state.Form.sections[section].contents[item].name) {\n                attributes.push({\n                  name: this.state.Form.sections[section].contents[item].name,\n                  value: this.state.fieldValue[key],\n                  type: this.state.Form.sections[section].contents[item].type\n                });\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (Object.keys(this.state.subDocument).length !== 0) {\n      var subDocumentAttributes = [];\n\n      for (key in this.state.subDocument) {\n        if (this.state.subDocument[key] !== null && this.state.subDocument[key] !== \"\") {\n          //&& this.state.subDocument[key] !== \"NaN.NaN.NaN\"\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\n            if (key === this.state.documentViewForm.attributes[i].name) {\n              subDocumentAttributes.push({\n                name: this.state.documentViewForm.attributes[i].name,\n                value: this.state.subDocument[key],\n                type: this.state.documentViewForm.attributes[i].type\n              }); // console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key])\n            }\n          }\n        }\n      }\n\n      attributes.push({\n        name: \"Person\",\n        type: \"Doc\",\n        docDef: this.state.documentViewForm.docDefId,\n        \"subDocument\": {\n          \"attributes\": subDocumentAttributes\n        }\n      });\n    }\n\n    return attributes;\n  } // checkForEmptyFields(commandJson, length) {\n  //   //  Adulds Medakt || Reg Form\n  //   if (this.state.taskType === \"showRegForm\" || this.state.taskType === \"showDetailedForm\") {\n  //     // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\n  //     if (this.state.fieldValue[\"Country\"] !== null && this.state.fieldValue[\"Country\"] !== undefined) {\n  //       if (this.state.fieldValue[\"Region\"] !== null && this.state.fieldValue[\"Region\"] !== undefined) {\n  //         if (this.state.fieldValue[\"EducationAct\"] !== null && this.state.fieldValue[\"EducationAct\"] !== undefined) {\n  //           if (this.state.fieldValue[\"Occupation\"] !== null && this.state.fieldValue[\"Occupation\"] !== undefined) {\n  //             if (this.state.fieldValue[\"ExaminationPrRe\"] !== null && this.state.fieldValue[\"ExaminationPrRe\"] !== undefined) {\n  //               if (this.state.fieldValue[\"ExaminationPlace\"] !== null && this.state.fieldValue[\"ExaminationPlace\"] !== undefined) {\n  //                 if (this.state.fieldValue[\"PensionStatus\"] !== null && this.state.fieldValue[\"PensionStatus\"] !== undefined) {\n  //                   if (\n  //                     (this.state.fieldValue[\"goal1\"] !== false && this.state.fieldValue[\"goal1\"] !== undefined && this.state.fieldValue[\"goal1\"] !== \"False\") ||\n  //                     (this.state.fieldValue[\"goal2\"] !== false && this.state.fieldValue[\"goal2\"] !== undefined && this.state.fieldValue[\"goal2\"] !== \"False\") ||\n  //                     (this.state.fieldValue[\"goal3\"] !== false && this.state.fieldValue[\"goal3\"] !== undefined && this.state.fieldValue[\"goal3\"] !== \"False\") ||\n  //                     (this.state.fieldValue[\"goal4\"] !== null && this.state.fieldValue[\"goal4\"] !== undefined && this.state.fieldValue[\"goal4\"] !== \"False\") ||\n  //                     (this.state.fieldValue[\"goal5\"] !== false && this.state.fieldValue[\"goal5\"] !== undefined && this.state.fieldValue[\"goal5\"] !== \"False\") ||\n  //                     (this.state.fieldValue[\"goal6\"] !== false && this.state.fieldValue[\"goal6\"] !== undefined && this.state.fieldValue[\"goal6\"] !== \"False\") ||\n  //                     (this.state.fieldValue[\"goalAnother\"] !== \"\" && this.state.fieldValue[\"goalAnother\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"PlaceOfWork\"] !== \"\" && this.state.fieldValue[\"PlaceOfWork\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"Wage\"] !== \"\" && this.state.fieldValue[\"Wage\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"PensionAmount\"] !== \"\" && this.state.fieldValue[\"PensionAmount\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"Profession\"] !== \"\" && this.state.fieldValue[\"Profession\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\n  //                     (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined)\n  //                   ) {\n  //                     if (\n  //                       (this.state.fieldValue[\"Good\"] !== false && this.state.fieldValue[\"Good\"] !== undefined && this.state.fieldValue[\"Good\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"Satisfactory\"] !== false && this.state.fieldValue[\"Satisfactory\"] !== undefined && this.state.fieldValue[\"Satisfactory\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"goUnsatisfactoryal1\"] !== false && this.state.fieldValue[\"Unsatisfactory\"] !== undefined && this.state.fieldValue[\"Unsatisfactory\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"SeparateApartment\"] !== false && this.state.fieldValue[\"SeparateApartment\"] !== undefined && this.state.fieldValue[\"SeparateApartment\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"OwnHouse\"] !== false && this.state.fieldValue[\"OwnHouse\"] !== undefined && this.state.fieldValue[\"OwnHouse\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"Dormitory\"] !== false && this.state.fieldValue[\"Dormitory\"] !== undefined && this.state.fieldValue[\"Dormitory\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"LivingAreaRemovable\"] !== false && this.state.fieldValue[\"LivingAreaRemovable\"] !== undefined && this.state.fieldValue[\"LivingAreaRemovable\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"NoOwnAccommodation\"] !== false && this.state.fieldValue[\"NoOwnAccommodation\"] !== undefined && this.state.fieldValue[\"NoOwnAccommodation\"] !== \"False\") ||\n  //                       (this.state.fieldValue[\"Additionally\"] !== false && this.state.fieldValue[\"Additionally\"] !== undefined && this.state.fieldValue[\"Additionally\"] !== \"False\")\n  //                     ) {\n  //                       // if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\n  //                       if (this.state.taskType === \"showDetailedForm\" || this.state.taskType === \"showChildDetailedForm\") {\n  //                         if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\n  //                           if (this.state.fieldValue[\"ExamOfDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamOfDate\"] !== undefined) {\n  //                             this.checkForRegNoAct(commandJson, length)\n  //                             // this.sendFieldValues(commandJson)\n  //                           } else this.props.callErrorToast(\"Заполните поле \\\"Дата проведения экспертизы\\\"\")\n  //                         } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\n  //                       } else this.checkForRegNoAct(commandJson, length)\n  //                       // } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\n  //                     } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Жилищно-бытовые условия\\\"\")\n  //                   } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Цель освидетельствования\\\"\")\n  //                 } else this.props.callErrorToast(\"Заполните поле \\\"Получает пенсию\\\"\")\n  //               } else this.props.callErrorToast(\"Заполните поле \\\"Место освидетельствования\\\"\")\n  //             } else this.props.callErrorToast(\"Заполните поле \\\"Освидетельствование\\\"\")\n  //           } else this.props.callErrorToast(\"Заполните поле \\\"Род деятельности\\\"\")\n  //         } else this.props.callErrorToast(\"Заполните поле \\\"Образование\\\"\")\n  //       } else this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\")\n  //     } else this.props.callErrorToast(\"Заполните поле \\\"Страна\\\"\")\n  //     // } else this.props.callErrorToast(\"Заполните поле \\\"№ акта по МСЭ\\\"\")\n  //   }\n  //   // Child Medakt || Reg Form\n  //   else if (this.state.taskType === \"showChildRegForm\" || this.state.taskType === \"showChildDetailedForm\") {\n  //     // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\n  //     if (this.state.fieldValue[\"Country\"] !== null && this.state.fieldValue[\"Country\"] !== undefined) {\n  //       if (this.state.fieldValue[\"Region\"] !== null && this.state.fieldValue[\"Region\"] !== undefined) {\n  //         if (this.state.fieldValue[\"EducationAct\"] !== null && this.state.fieldValue[\"EducationAct\"] !== undefined) {\n  //           if (this.state.fieldValue[\"ExaminationPrRe\"] !== null && this.state.fieldValue[\"ExaminationPrRe\"] !== undefined) {\n  //             if (this.state.fieldValue[\"Examination4\"] !== null && this.state.fieldValue[\"Examination4\"] !== undefined) {\n  //               if (this.state.fieldValue[\"PensionStatus\"] !== null && this.state.fieldValue[\"PensionStatus\"] !== undefined) {\n  //                 if (\n  //                   (this.state.fieldValue[\"goal1\"] !== false && this.state.fieldValue[\"goal1\"] !== undefined && this.state.fieldValue[\"goal1\"] !== \"False\") ||\n  //                   (this.state.fieldValue[\"goal2\"] !== false && this.state.fieldValue[\"goal2\"] !== undefined && this.state.fieldValue[\"goal2\"] !== \"False\") ||\n  //                   (this.state.fieldValue[\"goal3\"] !== false && this.state.fieldValue[\"goal3\"] !== undefined && this.state.fieldValue[\"goal3\"] !== \"False\") ||\n  //                   (this.state.fieldValue[\"goal4\"] !== null && this.state.fieldValue[\"goal4\"] !== undefined && this.state.fieldValue[\"goal4\"] !== \"False\") ||\n  //                   (this.state.fieldValue[\"goal5\"] !== false && this.state.fieldValue[\"goal5\"] !== undefined && this.state.fieldValue[\"goal5\"] !== \"False\") ||\n  //                   (this.state.fieldValue[\"goal6\"] !== false && this.state.fieldValue[\"goal6\"] !== undefined && this.state.fieldValue[\"goal6\"] !== \"False\") ||\n  //                   (this.state.fieldValue[\"goalAnother\"] !== \"\" && this.state.fieldValue[\"goalAnother\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"PlaceOfWork\"] !== \"\" && this.state.fieldValue[\"PlaceOfWork\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"Wage\"] !== 0 && this.state.fieldValue[\"Wage\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"PensionAmount\"] !== 0 && this.state.fieldValue[\"PensionAmount\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"Profession\"] !== \"\" && this.state.fieldValue[\"Profession\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\n  //                   (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined)\n  //                 ) {\n  //                   if (this.state.taskType === \"showChildDetailedForm\") {\n  //                     if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\n  //                       if (this.state.fieldValue[\"ExamOfDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamOfDate\"] !== undefined) {\n  //                         this.checkForRegNoAct(commandJson, length)\n  //                         // this.sendFieldValues(commandJson)\n  //                       } else this.props.callErrorToast(\"Заполните поле \\\"Дата проведения экспертизы\\\"\")\n  //                     } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\n  //                   } else this.checkForRegNoAct(commandJson, length) // this.sendFieldValues(commandJson)\n  //                 } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Цель освидетельствования\\\"\")\n  //               } else this.props.callErrorToast(\"Заполните поле \\\"Получает пенсию\\\"\")\n  //             } else this.props.callErrorToast(\"Заполните поле \\\"Место освидетельствования\\\"\")\n  //           } else this.props.callErrorToast(\"Заполните поле \\\"Освидетельствование\\\"\")\n  //         } else this.props.callErrorToast(\"Заполните поле \\\"Образование\\\"\")\n  //       } else this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\")\n  //     } else this.props.callErrorToast(\"Заполните поле \\\"Страна\\\"\")\n  //     // }else this.swAlert(\"Заполните поле \\\"№ акта по МСЭ\\\"\")\n  //   }\n  //   else {\n  //     this.sendFieldValues(commandJson)\n  //     this.clearTabData(this.state.process_id)\n  //   }\n  // }\n\n\n  checkForRequieredFields() {\n    let checkedSuccessfuly = null;\n    let f = this.state.Form;\n    let fv = this.state.fieldValue;\n    let tt = this.state.taskType;\n\n    if (tt === \"showRegForm\" || tt === \"showDetailedForm\" || tt === \"showChildRegForm\" || tt === \"showChildDetailedForm\") {\n      // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\n      if (fv[\"Region\"] !== null && fv[\"Region\"] !== undefined) {\n        checkedSuccessfuly = true;\n      } else {\n        this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\");\n        return false;\n      }\n    }\n\n    for (let s = 0; s < f.sections.length; s++) {\n      if (f.sections[s].required === true) {\n        for (let c = 0; c < f.sections[s].contents.length; c++) {\n          let fieldName = f.sections[s].contents[c].name; // console.log(\"CH1\", fieldName, f.sections[s].contents[c].required)\n\n          if (fv[fieldName] === undefined || fv[fieldName] === null || fv[fieldName] === \"NaN.NaN.NaN\" || fv[fieldName] === \"\" || fv[fieldName] === \"01.01.1970\") {\n            checkedSuccessfuly = false;\n          } else {\n            checkedSuccessfuly = true;\n            break; // return checkedSuccessfuly\n          }\n        }\n\n        if (checkedSuccessfuly === false) {\n          this.props.callErrorToast(\"Заполните одно из полей секции \\\"\" + f.sections[s].label + \"\\\"\", \"warning\");\n        }\n      } else {\n        for (let c = 0; c < f.sections[s].contents.length; c++) {\n          let fieldName = f.sections[s].contents[c].name; // console.log(\"CH2\", fieldName, f.sections[s].contents[c].name)\n\n          if (f.sections[s].contents[c].required === true) {\n            if (fv[fieldName] === undefined || fv[fieldName] === null || fv[fieldName] === \"NaN.NaN.NaN\" || fv[fieldName] === \"\" || fv[fieldName] === \"\" || fv[fieldName] === \"01.01.1970\") {\n              checkedSuccessfuly = false;\n              this.props.callErrorToast(\"Внимание заполните поле \\\"\" + f.sections[s].contents[c].label + \"\\\"\", \"warning\"); // break\n\n              return false;\n            } else {\n              checkedSuccessfuly = true;\n            }\n          } else {\n            checkedSuccessfuly = true;\n          }\n        }\n      }\n    }\n\n    return checkedSuccessfuly;\n  } // Collect id of all documents that are in the local state\n\n\n  getDocsIdToSign() {\n    var docsId = [];\n    docsId.push(this.state.selectedDoc.id);\n\n    if (this.state.docListIPR !== null) {\n      for (var i = 0; i < this.state.docListIPR.length; i++) {\n        docsId.push(this.state.docListIPR[i].id);\n      }\n    }\n\n    return docsId;\n  } // Return person full age\n\n\n  getPersonAge() {\n    for (let i = 0; i < this.state.person.attributes.length; i++) {\n      if (this.state.person.attributes[i].name === \"Date_of_Birth\") {\n        let birthday = new Date(this.parseDate(this.state.person.attributes[i].value));\n        let ageDifMs = Date.now() - birthday.getTime();\n        let ageDate = new Date(ageDifMs); // miliseconds from epoch\n\n        let fullAge = Math.abs(ageDate.getUTCFullYear() - 1970);\n        console.log(\"AGE\", fullAge);\n        return fullAge;\n      }\n    }\n  } // Return label of select by it's id from fieldValue\n\n\n  getEnumValueTextByValue(value) {\n    for (let i = 0; i < this.state.enumData.length; i++) {\n      for (let l = 0; l < this.state.enumData[i].data.length; l++) {\n        if (this.state.enumData[i].data[l].Id === value) {\n          return this.state.enumData[i].data[l].Text;\n        }\n      }\n    }\n  } // Set new organization ID to all document in local state, prepare them to transfer to another Mse\n\n\n  setOrgIdToMedakt() {\n    let fstate = this.state;\n    var newDocList = []; // console.log(\"DOCLIST CUR\" , fstate.docList)\n\n    for (let i = 0; i < fstate.docList.length; i++) {\n      newDocList.push({\n        id: fstate.docList[i].id,\n        attributes: []\n      });\n\n      for (let l = 0; l < fstate.docList[i].attributes.length; l++) {\n        if (fstate.docList[i].attributes[l].name === \"MseName\") {\n          let newItem = {\n            name: fstate.docList[i].attributes[l].name,\n            type: fstate.docList[i].attributes[l].type,\n            value: fstate.fieldValue[\"MseName\"],\n            enumValueText: this.getEnumValueTextByValue(this.state.fieldValue[\"MseName\"])\n          };\n          newDocList[i].attributes.push(newItem);\n        } else {\n          if (fstate.docList[i].attributes[l].name !== \"State\" && fstate.docList[i].attributes[l].value !== null) {\n            let newItem = {\n              name: fstate.docList[i].attributes[l].name,\n              type: fstate.docList[i].attributes[l].type,\n              value: fstate.docList[i].attributes[l].value\n            };\n            newDocList[i].attributes.push(newItem);\n          }\n        }\n      }\n    }\n\n    fstate.docList = newDocList;\n    var newDocListIPR = [];\n\n    for (let i = 0; i < fstate.docListIPR.length; i++) {\n      newDocListIPR.push({\n        id: fstate.docListIPR[i].id,\n        attributes: []\n      });\n\n      for (let l = 0; l < fstate.docListIPR[i].attributes.length; l++) {\n        if (fstate.docListIPR[i].attributes[l].name !== \"State\" && fstate.docListIPR[i].attributes[l].value !== null) {\n          var newItem = {\n            value: fstate.docListIPR[i].attributes[l].value,\n            name: fstate.docListIPR[i].attributes[l].name,\n            type: fstate.docListIPR[i].attributes[l].type\n          };\n          newDocListIPR[i].attributes.push(newItem);\n        }\n      }\n    }\n\n    fstate.docListIPR = newDocListIPR;\n    this.setState(fstate); // console.log(\"DOCLIST\", JSON.stringify(this.state.docList))\n    // console.log(\"DOCLISTIPR\", JSON.stringify(this.state.docListIPR))\n  } // Main button click handler\n\n\n  async buttonClick(name) {\n    console.log(\"Butt\", name);\n\n    if (name === \"createDocument\") {\n      let createDocument = {\n        attributes: this.getFieldValues()\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"createDocument\"\n          },\n          doc: {\n            value: JSON.stringify(createDocument)\n          },\n          docDefId: {\n            value: this.state.Form.docDefId\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          }\n        }\n      };\n      console.log(\"button createDocument: \", commandJson);\n      let checkResult = this.checkForRequieredFields();\n\n      if (checkResult === true) {\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } // this.checkForEmptyFields(commandJson, 0)\n\n    } else if (name === \"updateDocument\") {\n      let updateDocument = {\n        attributes: this.getFieldValues()\n      };\n      let filterIPR = {\n        attributes: [{\n          name: \"AdultsMedicalCart\",\n          value: this.state.docId,\n          type: \"Doc\"\n        }]\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"updateDocument\"\n          },\n          doc: {\n            value: JSON.stringify(updateDocument)\n          },\n          filterIPR: {\n            value: JSON.stringify(filterIPR)\n          },\n          docDefId: {\n            value: this.state.Form.docDefId\n          },\n          docId: {\n            value: this.state.docId\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          }\n        }\n      };\n      console.log(\"button updateDocument: \", commandJson);\n      let checkResult = this.checkForRequieredFields();\n\n      if (checkResult === true) {\n        console.log(\"FV\", this.state.fieldValue);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } // this.checkForEmptyFields(commandJson, 1)\n      // this.sendFieldValues(commandJson)\n\n    } else if (name === \"findDocument\") {\n      let filterDocument = {\n        attributes: this.getFieldValuesToSearch()\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        docDefId: this.state.Form.docDefId,\n        variables: {\n          userAction: {\n            value: \"findDocument\"\n          },\n          doc: {\n            value: JSON.stringify(filterDocument)\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          },\n          size: {\n            value: this.state.size\n          },\n          page: {\n            value: 1\n          }\n        }\n      };\n      console.log(\"button findDocument: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"findIPR\") {\n      let filterDocument = {\n        attributes: [{\n          name: \"AdultsMedicalCart\",\n          type: \"Doc\",\n          docDef: this.state.Form.medicalCardDocDefId,\n          subDocument: {\n            attributes: this.getFieldValuesToSearch()\n          }\n        }]\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        docDefId: this.state.Form.docDefId,\n        variables: {\n          userAction: {\n            value: \"findDocument\"\n          },\n          doc: {\n            value: JSON.stringify(filterDocument)\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          },\n          size: {\n            value: this.state.size\n          },\n          page: {\n            value: this.state.page\n          }\n        }\n      };\n      console.log(\"button findIPR: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"editDocument\") {\n      let editDocument = {\n        attributes: this.getFieldValues()\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"editDocument\"\n          },\n          doc: {\n            value: JSON.stringify(editDocument)\n          },\n          docId: {\n            value: this.state.docId\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          }\n        }\n      };\n      console.log(\"button editDocument: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"reexamination\") {\n      let updateDocument = {\n        attributes: this.getFieldValues()\n      };\n      let age = this.getPersonAge();\n      let Adult = age >= 18 ? \"True\" : \"False\";\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"reexamination\"\n          },\n          doc: {\n            value: JSON.stringify(updateDocument)\n          },\n          docId: {\n            value: this.state.docId\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          },\n          adult: {\n            value: Adult\n          }\n        }\n      };\n      console.log(\"button reexamination: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"medakt\") {\n      // let updateDocument = {attributes: this.getFieldValues()}\n      let commandJson = {\n        commandType: \"completeTask\",\n        session_id: this.state.session_id,\n        process_id: this.state.process_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"medakt\"\n          },\n          docId: {\n            value: this.state.docId\n          },\n          userId: {\n            value: this.state.userId\n          },\n          userRole: {\n            value: this.state.userRole\n          }\n        }\n      };\n      console.log(\"button Medakt: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"ipr\") {\n      // if (this.state.docListIPR !== null && this.state.docListIPR !== \"null\") {\n      //   if (this.state.docListIPR.length > 0) {\n      //     this.props.callErrorToast(\"Данный Медакт уже имеет ИПР\")\n      //   }\n      // }\n      if (this.state.docListIPR === null || this.state.docListIPR === \"null\" || this.state.docListIPR.length === 0) {\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"ipr\"\n            },\n            docId: {\n              value: this.state.docId\n            },\n            userId: {\n              value: this.state.userId\n            },\n            userRole: {\n              value: this.state.userRole\n            }\n          }\n        };\n        console.log(\"button IPR: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else {\n        this.props.callErrorToast(\"Данный Медакт уже имеет ИПР!\");\n      }\n    } else if (name === \"deleteDocument\") {\n      swal({\n        text: \"Вы точно хотите удалить этот документ?\",\n        icon: \"warning\",\n        buttons: {\n          yes: \"Да\",\n          no: \"Нет\"\n        },\n        dangerMode: true\n      }).then(click => {\n        if (click === \"yes\") {\n          let commandJson = {\n            commandType: \"completeTask\",\n            session_id: this.state.session_id,\n            process_id: this.state.process_id,\n            taskID: this.state.taskID,\n            variables: {\n              userAction: {\n                value: \"deleteDocument\"\n              },\n              docId: {\n                value: this.state.docId\n              },\n              userId: {\n                value: this.state.userId\n              },\n              userRole: {\n                value: this.state.userRole\n              }\n            }\n          };\n          console.log(\"button deleteDocument: \", commandJson);\n          this.sendFieldValues(commandJson);\n          this.clearTabData(this.state.process_id);\n        }\n      });\n    } else if (name === \"signDocument\") {\n      let docsToSign = {\n        docIdList: this.getDocsIdToSign(),\n        stateTypeId: \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\"\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"signDocument\"\n          },\n          doc: {\n            value: JSON.stringify(docsToSign)\n          } // doc: {\n          //   value: {\n          //     docIdList: this.getDocsIdToSign(),\n          //     stateTypeId: \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\"\n          //   }\n          // }\n\n        }\n      };\n      console.log(\"button signDocument: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"registerDocument\") {\n      let docsToRegister = {\n        docIdList: this.getDocsIdToSign(),\n        stateTypeId: \"C1414D0C-417A-45AB-8B57-01D30A567F08\"\n      };\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"registerDocument\"\n          },\n          doc: {\n            value: JSON.stringify(docsToRegister)\n          }\n        }\n      };\n      console.log(\"button registerDocument: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"showStatusSelectingForm\") {\n      let commandJson = {\n        commandType: \"completeTask\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        variables: {\n          userAction: {\n            value: \"showStatusSelectingForm\"\n          },\n          doc: {\n            value: JSON.stringify({\n              docIdList: this.getDocsIdToSign(),\n              stateTypeId: \"\"\n            })\n          }\n        }\n      };\n      console.log(\"button showStatusSelectingForm: \", commandJson);\n      this.sendFieldValues(commandJson);\n      this.clearTabData(this.state.process_id);\n    } else if (name === \"setNewState\") {\n      let checkResult = this.checkForRequieredFields();\n\n      if (checkResult === true) {\n        let states = {\n          \"29a5cf05-30de-45b9-8526-69de5ea8ab12\": \"a9e360f0-eed1-4ff6-9ab8-e4255c62ce4a\",\n          // умер\n          \"6a0f2699-eb53-4175-ac07-71deb84ae641\": \"10a96e4b-df5d-4f55-9d81-83f9e3e51de5\",\n          // приостановлена инвалидность\n          \"3d2dd30f-3ab0-439f-a8dd-149431af67be\": \"d203372c-236b-4b3e-953a-11f09a4aca61\",\n          // истекший срок инвалидности\n          \"b042e77b-9a12-47f1-a6d2-cc85e9029e61\": \"c9cfe461-e822-4f97-b34d-9312f8917fa9\",\n          // переехал за переделами рт\n          \"c5f3563c-688f-44f1-9c01-70d190ae9edb\": \"1fa96e5b-908f-4c57-bc4a-b61423951081\",\n          // перешел на возрастную пенсию\n          \"d5e1a3aa-dfb3-4c49-8360-c1278e70429f\": \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\",\n          // вернуть в подписанные\n          \"83ade8bc-a070-4974-bea0-fe30e50422af\": \"C1414D0C-417A-45AB-8B57-01D30A567F08\" // зарегистрирован\n\n        }; // console.log(\"ST\", this.state.fieldValue[\"StatesName\"]);\n\n        if (this.state.Form.docDefId === \"5FDE415F-DB00-43B4-BA6E-FE439CFF6DA0\" && this.state.fieldValue[\"StatusName\"] === \"1fa96e5b-908f-4c57-bc4a-b61423951081\") {\n          this.props.callErrorToast(\"Не допустимое значение для детского документа\");\n        } else {\n          let stateBody = {\n            \"statusDate\": this.parseDate(this.state.fieldValue.statusDate),\n            //moment(new Date()).format(\"YYYY-MM-DD\"),\n            \"docId\": this.state.docId,\n            \"stateTypeId\": states[this.state.fieldValue[\"StatusName\"]]\n          };\n          let commandJson = {\n            commandType: \"completeTask\",\n            process_id: this.state.process_id,\n            session_id: this.state.session_id,\n            taskID: this.state.taskID,\n            variables: {\n              userAction: {\n                value: \"setNewState\"\n              },\n              // newState: { value: states[this.state.fieldValue[\"StatusName\"]] }\n              stateBody: {\n                value: JSON.stringify(stateBody)\n              }\n            }\n          };\n          console.log(\"button setNewState: \", commandJson);\n          this.sendFieldValues(commandJson);\n          this.clearTabData(this.state.process_id);\n        }\n      }\n    } // else if (name === \"setNewStateChild\") {\n    //   let states = {\n    //     \"adcb9640-51d0-4952-b196-27e87bb28d31\": \"10a96e4b-df5d-4f55-9d81-83f9e3e51de5\", // приостановлена инвалидность \n    //     \"a61fcb5d-e858-4183-b1cd-1fef00c6b4bc\": \"d203372c-236b-4b3e-953a-11f09a4aca61\", // истекший срок инвалидности\n    //     \"184e3fac-a6b6-4c60-89a8-517862ecd9c4\": \"c9cfe461-e822-4f97-b34d-9312f8917fa9\", // переехал за переделами рт          \n    //     \"05be1899-8d41-4dfd-ae72-41cba4aa9223\": \"a9e360f0-eed1-4ff6-9ab8-e4255c62ce4a\", // умер\n    //   }\n    //   // console.log(\"ST\", this.state.fieldValue[\"StatesName\"]);\n    //   let commandJson =\n    //   {\n    //     commandType: \"completeTask\",\n    //     process_id: this.state.process_id,\n    //     session_id: this.state.session_id,\n    //     taskID: this.state.taskID,\n    //     variables: {\n    //       userAction: { value: \"setNewStateChild\" },\n    //       newState: { value: states[this.state.fieldValue[\"StatesName\"]] }\n    //     }\n    //   }\n    //   console.log(\"button setNewStateChild: \", commandJson)\n    //   this.sendFieldValues(commandJson)\n    //   this.clearTabData(this.state.process_id)\n    // }\n    else if (name === \"setStateDied\") {\n        let docsToSetState = {\n          docIdList: this.getDocsIdToSign(),\n          stateTypeId: \"A9E360F0-EED1-4FF6-9AB8-E4255C62CE4A\"\n        };\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"setStateDied\"\n            },\n            doc: {\n              value: JSON.stringify(docsToSetState)\n            } // doc: {\n            //   value: {\n            //     docIdList: this.getDocsIdToSign(),\n            //     stateTypeId: \"A9E360F0-EED1-4FF6-9AB8-E4255C62CE4A\"\n            //   }\n            // }\n\n          }\n        };\n        console.log(\"button setStateDied: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (name === \"backToMedakt\") {\n        let Document = {\n          attributes: [{\n            name: \"AdultsMedicalCart\",\n            value: this.state.fieldValue[\"AdultsMedicalCart\"],\n            type: \"Doc\"\n          }]\n        };\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"backToMedakt\"\n            },\n            userId: {\n              value: this.state.userId\n            },\n            userRole: {\n              value: this.state.userRole\n            },\n            docDefId: {\n              value: this.state.Form.docDefId\n            },\n            doc: {\n              value: JSON.stringify(Document)\n            },\n            docId: {\n              value: this.state.fieldValue[\"AdultsMedicalCart\"]\n            },\n            size: {\n              value: 10\n            },\n            page: {\n              value: 1\n            }\n          }\n        };\n        console.log(\"button backToMedakt: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (name === \"transferDocuments\") {\n        if (Object.keys(this.state.docList).length !== 0) {\n          var age = this.getPersonAge();\n          console.log(\"AGE\", age);\n\n          if (age >= 18) {\n            var docDefId = this.state.Form.adultsMedaktDocDefId;\n          } else if (age < 18) {\n            var docDefId = this.state.Form.childMedaktDocDefId;\n          }\n\n          this.setOrgIdToMedakt();\n          let commandJson = {\n            commandType: \"transferDocuments\",\n            session_id: this.state.session_id,\n            process_id: this.state.process_id,\n            taskID: this.state.taskID,\n            medaktDocDefId: docDefId,\n            IPRDocDefId: this.state.IPRGridForm.docDefId,\n            medakts: JSON.stringify(this.state.docList),\n            IPR: JSON.stringify(this.state.docListIPR),\n            userId: this.state.userId,\n            userRole: this.state.userRole\n          };\n\n          if (this.state.fieldValue[\"MseName\"] !== null && this.state.fieldValue[\"MseName\"] !== undefined) {\n            console.log(\"button transfeDocuments: \", commandJson);\n            this.sendFieldValues(commandJson);\n            this.clearTabData(this.state.process_id);\n          } else {\n            this.props.callErrorToast(\"Выберите МСЭК для передачи данных\");\n          }\n        } else this.props.callErrorToast(\"Нет данных для передачи\");\n      } else if (name === \"downloadMemo\") {\n        this.downloadDocument(\"downloadPDF\");\n      } else if (name === \"viewRegForm\") {\n        let commandJson = {\n          commandType: \"completeTask\",\n          session_id: this.state.session_id,\n          process_id: this.state.process_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"viewRegForm\"\n            },\n            userId: {\n              value: this.state.userId\n            },\n            size: {\n              value: 10\n            },\n            page: {\n              value: 1\n            }\n          }\n        };\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (name === \"acceptComplaint\") {\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"acceptComplaint\"\n            }\n          }\n        };\n        console.log(\"button acceptComplaint: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (name === \"rejectComplaint\") {\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"rejectComplaint\"\n            }\n          }\n        };\n        console.log(\"button rejectComplaint: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (name === \"downloadMedakt\") {\n        let checkResult = this.checkForRequieredFields();\n\n        if (checkResult === true) {\n          this.props.callSuccessToast(\"Выгрузка начата дождитесь окончания процедуры!\");\n          let url = this.props.ismseApi + \"/api/ExportDataToXlsx/ExportChildByStatus\";\n          let age = \"(Детский)\";\n\n          if (this.state.taskType === \"showDownloadAdultsMedaktForm\") {\n            url = this.props.ismseApi + \"/api/ExportDataToXlsx/ExportGrownByStatus\";\n            age = \"(Взрослый)\";\n          }\n\n          let fv = this.state.fieldValue;\n          let body = {\n            \"state\": fv.state,\n            \"startDate\": this.parseDate(fv.startDate),\n            \"endDate\": this.parseDate(fv.endDate)\n          };\n\n          if (fv.msecId !== null && fv.msecId !== undefined) {\n            body.msecId = fv.msecId;\n          }\n\n          if (fv.regionId !== null && fv.regionId !== undefined) {\n            body.regionId = parseInt(fv.regionId);\n          }\n\n          if (fv.districtId !== null && fv.districtId !== undefined) {\n            body.districtId = parseInt(fv.districtId);\n          } // console.log(\"BBB\", body)\n\n\n          await fetch(url, {\n            headers: {\n              \"Accept\": \"application/json\",\n              \"Content-Type\": \"application/json\"\n            },\n            method: \"POST\",\n            body: JSON.stringify(body) // mode: 'no-cors'\n\n          }).then(response => response.blob()).then(bl => {\n            console.log(\"RES\", bl);\n            var docUrl = window.URL.createObjectURL(bl);\n            var a = document.createElement('a');\n            a.href = docUrl;\n            a.download = \"\\u0412\\u044B\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u041C\\u0435\\u0434\\u0430\\u043A\\u0442\\u043E\\u0432 \".concat(age, \".xls\");\n            document.body.appendChild(a);\n            a.click();\n            a.remove();\n          }).catch(error => console.log('error', error));\n        }\n      } else if (name === \"back\") {\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"back\"\n            }\n          }\n        };\n        console.log(\"button back: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (name === \"finish\") {\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"finish\"\n            }\n          }\n        };\n        console.log(\"button finish: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else if (name === \"cancel\") {\n        let commandJson = {\n          commandType: \"completeTask\",\n          process_id: this.state.process_id,\n          session_id: this.state.session_id,\n          taskID: this.state.taskID,\n          variables: {\n            userAction: {\n              value: \"cancel\"\n            }\n          }\n        };\n        console.log(\"button cancel: \", commandJson);\n        this.sendFieldValues(commandJson);\n        this.clearTabData(this.state.process_id);\n      } else {\n        console.log(\"Unknown button\", name);\n      }\n  } // Handler of amount of rows per page of grid form\n\n\n  rowsPageChange(size, page) {\n    console.log(\"Rows changed: \", size);\n    let filterDocument = {\n      attributes: this.getFieldValuesToSearch()\n    };\n    let commandJson = {\n      commandType: \"completeTask\",\n      session_id: this.state.session_id,\n      process_id: this.state.process_id,\n      taskID: this.state.taskID,\n      docDefId: this.state.Form.docDefId,\n      variables: {\n        userAction: {\n          value: \"findDocument\"\n        },\n        doc: {\n          value: JSON.stringify(filterDocument)\n        },\n        size: {\n          value: size\n        },\n        page: {\n          value: page\n        }\n      }\n    };\n    console.log(\"JSON Collected: \", commandJson);\n    this.sendFieldValues(commandJson);\n    this.clearTabData(this.state.process_id);\n  } // Returns Button component\n\n\n  createButton(button, index) {\n    if (button.name === \"downloadExcel\" || button.name === \"downloadPDF\") {\n      return React.createElement(Button, {\n        variant: \"outlined\",\n        name: button.name,\n        onClick: () => this.downloadDocument(button.name),\n        value: button.name,\n        style: {\n          margin: 3,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1894\n        },\n        __self: this\n      }, button.label);\n    } else if (button.name === \"attachDocument\") {\n      return React.createElement(Button, {\n        variant: \"outlined\",\n        name: button.name,\n        onClick: () => this.showScanComponentClick(),\n        value: button.name,\n        style: {\n          margin: 3,\n          backgroundColor: button.backgroundColor,\n          height: 32,\n          fontSize: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1911\n        },\n        __self: this\n      }, button.label);\n    } else return React.createElement(Button, {\n      variant: \"outlined\",\n      name: button.name,\n      onClick: () => this.buttonClick(button.name),\n      style: {\n        margin: 3,\n        backgroundColor: button.backgroundColor,\n        height: 32,\n        fontSize: 12\n      },\n      value: button.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1927\n      },\n      __self: this\n    }, button.label);\n  }\n\n  getEnumValueText(enumName) {\n    for (let i = 0; i < this.state.selectedDoc.attributes.length; i++) {\n      if (this.state.selectedDoc.attributes[i].name === enumName) {\n        return this.state.selectedDoc.attributes[i].enumValueText;\n      }\n    }\n  } // Create sections with labels and call bodyBuilder function\n\n\n  sectionBuilder(section, index) {\n    return React.createElement(Table, {\n      size: \"small\",\n      key: index + \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1952\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1953\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      style: {\n        height: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1954\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      key: index = \"head\",\n      style: {\n        color: \"black\",\n        fontSize: 14,\n        backgroundColor: \"#D3D3FE\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1955\n      },\n      __self: this\n    }, section.label))), this.bodyBuilder(section));\n  } // Create body of each section and call contentBuilder function\n\n\n  bodyBuilder(section) {\n    return React.createElement(Table, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1974\n      },\n      __self: this\n    }, React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1975\n      },\n      __self: this\n    }, section.contents.map((contentItem, index) => React.createElement(TableRow, {\n      key: index,\n      style: {\n        height: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1977\n      },\n      __self: this\n    }, contentItem.name !== \"PersonDetailFormAddress\" && contentItem.name !== \"PersonData\" && contentItem.label !== \"\" && React.createElement(TableCell, {\n      key: index + \"cell1\",\n      align: \"left\",\n      style: {\n        width: \"40%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1980\n      },\n      __self: this\n    }, contentItem.label), React.createElement(TableCell, {\n      key: index + \"cell2\",\n      align: \"left\",\n      style: {\n        width: \"60%\",\n        height: this.state.Form.formName === \"TransferMedicalCertificateForm\" ? 100 : 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1987\n      },\n      __self: this\n    }, this.contentBuilder(contentItem))))));\n  } // Create component by it's type\n\n\n  contentBuilder(contentItem) {\n    if (contentItem.type === \"Text\" || contentItem.type === \"BLOB\") {\n      return React.createElement(TextField, {\n        multiline: true // onChange={this.componentChange}\n        // onBlur={this.handleChange}\n        // defaultValue={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\n        ,\n        onChange: this.handleChange,\n        value: this.state.fieldValue[contentItem.name] !== undefined ? this.state.fieldValue[contentItem.name] : \"\",\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2003\n        },\n        __self: this\n      }); // }\n    } else if (contentItem.type === \"Int\") {\n      return React.createElement(TextField, {\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        style: {\n          width: \"100%\"\n        } // defaultValue = {(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name]: \"\"}\n        ,\n        value: this.state.fieldValue[contentItem.name] !== undefined ? this.state.fieldValue[contentItem.name] : \"\",\n        onChange: this.componentIntChange // onBlur={this.handleChange}\n        ,\n        name: contentItem.name,\n        InputProps: {\n          inputComponent: NumberFormatCustom\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2019\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"DateTime\") {\n      return React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        locale: ruLocale,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2033\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        clearable: true,\n        cancelLabel: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\",\n        okLabel: \"\\u041E\\u043A\",\n        clearLabel: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\",\n        invalidDateMessage: \"\\u043D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\",\n        name: contentItem.name,\n        margin: \"small\",\n        format: \"dd.MM.yyyy\",\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        value: this.state.fieldValue[contentItem.name] !== undefined ? this.parseDate(this.state.fieldValue[contentItem.name]) : null,\n        onChange: date => this.handleDateTimeChange(date, contentItem.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2034\n        },\n        __self: this\n      }));\n    } else if (contentItem.type === \"Enum\") {\n      // console.log(\"EN DATA\", this.state.enumData)\n      let options = [];\n      options.push({\n        \"value\": null,\n        \"label\": null,\n        \"name\": contentItem.name\n      });\n\n      for (let i = 0; i < this.state.enumData.length; i++) {\n        if (contentItem.enumDef === this.state.enumData[i].enumDef) {\n          for (let l = 0; l < this.state.enumData[i].data.length; l++) {\n            options.push({\n              \"value\": this.state.enumData[i].data[l].Id,\n              \"label\": this.state.enumData[i].data[l].Text,\n              \"name\": contentItem.name\n            });\n          }\n\n          break;\n        }\n      } // console.log(\"OPTOPNS\", options)\n      // console.log(\"S OPTOPNS\", this.state.fieldValue[contentItem.name])\n\n\n      var selectedOption = {};\n\n      if (this.state.fieldValue[contentItem.name] !== undefined) {\n        for (let i = 0; i < options.length; i++) {\n          if (options[i].value === this.state.fieldValue[contentItem.name]) {\n            selectedOption = {\n              \"value\": options[i].value,\n              \"name\": options[i].name,\n              \"label\": options[i].label\n            };\n            break;\n          } else selectedOption = {\n            \"value\": null,\n            \"label\": null,\n            \"name\": contentItem.name\n          };\n        }\n      }\n\n      return React.createElement(Select, {\n        name: contentItem.name,\n        value: selectedOption,\n        onChange: this.handleSelectChange,\n        style: {\n          height: 30,\n          width: \"100%\"\n        },\n        options: options,\n        isDisabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2091\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"Currency\" || contentItem.type === \"Float\") {\n      return React.createElement(TextField, {\n        value: this.state.fieldValue[contentItem.name] ? this.state.fieldValue[contentItem.name] : \"\" // onChange = {this.componentChange}\n        ,\n        onBlur: this.handleChange,\n        name: contentItem.name,\n        style: {\n          width: \"100%\"\n        },\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        InputProps: {\n          inputComponent: NumberFormatCustom\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2103\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"Bool\") {\n      return React.createElement(Checkbox // key={this.getUUID()}\n      , {\n        style: {\n          maxWidth: 20,\n          height: 15,\n          color: this.state.formType === \"view\" || contentItem.edit === false ? \"grey\" : \"green\"\n        },\n        name: contentItem.name,\n        onChange: this.handCheckboxChange,\n        disabled: this.state.formType === \"view\" || contentItem.edit === false ? true : false,\n        checked: this.state.fieldValue[contentItem.name] === \"True\" || this.state.fieldValue[contentItem.name] === true ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2116\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"PersonData\") {\n      return React.createElement(Person, {\n        userId: this.state.userId,\n        userRole: this.state.userRole,\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        selectedDoc: this.state.person,\n        documentViewForm: this.state.documentViewForm,\n        taskID: this.state.taskID,\n        subDocument: true,\n        changeSubDocument: this.changeSubDocument,\n        formType: this.state.personFormType,\n        enumData: this.state.personEnumData // formType = {this.state.formName === \"AdultsIPRForm\" ? \"view\" : \"edit\"}\n        ,\n        docList: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2128\n        },\n        __self: this\n      });\n    } else if (contentItem.type === \"Address\") {\n      return React.createElement(Address, {\n        SOAT: this.state.SOAT // countryChange = {this.countryChange}\n        ,\n        regionChange: this.regionChange,\n        districtChange: this.districtChange,\n        subDistrictChange: this.subDistrictChange,\n        villageChange: this.villageChange,\n        handleChange: this.handleChange,\n        Country: this.state.fieldValue.Country,\n        Region: this.state.fieldValue.Region,\n        District: this.state.fieldValue.District,\n        subDistrict: this.state.fieldValue.subDistrict,\n        Village: this.state.fieldValue.Village,\n        ResidentialAddress: this.state.fieldValue.ResidentialAddress,\n        Phone: this.state.fieldValue.Phone,\n        formType: this.state.formType,\n        edit: contentItem.edit,\n        formName: this.state.Form.formName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2148\n        },\n        __self: this\n      });\n    }\n  } // custom allerts\n\n\n  swAlert(text) {\n    return swal({\n      text: text,\n      icon: \"warning\",\n      buttons: {\n        ok: \"Ок\"\n      } // dangerMode: true,\n\n    }).then(click => {\n      if (click === \"ok\") {\n        console.log(\"CLICK OK\", click);\n      }\n    });\n  }\n\n  render() {\n    try {\n      // if (!this.state.Form) return <div>No Form</div>\n      // if (this.state.buttons === undefined) return <div>No Buttons</div>\n      // console.log(\"ViewForm State\", this.state)\n      // console.log(\"ViewForm Props\", this.props)\n      return React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2193\n        },\n        __self: this\n      }, this.state.Form !== null && React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2195\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2196\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2197\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2198\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2199\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        style: {\n          maxHeight: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2200\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        style: {\n          fontSize: 16,\n          color: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2201\n        },\n        __self: this\n      }, this.state.Form.label)))), React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2205\n        },\n        __self: this\n      }, this.state.Form.sections.map((section, index) => {\n        return this.sectionBuilder(section, index);\n      })), React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2210\n        },\n        __self: this\n      }, this.state.buttons.map((button, index) => {\n        return this.createButton(button, index);\n      }))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2219\n        },\n        __self: this\n      }), this.state.docList !== null && this.state.docList !== \"null\" && this.state.docList !== undefined ? React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        alignItems: \"flex-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2223\n        },\n        __self: this\n      }, React.createElement(GridForm, {\n        key: \"grid form\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        userId: this.state.userId,\n        organizationId: this.state.organizationId,\n        userRole: this.state.userRole,\n        docList: this.state.docList,\n        size: this.state.size,\n        page: this.state.page,\n        Form: this.state.gridForm,\n        gridFormButtons: this.state.gridFormButtons,\n        rowsPageChange: this.rowsPageChange,\n        sendFieldValues: this.sendFieldValues,\n        SOAT: this.state.SOAT,\n        handleCloseCurrentTab: this.handleCloseCurrentTab,\n        clearTabData: this.clearTabData,\n        callSuccessToast: this.props.callSuccessToast,\n        callErrorToast: this.props.callErrorToast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2224\n        },\n        __self: this\n      })) : React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2247\n        },\n        __self: this\n      }), this.state.docListIPR !== null && this.state.docListIPR !== \"null\" && this.state.docListIPR !== undefined ? React.createElement(GridForm, {\n        key: \"grid form\",\n        process_id: this.state.process_id,\n        session_id: this.state.session_id,\n        taskID: this.state.taskID,\n        userId: this.state.userId,\n        organizationId: this.state.organizationId,\n        userRole: this.state.userRole,\n        docListIPR: this.state.docListIPR,\n        size: this.state.size,\n        page: this.state.page,\n        Form: this.state.IPRGridForm // {this.state.gridForm.Form}\n        ,\n        medicalCardId: this.state.docId,\n        gridFormButtons: this.state.gridFormButtons,\n        rowsPageChange: this.rowsPageChange,\n        sendFieldValues: this.sendFieldValues,\n        SOAT: this.state.SOAT,\n        handleCloseCurrentTab: this.handleCloseCurrentTab,\n        clearTabData: this.clearTabData,\n        callSuccessToast: this.props.callSuccessToast,\n        callErrorToast: this.props.callErrorToast,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2251\n        },\n        __self: this\n      }) : React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2275\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2277\n        },\n        __self: this\n      }), this.state.download === \"downloadExcel\" && React.createElement(Download, {\n        downloadType: this.state.download,\n        Form: this.state.Form,\n        fieldValue: this.state.fieldValue,\n        person: this.state.person,\n        SOAT: this.state.SOAT,\n        selectedDoc: this.state.selectedDoc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2279\n        },\n        __self: this\n      }), this.state.download === \"downloadPDF\" && React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        spacing: 1,\n        id: \"TableToDownload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2290\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2291\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2292\n        },\n        __self: this\n      }, React.createElement(Download, {\n        downloadType: this.state.download,\n        Form: this.state.Form,\n        fieldValue: this.state.fieldValue,\n        person: this.state.person,\n        SOAT: this.state.SOAT,\n        selectedDoc: this.state.selectedDoc,\n        enumData: this.state.enumData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2293\n        },\n        __self: this\n      })))));\n    } catch (error) {\n      console.log(\"ERROR\", error);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2311\n        },\n        __self: this\n      }, \"error\");\n    }\n  }\n\n}\n\nexport default ViewForm;","map":{"version":3,"sources":["C:\\Users\\SERGO\\Desktop\\ismse\\src\\components\\ViewForm\\ViewForm.jsx"],"names":["React","Select","MaskedInput","NumberFormat","PropTypes","Grid","Card","Paper","TextField","Button","Checkbox","Table","TableHead","TableBody","TableRow","TableCell","Input","FormControl","MuiPickersUtilsProvider","DatePicker","TableToExcel","swal","DateFnsUtils","ruLocale","moment","Person","Address","GridForm","Download","NumberFormatCustom","props","inputRef","onChange","other","values","target","value","propTypes","func","isRequired","tableToPdf","tableId","mywindow","window","open","document","write","getElementById","innerHTML","close","print","RegNoMask","ref","inputElement","ViewForm","Component","constructor","changeSubDocument","name","subDoc","state","subDocument","setState","console","log","componentChange","event","handleChange","fieldValue","newValue","regex","key","test","regNoChange","trim","componentIntChange","maxValue","substring","length","handleSelectChange","fstate","i","Form","sections","l","contents","edit","regionChange","districtChange","subDistrictChange","villageChange","handCheckboxChange","checked","process_id","session_id","taskID","taskType","enumData","selectedDoc","JSON","parse","docId","buttons","gridForm","IPRGridForm","gridFormButtons","userId","userRole","organizationId","formType","person","personFormType","personEnumData","documentViewForm","docList","docListIPR","download","size","page","SOAT","transferList","selectedTransferList","sendFieldValues","bind","buttonClick","parseDate","rowsPageChange","handleCloseCurrentTab","clearTabData","showScanComponentClick","pushNewBlobs","pushNewImages","commandJson","blobs","images","componentDidUpdate","prevProps","convert","componentDidMount","setDataFromProps","undefined","sDoc","attributes","AdultsMedicalCart","id","personData","userAction","newDate","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","convertedDate","formName","docListData","userFullName","er","downloadDocument","type","checkForRegNoAct","callSuccessToast","RegNoAct","fetch","docDefId","headers","method","body","stringify","then","response","text","stringResponse","swAlert","callErrorToast","getUUID","uuidv1","require","handleDateTimeChange","date","getAddressData","code","countries","j","regions","k","districts","subDistricts","villages","m","getFieldValues","push","section","item","subDocumentAttributes","docDef","medicalCardDocDefId","Object","keys","subDocumentPersonAttributes","enumValueText","getFieldValuesToSearch","checkForRequieredFields","checkedSuccessfuly","f","fv","tt","s","required","c","fieldName","label","getDocsIdToSign","docsId","getPersonAge","birthday","ageDifMs","now","getTime","ageDate","fullAge","Math","abs","getUTCFullYear","getEnumValueTextByValue","data","Id","Text","setOrgIdToMedakt","newDocList","newItem","newDocListIPR","createDocument","commandType","variables","doc","checkResult","updateDocument","filterIPR","filterDocument","editDocument","age","Adult","adult","icon","yes","no","dangerMode","click","docsToSign","docIdList","stateTypeId","docsToRegister","states","stateBody","statusDate","docsToSetState","Document","adultsMedaktDocDefId","childMedaktDocDefId","medaktDocDefId","IPRDocDefId","medakts","IPR","url","ismseApi","startDate","endDate","msecId","regionId","parseInt","districtId","blob","bl","docUrl","URL","createObjectURL","a","createElement","href","appendChild","remove","catch","error","createButton","button","index","margin","backgroundColor","height","fontSize","getEnumValueText","enumName","sectionBuilder","color","width","bodyBuilder","map","contentItem","contentBuilder","inputComponent","options","enumDef","selectedOption","maxWidth","Country","Region","District","subDistrict","Village","ResidentialAddress","Phone","ok","render","maxHeight"],"mappings":"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","sourcesContent":["// Import material and react components\r\nimport React from \"react\";\r\nimport Select from 'react-select';\r\nimport MaskedInput from 'react-text-mask';\r\nimport NumberFormat from 'react-number-format';\r\nimport PropTypes from 'prop-types';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from '@material-ui/core/Card';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Input from '@material-ui/core/Input';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\r\n\r\n// Import libraries\r\nimport TableToExcel from \"@linways/table-to-excel\"; // https://github.com/linways/table-to-excel\r\nimport swal from 'sweetalert' // https://sweetalert.js.org/guides/\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport ruLocale from \"date-fns/locale/ru\";\r\nimport moment from \"moment\";\r\n\r\n// Import custom components\r\nimport Person from \"../Person/Person.jsx\";\r\nimport Address from \"../../components/Address/Address.jsx\";\r\nimport GridForm from \"../../components/GridForm/GridForm.jsx\";\r\nimport Download from \"../../components/Download/Download.jsx\";\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={values => {\r\n        onChange({\r\n          target: {\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      decimalSeparator={\",\"}\r\n      isNumericString\r\n    />\r\n  );\r\n}\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\nasync function tableToPdf(tableId) {\r\n  let mywindow = window.open('', 'PRINT', 'height=650, width=900, top=100, left=150');\r\n\r\n  mywindow.document.write(`<html><head><title>${'Экспорт в PDF'}</title>`);\r\n  mywindow.document.write('</head><body >');\r\n  mywindow.document.write(document.getElementById(tableId).innerHTML);\r\n  mywindow.document.write('</body></html>');\r\n\r\n  mywindow.document.close(); // necessary for IE >= 10\r\n  // mywindow.focus(); // necessary for IE >= 10*/\r\n\r\n  mywindow.print();\r\n  // mywindow.close();\r\n\r\n  return true;\r\n}\r\nfunction RegNoMask(props) {\r\n  const { inputRef, ...other } = props\r\n  return (\r\n    <MaskedInput\r\n      {...other}\r\n      ref={ref => {\r\n        inputRef(ref ? ref.inputElement : null)\r\n      }}\r\n      mask={[/[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/, /[0-9-№]/]}\r\n      placeholderChar={'\\u2000'}\r\n      showMask\r\n    />\r\n  )\r\n}\r\nclass ViewForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      process_id: this.props.process_id,\r\n      session_id: this.props.session_id,\r\n      taskID: this.props.taskID,\r\n      taskType: this.props.taskType,\r\n      fieldValue: {},\r\n      subDocument: {},\r\n      enumData: this.props.enumData,\r\n      Form: null,\r\n      selectedDoc: JSON.parse(this.props.selectedDoc),\r\n      docId: null,\r\n      buttons: this.props.buttons,\r\n      gridForm: null,\r\n      IPRGridForm: this.props.IPRGridForm,\r\n      gridFormButtons: null,\r\n      userId: this.props.userId,\r\n      userRole: this.props.userRole,\r\n      organizationId: this.props.organizationId,\r\n      formType: this.props.formType,\r\n      person: null,\r\n      personFormType: this.props.personFormType,\r\n      personEnumData: this.props.personEnumData,\r\n      documentViewForm: this.props.documentViewForm,\r\n      docList: null,\r\n      docListIPR: null,\r\n      download: null,\r\n      size: this.props.size,\r\n      page: this.props.page,\r\n      SOAT: null,\r\n      // regNoMask: []\r\n\r\n      // TRANSFER LIST\r\n      transferList: { state: [] },\r\n      checked: { state: [] },\r\n      selectedTransferList: { state: [] }\r\n\r\n    }\r\n    this.sendFieldValues = this.sendFieldValues.bind(this)\r\n    this.buttonClick = this.buttonClick.bind(this)\r\n    this.parseDate = this.parseDate.bind(this)\r\n    this.changeSubDocument = this.changeSubDocument.bind(this)\r\n    this.rowsPageChange = this.rowsPageChange.bind(this)\r\n    this.handleCloseCurrentTab = this.handleCloseCurrentTab.bind(this)\r\n    this.clearTabData = this.clearTabData.bind(this)\r\n    this.showScanComponentClick = this.showScanComponentClick.bind(this)\r\n    this.pushNewBlobs = this.pushNewBlobs.bind(this)\r\n    this.pushNewImages = this.pushNewImages.bind(this)\r\n  }\r\n  handleCloseCurrentTab(process_id) {\r\n    this.props.handleCloseCurrentTab(process_id)\r\n  }\r\n  showScanComponentClick() {\r\n    this.props.showScanComponentClick()\r\n  }\r\n  sendFieldValues(commandJson) {\r\n    this.props.sendFieldValues(commandJson)\r\n  }\r\n  pushNewBlobs(blobs) {\r\n    this.props.pushNewBlobs(blobs)\r\n  }\r\n  pushNewImages(images) {\r\n    this.props.pushNewImages(images)\r\n  }\r\n  async componentDidUpdate(prevProps) {\r\n    // if (!this.state.Form) {\r\n    //   this.setDataFromProps()\r\n    // }\r\n    if (this.state.download !== null) {\r\n      if (this.state.download === \"downloadExcel\") {\r\n        TableToExcel.convert(document.getElementById(\"TableToDownload\"))\r\n        this.setState({ download: null })\r\n      }\r\n      else {\r\n        tableToPdf(\"TableToDownload\")\r\n        this.setState({ download: null })\r\n      }\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    console.log(\"VIEW FORM PROPS\", this.props)\r\n    this.setDataFromProps()\r\n  }\r\n  // Set data from props to local state\r\n  async setDataFromProps() {\r\n    try {\r\n      let fstate = this.state\r\n      fstate.Form = this.props.Form\r\n      fstate.gridForm = this.props.gridForm\r\n      if (this.props.selectedDoc !== undefined && this.props.selectedDoc !== \"null\" && this.props.selectedDoc !== null) {\r\n        var sDoc = JSON.parse(this.props.selectedDoc)\r\n        console.log(\"S DOC\", sDoc)\r\n        //SET PERSON DATA TO PERSON\r\n        if (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\") {\r\n          for (let i = 0; i < sDoc.attributes.length; i++) {\r\n            if (sDoc.attributes[i].name === \"AdultsMedicalCart\") {\r\n              for (let l = 0; l < sDoc.attributes[i].subDocument.attributes.length; l++) {\r\n                if (sDoc.attributes[i].subDocument.attributes[l].name === \"Person\") {\r\n                  fstate.person = sDoc.attributes[i].subDocument.attributes[l].subDocument\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          for (let i = 0; i < sDoc.attributes.length; i++) {\r\n            if (sDoc.attributes[i].name === \"Person\") {\r\n              // console.log(\"PERSON\", sDoc.attributes[i].subDocument)\r\n              if (sDoc.attributes[i].subDocument !== null && sDoc.attributes[i].subDocument !== undefined) {\r\n                fstate.person = sDoc.attributes[i].subDocument\r\n              }\r\n            }\r\n          }\r\n        }\r\n        // SET FIELD VALUES\r\n        for (let i = 0; i < sDoc.attributes.length; i++) {\r\n          if (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\") {\r\n            if (sDoc.attributes[i].name === \"AdultsMedicalCart\") {\r\n              fstate.fieldValue.AdultsMedicalCart = sDoc.attributes[i].subDocument.id\r\n              for (let l = 0; l < sDoc.attributes[i].subDocument.attributes.length; l++) {\r\n                if (sDoc.attributes[i].subDocument.attributes[l].value !== null) {\r\n                  fstate.fieldValue[sDoc.attributes[i].subDocument.attributes[l].name] = sDoc.attributes[i].subDocument.attributes[l].value\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              if (sDoc.attributes[i].value !== null) {\r\n                fstate.fieldValue[sDoc.attributes[i].name] = sDoc.attributes[i].value\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            if (sDoc.attributes[i].value !== null) {\r\n              fstate.fieldValue[sDoc.attributes[i].name] = sDoc.attributes[i].value\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // SET PERSON DATA INTO EMPTY IPR FORM\r\n      if (this.props.person !== undefined && this.props.person !== \"null\" && this.props.person !== null) {\r\n        var personData = JSON.parse(this.props.person)\r\n        fstate.person = personData\r\n        fstate.fieldValue.Person = personData.id\r\n      }\r\n      if (this.props.docList !== undefined) {\r\n        fstate.docList = JSON.parse(this.props.docList)\r\n      }\r\n      if (this.props.docListIPR !== undefined) {\r\n        fstate.docListIPR = JSON.parse(this.props.docListIPR)\r\n      }\r\n      if (this.props.SOAT !== undefined) {\r\n        fstate.SOAT = this.props.SOAT\r\n      }\r\n      if (this.props.gridFormButtons !== undefined) {\r\n        fstate.gridFormButtons = this.props.gridFormButtons\r\n      }\r\n      if (this.props.docId !== null || this.props.docId !== \"null\" || this.props.docId !== undefined) {\r\n        fstate.docId = this.props.docId\r\n      }\r\n      // this.setState(fstate)\r\n      // UPDAETE SOME DATA if nesessary\r\n      if (this.props.userAction === \"reexamination\") {\r\n        var newDate = new Date()\r\n        var dd = String(newDate.getDate()).padStart(2, '0')\r\n        var mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\r\n        var yyyy = newDate.getFullYear()\r\n        var convertedDate = String(dd + '.' + mm + '.' + yyyy)\r\n        fstate.fieldValue[\"Date\"] = convertedDate\r\n        fstate.fieldValue[\"RegNoAct\"] = null\r\n        fstate.fieldValue[\"ExaminationPrRe\"] = \"8d71baae-b834-42e5-be87-7f5637cc46d8\"\r\n        fstate.fieldValue[\"goal1\"] = false\r\n        fstate.fieldValue[\"goal2\"] = false\r\n        fstate.fieldValue[\"goal3\"] = false\r\n        fstate.fieldValue[\"goal4\"] = null\r\n        fstate.fieldValue[\"goal5\"] = false\r\n        fstate.fieldValue[\"goal6\"] = false\r\n        fstate.fieldValue[\"goalAnother\"] = null\r\n        fstate.fieldValue[\"DisabilityGroup\"] = null\r\n        // fstate.fieldValue[\"ExamDateFrom\"] = \"NaN.NaN.NaN\"\t\r\n        // fstate.fieldValue[\"ExamDateTo\"] = \"NaN.NaN.NaN\"\t\r\n        // fstate.fieldValue[\"ExamStartDate\"] = \"NaN.NaN.NaN\"\r\n        // fstate.fieldValue[\"ExamOfDate\"] = \"NaN.NaN.NaN\"\r\n        // fstate.fieldValue[\"ExamFinishDate\"] = \"NaN.NaN.NaN\"\r\n        fstate.fieldValue[\"ExamDateFrom\"] = undefined\r\n        fstate.fieldValue[\"ExamDateTo\"] = undefined\r\n        fstate.fieldValue[\"ExamStartDate\"] = undefined\r\n        fstate.fieldValue[\"ExamOfDate\"] = undefined\r\n        fstate.fieldValue[\"ExamFinishDate\"] = undefined\r\n        fstate.fieldValue[\"ReferenceNumber\"] = undefined\r\n      }\r\n      if (fstate.Form !== null) {\r\n        if ((fstate.Form.formName === \"AdultsIPRForm\" || fstate.Form.formName === \"ChildIPRForm\") && fstate.fieldValue.AdultsMedicalCart === undefined) {\r\n          fstate.fieldValue.AdultsMedicalCart = this.props.docId\r\n        }\r\n        if ((fstate.person === null || this.props.person !== \"null\") && fstate.Form.formName === \"TransferMedicalCertificateForm\" && fstate.docList !== \"[]\") {\r\n          var docListData = JSON.parse(this.props.docList)\r\n          // console.log(\"docListData\", docListData)\r\n          for (let l = 0; l < docListData[0].attributes.length; l++) {\r\n            if (docListData[0].attributes[l].name === \"Person\") {\r\n              fstate.person = docListData[0].attributes[l].subDocument\r\n            }\r\n          }\r\n        }\r\n        if (fstate.fieldValue[\"MseName\"] === undefined &&\r\n          fstate.Form.formName !== \"TransferMedicalCertificateForm\" &&\r\n          fstate.Form.formName !== \"AdultsDetailedSearchForm\" &&\r\n          fstate.Form.formName !== \"AdultsIPRSearchForm\" &&\r\n          fstate.Form.formName !== \"ChildDetailedSearchForm\" &&\r\n          fstate.Form.formName !== \"AdultsIPRSearchForm\" &&\r\n          fstate.Form.formName !== \"AdultsRegistrationSearchForm\"\r\n        ) {\r\n          fstate.fieldValue[\"MseName\"] = fstate.organizationId\r\n        }\r\n        // DISABLE 2 BLOCKS OF FORM /FROM INCOMING DATA\r\n        if (fstate.fieldValue[\"Occupation\"] !== \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\r\n          for (let i = 0; i < fstate.Form.sections.length; i++) {\r\n            if (fstate.Form.sections[i].name === \"HowToDoJob\") {\r\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n                fstate.Form.sections[i].contents[l].edit = false\r\n                fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false\r\n              }\r\n            }\r\n            else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\r\n              for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n                fstate.Form.sections[i].contents[l].edit = false\r\n                fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (this.props.taskType === \"showAdultsStatesSelectingForm\") {\r\n        fstate.fieldValue[\"userName\"] = this.props.userFullName\r\n      }\r\n      if (fstate.fieldValue[\"Country\"] === undefined && this.props.SOAT !== null && this.props.SOAT !== undefined) {\r\n        fstate.fieldValue[\"Country\"] = \"4170000000000\"\r\n      }\r\n      // SET PERSON DATA IF IT\"S null\r\n      if (fstate.person === null && (this.props.taskType === \"showIPRForm\" || this.props.taskType === \"showChildIPRForm\")) {\r\n        if (fstate.fieldValue[\"IPRNo\"] === undefined) {\r\n          fstate.fieldValue[\"IPRNo\"] = fstate.fieldValue[\"No\"]\r\n        }\r\n        for (let l = 0; l < fstate.selectedDoc.attributes.length; l++) {\r\n          if (fstate.selectedDoc.attributes[l].name === \"Person\") {\r\n            fstate.person = fstate.selectedDoc.attributes[l].subDocument\r\n            // fstate.fieldValue.Person = fstate.selectedDoc.attributes[l].subDocument.id\r\n          }\r\n        }\r\n      }\r\n      if (fstate.person === null && this.props.person !== undefined && this.props.person !== \"null\" && this.props.person !== null) {\r\n        personData = JSON.parse(this.props.person)\r\n        fstate.person = personData\r\n        fstate.fieldValue.Person = personData.id\r\n      }\r\n\r\n\r\n      // SET DATE OF REGISTRATION DEFAULT CURRENT DAY\r\n      if (this.props.taskType === \"showRegForm\" || this.props.taskType === \"showChildRegForm\" ||\r\n        this.props.taskType === \"showDetailedForm\" || this.props.taskType === \"showChildDetailedForm\") {\r\n        if (fstate.fieldValue[\"Date\"] === undefined) {\r\n          let newDate = new Date()\r\n          let dd = String(newDate.getDate()).padStart(2, '0')\r\n          let mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\r\n          let yyyy = newDate.getFullYear()\r\n          let convertedDate = String(dd + '.' + mm + '.' + yyyy)\r\n          fstate.fieldValue[\"Date\"] = convertedDate\r\n        }\r\n      }\r\n\r\n      this.setState(fstate)\r\n    }\r\n    catch (er) {\r\n      console.log(\"ERROR\", er)\r\n    }\r\n  }\r\n  async downloadDocument(type) {\r\n    this.setState({ download: type })\r\n  }\r\n  // Delete close component and delete its data from hash stared in home component\r\n  clearTabData(process_id) {\r\n    this.props.clearTabData(process_id)\r\n  }\r\n  // Check field regNoAct if it's exist in database, it should be unique\r\n  async checkForRegNoAct(commandJson, length) {\r\n    if (this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined) {\r\n      this.props.callSuccessToast(\"Проверка № Медакта\")\r\n      var RegNoAct = { attributes: [{ name: \"RegNoAct\", value: this.state.fieldValue[\"RegNoAct\"], type: \"Text\" }] }\r\n      console.log(\"BODY\", RegNoAct)\r\n      await fetch(\"api/Document/FilterDocumentsByDefId?defId=\" + this.state.Form.docDefId + \"&size=3&page=1&userId=\" + this.state.userId, {\r\n        headers: {\r\n          \"Accept\": \"application/x-www-form-urlencoded\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(RegNoAct),\r\n        // mode: 'no-cors'\r\n      })\r\n        .then(response => {\r\n          response.text().then(stringResponse => {\r\n            var document = JSON.parse(stringResponse)\r\n            console.log(\"RESPONSE\", document)\r\n            // this.sendFieldValues(commandJson)\r\n            if (document.length <= length) {\r\n              console.log(\"LENGTH\", document.length, length)\r\n              this.sendFieldValues(commandJson)\r\n              this.clearTabData(this.state.process_id)\r\n              this.props.callSuccessToast(\"Проверка завершена!\")\r\n            }\r\n            else {\r\n              this.swAlert(\"Гражданин с таким № акта уже существует!\")\r\n            }\r\n          })\r\n        })\r\n    }\r\n    else { this.props.callErrorToast(\"Заполните поле \\\"№ акта по МСЭК\\\"\") }\r\n  }\r\n  // Handle changing of person document fields if it is enabled for input and set values to local state\r\n  changeSubDocument = (name, value) => {\r\n    let subDoc = this.state.subDocument\r\n    subDoc[name] = value\r\n    this.setState({ subDocument: subDoc })\r\n    console.log(\"Person Data\", name, value)\r\n  }\r\n  // Returns random id\r\n  getUUID() {\r\n    const uuidv1 = require(\"uuid/v1\")\r\n    return uuidv1()\r\n  }\r\n  // Handling component changing without render all state, made for optimization\r\n  componentChange = (event) => {\r\n    console.log(\"COM CHANGE\", event.target.name, event.target.value)\r\n  }\r\n  // Handling component changing with render state, used onBlur of component, made for optimization\r\n  handleChange = (event) => {\r\n    // console.log(\"HANDLE TEXT CHANGE\", event.target.name, event.target.value)\r\n    let fieldValue = this.state.fieldValue\r\n    if (event.target.name === \"RegNoAct\") {\r\n      let newValue = \"\"\r\n      let regex = /[0-9-№]/\r\n      for (let key in event.target.value) {\r\n        if (regex.test(event.target.value[key]) === true) {\r\n          newValue = newValue + event.target.value[key]\r\n        }\r\n      }\r\n      fieldValue[event.target.name] = newValue\r\n      // console.log(\"newValue\", newValue, fieldValue)\r\n    }\r\n    else {\r\n      fieldValue[event.target.name] = event.target.value\r\n    }\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  // Controlling input in one field RegNoAct, create mask for inpur, field should accept only \"№\", \"-\" and all digits\r\n  regNoChange = (event) => {\r\n    // event.preventDefault()\r\n    var value = event.target.value.trim()\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = value\r\n    this.setState({ fieldValue: fieldValue })\r\n    // console.log(\"REGNOACT\", event.target.value)\r\n    // if(event.target.value === \"\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\"){\r\n    //   console.log(\"REGNO null\")\r\n    //   let fieldValue = this.state.fieldValue\r\n    //   fieldValue[event.target.name] = null\r\n    //   this.setState({fieldValue: fieldValue})\r\n    // }\r\n    // else{\r\n    //   for(let i=value.length; i>0; i--){\r\n    //     let lastChar = value.substring(i -1, i)\r\n    //     console.log(\"LAST\", lastChar)\r\n    //     if(lastChar !== '\\u2000'){\r\n    //       let fieldValue = this.state.fieldValue\r\n    //       fieldValue[event.target.name] = value\r\n    //       this.setState({fieldValue: fieldValue})\r\n    //       break\r\n    //     }\r\n    //     value = value.substring(0, value.length -1)\r\n    //   }\r\n    // }\r\n    // REGEX\r\n    // let regex = /[0-9-]/\r\n    // let lastChar = value.substring(value.length -1, value.length)\r\n    // console.log(\"LAST\", lastChar)\r\n    // // let chars = event.target.value.split('')\r\n    // // let char = chars.pop()\r\n\r\n    // if(!regex.test(lastChar)){\r\n    //   // value = chars.join('')\r\n    //   console.log(\"not valid\", lastChar)\r\n    // }\r\n    // else{\r\n    //   let fieldValue = this.state.fieldValue\r\n    //   fieldValue[event.target.name] = value\r\n    //   this.setState({fieldValue: fieldValue})\r\n    // }\r\n  }\r\n  // regNoKeyPress=(event)=>{\r\n  //   let x = event.charCode\r\n  //   console.log(\"CODE\", x)\r\n  // }\r\n  // getRegNoMask(){\r\n  //   let value = this.state.fieldValue[\"RegNoAct\"] !== undefined ? this.state.fieldValue[\"RegNoAct\"] : \"\"\r\n  //   let valueLength = value.length\r\n  //   console.log(\"VAL LEN\", valueLength)\r\n  //   let regex = /[1-9-]/\r\n  //   let mask = []\r\n  //   for(let i=0; i<valueLength; i++){\r\n  //     mask.push(regex)\r\n  //   }\r\n  //   // let mask=[/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/,/[1-9-]/]\r\n  //   return mask\r\n  // }\r\n\r\n  // Handler that control input of components with type of integer\r\n  componentIntChange = (event) => {\r\n    // console.log(\"CHANGE\", event.target.name, event.target.value)\r\n    if (event.target.value > 2147483646) {\r\n      let value = event.target.value\r\n      let maxValue = value.substring(0, value.length - 1)\r\n      // console.log(\"SLICE\", value, maxValue)\r\n      let fieldValue = this.state.fieldValue\r\n      fieldValue[event.target.name] = maxValue\r\n      this.setState({ fieldValue: fieldValue })\r\n    }\r\n\r\n    // else{\r\n    //   let fieldValue = this.state.fieldValue\r\n    //   console.log(\"CHANGE\", event.target.name, event.target.value)\r\n    //   fieldValue[event.target.name] = event.target.value\r\n    //   this.setState({fieldValue: fieldValue})\r\n    // }\r\n  }\r\n  // Handler of select copmponet changes\r\n  handleSelectChange = (event) => {\r\n    let fstate = this.state\r\n    if (event.name === \"Occupation\") {\r\n      if (event.value === \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\r\n        for (let i = 0; i < fstate.Form.sections.length; i++) {\r\n          if (fstate.Form.sections[i].name === \"HowToDoJob\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = true\r\n            }\r\n          }\r\n          else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = true\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (event.value !== \"9d5a6ba0-c836-4dd0-b8d2-6cc2cfa8bdb8\") {\r\n        for (let i = 0; i < fstate.Form.sections.length; i++) {\r\n          if (fstate.Form.sections[i].name === \"HowToDoJob\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = false\r\n              fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false\r\n            }\r\n          }\r\n          else if (fstate.Form.sections[i].name === \"WorkingConditions\") {\r\n            for (let l = 0; l < fstate.Form.sections[i].contents.length; l++) {\r\n              fstate.Form.sections[i].contents[l].edit = false\r\n              fstate.fieldValue[fstate.Form.sections[i].contents[l].name] = false\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    fstate.fieldValue[event.name] = event.value\r\n    this.setState(fstate)\r\n    console.log(`Option selected:`, event)\r\n  }\r\n  // 5 Hadlers that control changing of address data changing\r\n  // countryChange =(event) => {\r\n  //   let fieldValue = this.state.fieldValue\r\n  //   fieldValue[event.target.name] = event.target.value\r\n  //   fieldValue[\"Region\"] = null\r\n  //   fieldValue[\"District\"] = null\r\n  //   fieldValue[\"subDistrict\"] = null\r\n  //   fieldValue[\"Village\"] = null\r\n  //   console.log(\"Country selected\", event.target.name)\r\n  //   this.setState({fieldValue: fieldValue})\r\n  // }\r\n  regionChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    fieldValue[\"District\"] = null\r\n    fieldValue[\"subDistrict\"] = null\r\n    fieldValue[\"Village\"] = null\r\n    console.log(\"Region selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  districtChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    fieldValue[\"subDistrict\"] = null\r\n    fieldValue[\"Village\"] = null\r\n    console.log(\"District selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  subDistrictChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    fieldValue[\"Village\"] = null\r\n    console.log(\"District selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  villageChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.value\r\n    console.log(\"Village selected\", event.target.name)\r\n    this.setState({ fieldValue: fieldValue })\r\n  }\r\n  // DateTime component change handler\r\n  handleDateTimeChange(date, name) {\r\n    let fieldValue = this.state.fieldValue\r\n    if (date !== null) {\r\n      var newDate = new Date(date)\r\n      var dd = String(newDate.getDate()).padStart(2, '0')\r\n      var mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\r\n      var yyyy = newDate.getFullYear()\r\n      var convertedDate = String(dd + '.' + mm + '.' + yyyy)\r\n      // console.log(\"CDATE\", convertedDate)\r\n      fieldValue[name] = convertedDate\r\n      this.setState({ fieldValue: fieldValue })\r\n    }\r\n    else {\r\n      fieldValue[name] = undefined\r\n      this.setState({ fieldValue: fieldValue })\r\n    }\r\n\r\n  }\r\n  // Convert date to approptiate format\r\n  parseDate(date) {\r\n    if (date !== undefined) {\r\n      var dd = date.substring(0, 2)\r\n      var mm = date.substring(3, 5)\r\n      var yyyy = date.substring(6, 10)\r\n      var convertedDate = String(yyyy + '-' + mm + '-' + dd)\r\n      var newDate = new Date(convertedDate) // \"2020-01-26\"\r\n      dd = String(newDate.getDate()).padStart(2, '0')\r\n      mm = String(newDate.getMonth() + 1).padStart(2, '0') //January is 0!\r\n      yyyy = newDate.getFullYear()\r\n      convertedDate = yyyy + '-' + mm + '-' + dd\r\n    }\r\n    // console.log(\"DATE\", convertedDate)\r\n    return convertedDate\r\n  }\r\n\r\n  handCheckboxChange = (event) => {\r\n    let fieldValue = this.state.fieldValue\r\n    fieldValue[event.target.name] = event.target.checked\r\n    this.setState({ fieldValue: fieldValue })\r\n    // console.log(\"new checkbox status\", this.state.fieldValue[event.target.name])\r\n  }\r\n  // Get name of address by its code\r\n  getAddressData(code) {\r\n    for (var i = 0; i < this.state.SOAT.countries.length; i++) {\r\n      if (code === this.state.SOAT.countries[i].code) {\r\n        return this.state.SOAT.countries[i].name\r\n      }\r\n      else {\r\n        for (var j = 0; j < this.state.SOAT.countries[i].regions.length; j++) {\r\n          if (code === this.state.SOAT.countries[i].regions[j].code) {\r\n            return this.state.SOAT.countries[i].regions[j].name\r\n          }\r\n          else {\r\n            for (var k = 0; k < this.state.SOAT.countries[i].regions[j].districts.length; k++) {\r\n              if (code === this.state.SOAT.countries[i].regions[j].districts[k].code) {\r\n                return this.state.SOAT.countries[i].regions[j].districts[k].name\r\n              }\r\n              else {\r\n                if (this.state.SOAT.countries[i].regions[j].districts[k].subDistricts !== undefined) {\r\n                  for (var l = 0; l < this.state.SOAT.countries[i].regions[j].districts[k].subDistricts.length; l++) {\r\n                    if (code === this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].code) {\r\n                      return this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].name\r\n                    }\r\n                    else {\r\n                      if (this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages !== undefined) {\r\n                        for (var m = 0; m < this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages.length; m++) {\r\n                          if (code === this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages[m].code) {\r\n                            return this.state.SOAT.countries[i].regions[j].districts[k].subDistricts[l].villages[m].name\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Collecting all field values and return as attributes\r\n  getFieldValues() {\r\n    var attributes = []\r\n    if (this.state.taskType === \"showIPRForm\" || this.state.taskType === \"showChildIPRForm\") {\r\n      console.log(\"IPR FORM\")\r\n      for (var key in this.state.fieldValue) {\r\n        if (key === \"AdultsMedicalCart\") {\r\n          attributes.push({\r\n            name: \"AdultsMedicalCart\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Doc\",\r\n          })\r\n        }\r\n        else if (key === \"IPRNo\") {\r\n          attributes.push({\r\n            name: \"IPRNo\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else {\r\n          for (var section = 0; section < this.state.Form.sections.length; section++) {\r\n            for (var item = 0; item < this.state.Form.sections[section].contents.length; item++) {\r\n              if (key === this.state.Form.sections[section].contents[item].name) {\r\n                if (this.state.Form.sections[section].contents[item].edit === true) {\r\n                  attributes.push({\r\n                    name: this.state.Form.sections[section].contents[item].name,\r\n                    value: this.state.fieldValue[key],\r\n                    type: this.state.Form.sections[section].contents[item].type,\r\n                  })\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else if (this.state.taskType === \"showIPRSearchForm\" || this.state.taskType === \"showChildIPRSearchForm\") {\r\n      var subDocumentAttributes = []\r\n      for (key in this.state.fieldValue) {\r\n        if (this.state.fieldValue[key] !== null && this.state.fieldValue[key] !== \"\") {\r\n          if (key === \"Country\") {\r\n            subDocumentAttributes.push({\r\n              name: \"Country\",\r\n              value: this.state.fieldValue[key],\r\n              type: \"Text\",\r\n            })\r\n          }\r\n          else if (key === \"Region\") {\r\n            subDocumentAttributes.push({\r\n              name: \"Region\",\r\n              value: this.state.fieldValue[key],\r\n              type: \"Text\",\r\n            })\r\n          }\r\n          else if (key === \"District\") {\r\n            subDocumentAttributes.push({\r\n              name: \"District\",\r\n              value: this.state.fieldValue[key],\r\n              type: \"Text\",\r\n            })\r\n          }\r\n        }\r\n        for (let section = 0; section < this.state.Form.sections.length; section++) {\r\n          for (let item = 0; item < this.state.Form.sections[section].contents.length; item++) {\r\n            if (key === this.state.Form.sections[section].contents[item].name) {\r\n              subDocumentAttributes.push({\r\n                name: this.state.Form.sections[section].contents[item].name,\r\n                value: this.state.fieldValue[key],\r\n                type: this.state.Form.sections[section].contents[item].type,\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n      attributes.push({\r\n        name: \"AdultsMedicalCart\",\r\n        type: \"Doc\",\r\n        docDef: this.state.Form.medicalCardDocDefId,\r\n        \"subDocument\": {\r\n          \"attributes\": subDocumentAttributes\r\n        }\r\n      })\r\n      if (Object.keys(this.state.subDocument).length !== 0) {\r\n        var subDocumentPersonAttributes = []\r\n        for (var key in this.state.subDocument) {\r\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\r\n            if (key === this.state.documentViewForm.attributes[i].name) {\r\n              subDocumentPersonAttributes.push({\r\n                name: this.state.documentViewForm.attributes[i].name,\r\n                value: this.state.subDocument[key],\r\n                type: this.state.documentViewForm.attributes[i].type,\r\n              })\r\n              console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key])\r\n            }\r\n          }\r\n        }\r\n        attributes.subDocumentAttributes.push({\r\n          name: \"Person\",\r\n          type: \"Doc\",\r\n          docDef: this.state.documentViewForm.docDefId,\r\n          \"subDocument\": {\r\n            \"attributes\": subDocumentPersonAttributes\r\n          }\r\n        })\r\n      }\r\n      console.log(\"IPRATRS\", attributes)\r\n    }\r\n    else {\r\n      // console.log(\"Fiel Values\", this.state.fieldValue)\r\n      for (key in this.state.fieldValue) {\r\n        if (key === \"Country\") {\r\n          attributes.push({\r\n            name: \"Country\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Region\") {\r\n          attributes.push({\r\n            name: \"Region\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"District\") {\r\n          attributes.push({\r\n            name: \"District\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"subDistrict\") {\r\n          attributes.push({\r\n            name: \"subDistrict\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Village\") {\r\n          attributes.push({\r\n            name: \"Village\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"ResidentialAddress\") {\r\n          attributes.push({\r\n            name: \"ResidentialAddress\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Phone\") {\r\n          attributes.push({\r\n            name: \"Phone\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Person\") {\r\n          attributes.push({\r\n            name: \"Person\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Doc\",\r\n          })\r\n        }\r\n\r\n        else {\r\n          for (section = 0; section < this.state.Form.sections.length; section++) {\r\n            for (item = 0; item < this.state.Form.sections[section].contents.length; item++) {\r\n              if (key === this.state.Form.sections[section].contents[item].name) {\r\n                attributes.push({\r\n                  name: this.state.Form.sections[section].contents[item].name,\r\n                  value: this.state.fieldValue[key],\r\n                  type: this.state.Form.sections[section].contents[item].type\r\n                })\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (Object.keys(this.state.subDocument).length !== 0) {\r\n        subDocumentAttributes = []\r\n        for (key in this.state.subDocument) {\r\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\r\n            if (key === this.state.documentViewForm.attributes[i].name) {\r\n              subDocumentAttributes.push({\r\n                name: this.state.documentViewForm.attributes[i].name,\r\n                value: this.state.subDocument[key],\r\n                type: this.state.documentViewForm.attributes[i].type,\r\n              })\r\n              console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key])\r\n            }\r\n          }\r\n        }\r\n        attributes.push({\r\n          name: \"Person\",\r\n          type: \"Doc\",\r\n          docDef: this.state.documentViewForm.docDefId,\r\n          \"subDocument\": {\r\n            \"attributes\": subDocumentAttributes\r\n          }\r\n        })\r\n      }\r\n    }\r\n    // console.log(\"ATTR\", attributes)\r\n    return attributes\r\n  }\r\n  getFieldValuesToSearch() {\r\n    var attributes = []\r\n    for (var key in this.state.fieldValue) {\r\n      if (this.state.fieldValue[key] !== null && this.state.fieldValue[key] !== \"\") { //&& this.state.fieldValue[key] !== \"NaN.NaN.NaN\"\r\n        if (key === \"Country\") {\r\n          attributes.push({\r\n            name: \"Country\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Region\") {\r\n          attributes.push({\r\n            name: \"Region\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"District\") {\r\n          attributes.push({\r\n            name: \"District\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"subDistrict\") {\r\n          attributes.push({\r\n            name: \"subDistrict\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Village\") {\r\n          attributes.push({\r\n            name: \"Village\",\r\n            value: this.state.fieldValue[key],\r\n            enumValueText: this.getAddressData(this.state.fieldValue[key]),\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"ResidentialAddress\") {\r\n          attributes.push({\r\n            name: \"ResidentialAddress\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Phone\") {\r\n          attributes.push({\r\n            name: \"Phone\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Text\",\r\n          })\r\n        }\r\n        else if (key === \"Person\") {\r\n          attributes.push({\r\n            name: \"Person\",\r\n            value: this.state.fieldValue[key],\r\n            type: \"Doc\",\r\n          })\r\n        }\r\n\r\n        else {\r\n          for (var section = 0; section < this.state.Form.sections.length; section++) {\r\n            for (var item = 0; item < this.state.Form.sections[section].contents.length; item++) {\r\n              if (key === this.state.Form.sections[section].contents[item].name) {\r\n                attributes.push({\r\n                  name: this.state.Form.sections[section].contents[item].name,\r\n                  value: this.state.fieldValue[key],\r\n                  type: this.state.Form.sections[section].contents[item].type\r\n                })\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (Object.keys(this.state.subDocument).length !== 0) {\r\n      var subDocumentAttributes = []\r\n      for (key in this.state.subDocument) {\r\n        if (this.state.subDocument[key] !== null && this.state.subDocument[key] !== \"\") { //&& this.state.subDocument[key] !== \"NaN.NaN.NaN\"\r\n          for (let i = 0; i < this.state.documentViewForm.attributes.length; i++) {\r\n            if (key === this.state.documentViewForm.attributes[i].name) {\r\n              subDocumentAttributes.push({\r\n                name: this.state.documentViewForm.attributes[i].name,\r\n                value: this.state.subDocument[key],\r\n                type: this.state.documentViewForm.attributes[i].type,\r\n              })\r\n              // console.log(\"PUSHED\", this.state.documentViewForm.attributes[i].name, this.state.subDocument[key])\r\n            }\r\n          }\r\n        }\r\n      }\r\n      attributes.push({\r\n        name: \"Person\",\r\n        type: \"Doc\",\r\n        docDef: this.state.documentViewForm.docDefId,\r\n        \"subDocument\": {\r\n          \"attributes\": subDocumentAttributes\r\n        }\r\n      })\r\n    }\r\n    return attributes\r\n  }\r\n  // checkForEmptyFields(commandJson, length) {\r\n  //   //  Adulds Medakt || Reg Form\r\n  //   if (this.state.taskType === \"showRegForm\" || this.state.taskType === \"showDetailedForm\") {\r\n  //     // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\r\n  //     if (this.state.fieldValue[\"Country\"] !== null && this.state.fieldValue[\"Country\"] !== undefined) {\r\n  //       if (this.state.fieldValue[\"Region\"] !== null && this.state.fieldValue[\"Region\"] !== undefined) {\r\n  //         if (this.state.fieldValue[\"EducationAct\"] !== null && this.state.fieldValue[\"EducationAct\"] !== undefined) {\r\n  //           if (this.state.fieldValue[\"Occupation\"] !== null && this.state.fieldValue[\"Occupation\"] !== undefined) {\r\n  //             if (this.state.fieldValue[\"ExaminationPrRe\"] !== null && this.state.fieldValue[\"ExaminationPrRe\"] !== undefined) {\r\n  //               if (this.state.fieldValue[\"ExaminationPlace\"] !== null && this.state.fieldValue[\"ExaminationPlace\"] !== undefined) {\r\n  //                 if (this.state.fieldValue[\"PensionStatus\"] !== null && this.state.fieldValue[\"PensionStatus\"] !== undefined) {\r\n  //                   if (\r\n  //                     (this.state.fieldValue[\"goal1\"] !== false && this.state.fieldValue[\"goal1\"] !== undefined && this.state.fieldValue[\"goal1\"] !== \"False\") ||\r\n  //                     (this.state.fieldValue[\"goal2\"] !== false && this.state.fieldValue[\"goal2\"] !== undefined && this.state.fieldValue[\"goal2\"] !== \"False\") ||\r\n  //                     (this.state.fieldValue[\"goal3\"] !== false && this.state.fieldValue[\"goal3\"] !== undefined && this.state.fieldValue[\"goal3\"] !== \"False\") ||\r\n  //                     (this.state.fieldValue[\"goal4\"] !== null && this.state.fieldValue[\"goal4\"] !== undefined && this.state.fieldValue[\"goal4\"] !== \"False\") ||\r\n  //                     (this.state.fieldValue[\"goal5\"] !== false && this.state.fieldValue[\"goal5\"] !== undefined && this.state.fieldValue[\"goal5\"] !== \"False\") ||\r\n  //                     (this.state.fieldValue[\"goal6\"] !== false && this.state.fieldValue[\"goal6\"] !== undefined && this.state.fieldValue[\"goal6\"] !== \"False\") ||\r\n  //                     (this.state.fieldValue[\"goalAnother\"] !== \"\" && this.state.fieldValue[\"goalAnother\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"PlaceOfWork\"] !== \"\" && this.state.fieldValue[\"PlaceOfWork\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"Wage\"] !== \"\" && this.state.fieldValue[\"Wage\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"PensionAmount\"] !== \"\" && this.state.fieldValue[\"PensionAmount\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"Profession\"] !== \"\" && this.state.fieldValue[\"Profession\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\r\n  //                     (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined)\r\n  //                   ) {\r\n  //                     if (\r\n  //                       (this.state.fieldValue[\"Good\"] !== false && this.state.fieldValue[\"Good\"] !== undefined && this.state.fieldValue[\"Good\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"Satisfactory\"] !== false && this.state.fieldValue[\"Satisfactory\"] !== undefined && this.state.fieldValue[\"Satisfactory\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"goUnsatisfactoryal1\"] !== false && this.state.fieldValue[\"Unsatisfactory\"] !== undefined && this.state.fieldValue[\"Unsatisfactory\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"SeparateApartment\"] !== false && this.state.fieldValue[\"SeparateApartment\"] !== undefined && this.state.fieldValue[\"SeparateApartment\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"OwnHouse\"] !== false && this.state.fieldValue[\"OwnHouse\"] !== undefined && this.state.fieldValue[\"OwnHouse\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"Dormitory\"] !== false && this.state.fieldValue[\"Dormitory\"] !== undefined && this.state.fieldValue[\"Dormitory\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"LivingAreaRemovable\"] !== false && this.state.fieldValue[\"LivingAreaRemovable\"] !== undefined && this.state.fieldValue[\"LivingAreaRemovable\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"NoOwnAccommodation\"] !== false && this.state.fieldValue[\"NoOwnAccommodation\"] !== undefined && this.state.fieldValue[\"NoOwnAccommodation\"] !== \"False\") ||\r\n  //                       (this.state.fieldValue[\"Additionally\"] !== false && this.state.fieldValue[\"Additionally\"] !== undefined && this.state.fieldValue[\"Additionally\"] !== \"False\")\r\n  //                     ) {\r\n  //                       // if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\r\n  //                       if (this.state.taskType === \"showDetailedForm\" || this.state.taskType === \"showChildDetailedForm\") {\r\n  //                         if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\r\n  //                           if (this.state.fieldValue[\"ExamOfDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamOfDate\"] !== undefined) {\r\n  //                             this.checkForRegNoAct(commandJson, length)\r\n  //                             // this.sendFieldValues(commandJson)\r\n  //                           } else this.props.callErrorToast(\"Заполните поле \\\"Дата проведения экспертизы\\\"\")\r\n  //                         } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\r\n  //                       } else this.checkForRegNoAct(commandJson, length)\r\n  //                       // } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\r\n  //                     } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Жилищно-бытовые условия\\\"\")\r\n  //                   } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Цель освидетельствования\\\"\")\r\n  //                 } else this.props.callErrorToast(\"Заполните поле \\\"Получает пенсию\\\"\")\r\n  //               } else this.props.callErrorToast(\"Заполните поле \\\"Место освидетельствования\\\"\")\r\n  //             } else this.props.callErrorToast(\"Заполните поле \\\"Освидетельствование\\\"\")\r\n  //           } else this.props.callErrorToast(\"Заполните поле \\\"Род деятельности\\\"\")\r\n  //         } else this.props.callErrorToast(\"Заполните поле \\\"Образование\\\"\")\r\n  //       } else this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\")\r\n  //     } else this.props.callErrorToast(\"Заполните поле \\\"Страна\\\"\")\r\n  //     // } else this.props.callErrorToast(\"Заполните поле \\\"№ акта по МСЭ\\\"\")\r\n  //   }\r\n  //   // Child Medakt || Reg Form\r\n  //   else if (this.state.taskType === \"showChildRegForm\" || this.state.taskType === \"showChildDetailedForm\") {\r\n  //     // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\r\n  //     if (this.state.fieldValue[\"Country\"] !== null && this.state.fieldValue[\"Country\"] !== undefined) {\r\n  //       if (this.state.fieldValue[\"Region\"] !== null && this.state.fieldValue[\"Region\"] !== undefined) {\r\n  //         if (this.state.fieldValue[\"EducationAct\"] !== null && this.state.fieldValue[\"EducationAct\"] !== undefined) {\r\n  //           if (this.state.fieldValue[\"ExaminationPrRe\"] !== null && this.state.fieldValue[\"ExaminationPrRe\"] !== undefined) {\r\n  //             if (this.state.fieldValue[\"Examination4\"] !== null && this.state.fieldValue[\"Examination4\"] !== undefined) {\r\n  //               if (this.state.fieldValue[\"PensionStatus\"] !== null && this.state.fieldValue[\"PensionStatus\"] !== undefined) {\r\n  //                 if (\r\n  //                   (this.state.fieldValue[\"goal1\"] !== false && this.state.fieldValue[\"goal1\"] !== undefined && this.state.fieldValue[\"goal1\"] !== \"False\") ||\r\n  //                   (this.state.fieldValue[\"goal2\"] !== false && this.state.fieldValue[\"goal2\"] !== undefined && this.state.fieldValue[\"goal2\"] !== \"False\") ||\r\n  //                   (this.state.fieldValue[\"goal3\"] !== false && this.state.fieldValue[\"goal3\"] !== undefined && this.state.fieldValue[\"goal3\"] !== \"False\") ||\r\n  //                   (this.state.fieldValue[\"goal4\"] !== null && this.state.fieldValue[\"goal4\"] !== undefined && this.state.fieldValue[\"goal4\"] !== \"False\") ||\r\n  //                   (this.state.fieldValue[\"goal5\"] !== false && this.state.fieldValue[\"goal5\"] !== undefined && this.state.fieldValue[\"goal5\"] !== \"False\") ||\r\n  //                   (this.state.fieldValue[\"goal6\"] !== false && this.state.fieldValue[\"goal6\"] !== undefined && this.state.fieldValue[\"goal6\"] !== \"False\") ||\r\n  //                   (this.state.fieldValue[\"goalAnother\"] !== \"\" && this.state.fieldValue[\"goalAnother\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"PlaceOfWork\"] !== \"\" && this.state.fieldValue[\"PlaceOfWork\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"Wage\"] !== 0 && this.state.fieldValue[\"Wage\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"PensionAmount\"] !== 0 && this.state.fieldValue[\"PensionAmount\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"Profession\"] !== \"\" && this.state.fieldValue[\"Profession\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined) ||\r\n  //                   (this.state.fieldValue[\"TimeWork\"] !== \"\" && this.state.fieldValue[\"TimeWork\"] !== undefined)\r\n  //                 ) {\r\n  //                   if (this.state.taskType === \"showChildDetailedForm\") {\r\n  //                     if (this.state.fieldValue[\"ExamStartDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamStartDate\"] !== undefined) {\r\n  //                       if (this.state.fieldValue[\"ExamOfDate\"] !== \"01.01.1970\" && this.state.fieldValue[\"ExamOfDate\"] !== undefined) {\r\n  //                         this.checkForRegNoAct(commandJson, length)\r\n  //                         // this.sendFieldValues(commandJson)\r\n  //                       } else this.props.callErrorToast(\"Заполните поле \\\"Дата проведения экспертизы\\\"\")\r\n  //                     } else this.props.callErrorToast(\"Заполните поле \\\"Дата начала экспертизы\\\"\")\r\n  //                   } else this.checkForRegNoAct(commandJson, length) // this.sendFieldValues(commandJson)\r\n  //                 } else this.props.callErrorToast(\"Заполните одно из полей секции \\\"Цель освидетельствования\\\"\")\r\n  //               } else this.props.callErrorToast(\"Заполните поле \\\"Получает пенсию\\\"\")\r\n  //             } else this.props.callErrorToast(\"Заполните поле \\\"Место освидетельствования\\\"\")\r\n  //           } else this.props.callErrorToast(\"Заполните поле \\\"Освидетельствование\\\"\")\r\n  //         } else this.props.callErrorToast(\"Заполните поле \\\"Образование\\\"\")\r\n  //       } else this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\")\r\n  //     } else this.props.callErrorToast(\"Заполните поле \\\"Страна\\\"\")\r\n  //     // }else this.swAlert(\"Заполните поле \\\"№ акта по МСЭ\\\"\")\r\n  //   }\r\n  //   else {\r\n  //     this.sendFieldValues(commandJson)\r\n  //     this.clearTabData(this.state.process_id)\r\n  //   }\r\n  // }\r\n  checkForRequieredFields() {\r\n    let checkedSuccessfuly = null\r\n    let f = this.state.Form\r\n    let fv = this.state.fieldValue\r\n    let tt = this.state.taskType\r\n    if (tt === \"showRegForm\" || tt === \"showDetailedForm\" || tt === \"showChildRegForm\" || tt === \"showChildDetailedForm\") {\r\n      // if(this.state.fieldValue[\"RegNoAct\"] !== \"\" && this.state.fieldValue[\"RegNoAct\"] !== undefined){\r\n      if (fv[\"Region\"] !== null && fv[\"Region\"] !== undefined) {\r\n        checkedSuccessfuly = true\r\n      }\r\n      else {\r\n        this.props.callErrorToast(\"Заполните поле \\\"Область\\\"\")\r\n        return false\r\n      }\r\n    }\r\n    for (let s = 0; s < f.sections.length; s++) {\r\n      if (f.sections[s].required === true) {\r\n        for (let c = 0; c < f.sections[s].contents.length; c++) {\r\n          let fieldName = f.sections[s].contents[c].name\r\n          // console.log(\"CH1\", fieldName, f.sections[s].contents[c].required)\r\n          if (fv[fieldName] === undefined || fv[fieldName] === null || fv[fieldName] === \"NaN.NaN.NaN\" ||\r\n            fv[fieldName] === \"\" || fv[fieldName] === \"01.01.1970\") {\r\n            checkedSuccessfuly = false\r\n          }\r\n          else {\r\n            checkedSuccessfuly = true\r\n            break\r\n            // return checkedSuccessfuly\r\n          }\r\n        }\r\n        if (checkedSuccessfuly === false) {\r\n          this.props.callErrorToast(\"Заполните одно из полей секции \\\"\" + f.sections[s].label + \"\\\"\", \"warning\")\r\n        }\r\n      }\r\n      else {\r\n        for (let c = 0; c < f.sections[s].contents.length; c++) {\r\n          let fieldName = f.sections[s].contents[c].name\r\n          // console.log(\"CH2\", fieldName, f.sections[s].contents[c].name)\r\n          if (f.sections[s].contents[c].required === true) {\r\n            if (fv[fieldName] === undefined || fv[fieldName] === null || fv[fieldName] === \"NaN.NaN.NaN\" || fv[fieldName] === \"\" ||\r\n              fv[fieldName] === \"\" || fv[fieldName] === \"01.01.1970\") {\r\n              checkedSuccessfuly = false\r\n              this.props.callErrorToast(\"Внимание заполните поле \\\"\" + f.sections[s].contents[c].label + \"\\\"\", \"warning\")\r\n              // break\r\n              return false\r\n            }\r\n            else {\r\n              checkedSuccessfuly = true\r\n            }\r\n          }\r\n          else {\r\n            checkedSuccessfuly = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return checkedSuccessfuly\r\n  }\r\n  // Collect id of all documents that are in the local state\r\n  getDocsIdToSign() {\r\n    var docsId = []\r\n    docsId.push(this.state.selectedDoc.id)\r\n    if (this.state.docListIPR !== null) {\r\n      for (var i = 0; i < this.state.docListIPR.length; i++) {\r\n        docsId.push(this.state.docListIPR[i].id)\r\n      }\r\n    }\r\n    return docsId\r\n  }\r\n  // Return person full age\r\n  getPersonAge() {\r\n    for (let i = 0; i < this.state.person.attributes.length; i++) {\r\n      if (this.state.person.attributes[i].name === \"Date_of_Birth\") {\r\n        let birthday = new Date(this.parseDate(this.state.person.attributes[i].value))\r\n        let ageDifMs = Date.now() - birthday.getTime()\r\n        let ageDate = new Date(ageDifMs); // miliseconds from epoch\r\n        let fullAge = Math.abs(ageDate.getUTCFullYear() - 1970)\r\n        console.log(\"AGE\", fullAge)\r\n        return fullAge\r\n      }\r\n    }\r\n  }\r\n  // Return label of select by it's id from fieldValue\r\n  getEnumValueTextByValue(value) {\r\n    for (let i = 0; i < this.state.enumData.length; i++) {\r\n      for (let l = 0; l < this.state.enumData[i].data.length; l++) {\r\n        if (this.state.enumData[i].data[l].Id === value) {\r\n          return this.state.enumData[i].data[l].Text\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Set new organization ID to all document in local state, prepare them to transfer to another Mse\r\n  setOrgIdToMedakt() {\r\n    let fstate = this.state\r\n    var newDocList = []\r\n    // console.log(\"DOCLIST CUR\" , fstate.docList)\r\n    for (let i = 0; i < fstate.docList.length; i++) {\r\n      newDocList.push({ id: fstate.docList[i].id, attributes: [] })\r\n      for (let l = 0; l < fstate.docList[i].attributes.length; l++) {\r\n        if (fstate.docList[i].attributes[l].name === \"MseName\") {\r\n          let newItem = {\r\n            name: fstate.docList[i].attributes[l].name,\r\n            type: fstate.docList[i].attributes[l].type,\r\n            value: fstate.fieldValue[\"MseName\"],\r\n            enumValueText: this.getEnumValueTextByValue(this.state.fieldValue[\"MseName\"]),\r\n          }\r\n          newDocList[i].attributes.push(newItem)\r\n        }\r\n        else {\r\n          if (fstate.docList[i].attributes[l].name !== \"State\" && fstate.docList[i].attributes[l].value !== null) {\r\n            let newItem = {\r\n              name: fstate.docList[i].attributes[l].name,\r\n              type: fstate.docList[i].attributes[l].type,\r\n              value: fstate.docList[i].attributes[l].value\r\n            }\r\n            newDocList[i].attributes.push(newItem)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    fstate.docList = newDocList\r\n    var newDocListIPR = []\r\n    for (let i = 0; i < fstate.docListIPR.length; i++) {\r\n      newDocListIPR.push({ id: fstate.docListIPR[i].id, attributes: [] })\r\n      for (let l = 0; l < fstate.docListIPR[i].attributes.length; l++) {\r\n        if (fstate.docListIPR[i].attributes[l].name !== \"State\" && fstate.docListIPR[i].attributes[l].value !== null) {\r\n          var newItem = {\r\n            value: fstate.docListIPR[i].attributes[l].value,\r\n            name: fstate.docListIPR[i].attributes[l].name,\r\n            type: fstate.docListIPR[i].attributes[l].type,\r\n          }\r\n          newDocListIPR[i].attributes.push(newItem)\r\n        }\r\n      }\r\n    }\r\n    fstate.docListIPR = newDocListIPR\r\n    this.setState(fstate)\r\n    // console.log(\"DOCLIST\", JSON.stringify(this.state.docList))\r\n    // console.log(\"DOCLISTIPR\", JSON.stringify(this.state.docListIPR))\r\n  }\r\n  // Main button click handler\r\n  async buttonClick(name) {\r\n    console.log(\"Butt\", name)\r\n    if (name === \"createDocument\") {\r\n      let createDocument = { attributes: this.getFieldValues() }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"createDocument\" },\r\n          doc: { value: JSON.stringify(createDocument) },\r\n          docDefId: { value: this.state.Form.docDefId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole }\r\n        }\r\n      }\r\n      console.log(\"button createDocument: \", commandJson)\r\n      let checkResult = this.checkForRequieredFields()\r\n      if (checkResult === true) {\r\n        this.sendFieldValues(commandJson)\r\n        this.clearTabData(this.state.process_id)\r\n      }\r\n      // this.checkForEmptyFields(commandJson, 0)\r\n    }\r\n    else if (name === \"updateDocument\") {\r\n      let updateDocument = { attributes: this.getFieldValues() }\r\n      let filterIPR = {\r\n        attributes: [\r\n          {\r\n            name: \"AdultsMedicalCart\",\r\n            value: this.state.docId,\r\n            type: \"Doc\"\r\n          }\r\n        ]\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"updateDocument\" },\r\n          doc: { value: JSON.stringify(updateDocument) },\r\n          filterIPR: { value: JSON.stringify(filterIPR) },\r\n          docDefId: { value: this.state.Form.docDefId },\r\n          docId: { value: this.state.docId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole }\r\n        }\r\n      }\r\n      console.log(\"button updateDocument: \", commandJson)\r\n      let checkResult = this.checkForRequieredFields()\r\n      if (checkResult === true) {\r\n        console.log(\"FV\", this.state.fieldValue)\r\n        this.sendFieldValues(commandJson)\r\n        this.clearTabData(this.state.process_id)\r\n      }\r\n      // this.checkForEmptyFields(commandJson, 1)\r\n      // this.sendFieldValues(commandJson)\r\n    }\r\n    else if (name === \"findDocument\") {\r\n      let filterDocument = { attributes: this.getFieldValuesToSearch() }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        docDefId: this.state.Form.docDefId,\r\n        variables: {\r\n          userAction: { value: \"findDocument\" },\r\n          doc: { value: JSON.stringify(filterDocument) },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole },\r\n          size: { value: this.state.size },\r\n          page: { value: 1 }\r\n        }\r\n      }\r\n      console.log(\"button findDocument: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"findIPR\") {\r\n      let filterDocument = {\r\n        attributes: [\r\n          {\r\n            name: \"AdultsMedicalCart\",\r\n            type: \"Doc\",\r\n            docDef: this.state.Form.medicalCardDocDefId,\r\n            subDocument: { attributes: this.getFieldValuesToSearch() }\r\n          }\r\n        ]\r\n\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        docDefId: this.state.Form.docDefId,\r\n        variables: {\r\n          userAction: { value: \"findDocument\" },\r\n          doc: { value: JSON.stringify(filterDocument) },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole },\r\n          size: { value: this.state.size },\r\n          page: { value: this.state.page }\r\n        }\r\n      }\r\n      console.log(\"button findIPR: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"editDocument\") {\r\n      let editDocument = { attributes: this.getFieldValues() }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"editDocument\" },\r\n          doc: { value: JSON.stringify(editDocument) },\r\n          docId: { value: this.state.docId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole }\r\n        }\r\n      }\r\n      console.log(\"button editDocument: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"reexamination\") {\r\n      let updateDocument = { attributes: this.getFieldValues() }\r\n      let age = this.getPersonAge()\r\n      let Adult = (age >= 18) ? \"True\" : \"False\"\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"reexamination\" },\r\n          doc: { value: JSON.stringify(updateDocument) },\r\n          docId: { value: this.state.docId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole },\r\n          adult: { value: Adult }\r\n        }\r\n      }\r\n      console.log(\"button reexamination: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"medakt\") {\r\n      // let updateDocument = {attributes: this.getFieldValues()}\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"medakt\" },\r\n          docId: { value: this.state.docId },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole }\r\n        }\r\n      }\r\n      console.log(\"button Medakt: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"ipr\") {\r\n      // if (this.state.docListIPR !== null && this.state.docListIPR !== \"null\") {\r\n      //   if (this.state.docListIPR.length > 0) {\r\n      //     this.props.callErrorToast(\"Данный Медакт уже имеет ИПР\")\r\n      //   }\r\n      // }\r\n      if (this.state.docListIPR === null || this.state.docListIPR === \"null\" || this.state.docListIPR.length === 0) {\r\n        let commandJson =\r\n        {\r\n          commandType: \"completeTask\",\r\n          session_id: this.state.session_id,\r\n          process_id: this.state.process_id,\r\n          taskID: this.state.taskID,\r\n          variables: {\r\n            userAction: { value: \"ipr\" },\r\n            docId: { value: this.state.docId },\r\n            userId: { value: this.state.userId },\r\n            userRole: { value: this.state.userRole }\r\n          }\r\n        }\r\n        console.log(\"button IPR: \", commandJson)\r\n        this.sendFieldValues(commandJson)\r\n        this.clearTabData(this.state.process_id)\r\n      }\r\n      else {\r\n        this.props.callErrorToast(\"Данный Медакт уже имеет ИПР!\")\r\n      }\r\n\r\n    }\r\n    else if (name === \"deleteDocument\") {\r\n      swal({\r\n        text: \"Вы точно хотите удалить этот документ?\",\r\n        icon: \"warning\",\r\n        buttons: { yes: \"Да\", no: \"Нет\" },\r\n        dangerMode: true,\r\n      })\r\n        .then((click) => {\r\n          if (click === \"yes\") {\r\n            let commandJson =\r\n            {\r\n              commandType: \"completeTask\",\r\n              session_id: this.state.session_id,\r\n              process_id: this.state.process_id,\r\n              taskID: this.state.taskID,\r\n              variables: {\r\n                userAction: { value: \"deleteDocument\" },\r\n                docId: { value: this.state.docId },\r\n                userId: { value: this.state.userId },\r\n                userRole: { value: this.state.userRole }\r\n              }\r\n            }\r\n            console.log(\"button deleteDocument: \", commandJson)\r\n            this.sendFieldValues(commandJson)\r\n            this.clearTabData(this.state.process_id)\r\n          }\r\n        })\r\n    }\r\n    else if (name === \"signDocument\") {\r\n      let docsToSign = {\r\n        docIdList: this.getDocsIdToSign(),\r\n        stateTypeId: \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\"\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"signDocument\" },\r\n          doc: { value: JSON.stringify(docsToSign) }\r\n          // doc: {\r\n          //   value: {\r\n          //     docIdList: this.getDocsIdToSign(),\r\n          //     stateTypeId: \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\"\r\n          //   }\r\n          // }\r\n        }\r\n      }\r\n      console.log(\"button signDocument: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"registerDocument\") {\r\n      let docsToRegister = {\r\n        docIdList: this.getDocsIdToSign(),\r\n        stateTypeId: \"C1414D0C-417A-45AB-8B57-01D30A567F08\"\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"registerDocument\" },\r\n          doc: { value: JSON.stringify(docsToRegister) }\r\n        }\r\n      }\r\n      console.log(\"button registerDocument: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"showStatusSelectingForm\") {\r\n\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"showStatusSelectingForm\" },\r\n          doc: {\r\n            value: JSON.stringify({\r\n              docIdList: this.getDocsIdToSign(),\r\n              stateTypeId: \"\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n      console.log(\"button showStatusSelectingForm: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n\r\n    }\r\n    else if (name === \"setNewState\") {\r\n      let checkResult = this.checkForRequieredFields()\r\n      if (checkResult === true) {\r\n        let states = {\r\n          \"29a5cf05-30de-45b9-8526-69de5ea8ab12\": \"a9e360f0-eed1-4ff6-9ab8-e4255c62ce4a\", // умер\r\n          \"6a0f2699-eb53-4175-ac07-71deb84ae641\": \"10a96e4b-df5d-4f55-9d81-83f9e3e51de5\", // приостановлена инвалидность\r\n          \"3d2dd30f-3ab0-439f-a8dd-149431af67be\": \"d203372c-236b-4b3e-953a-11f09a4aca61\", // истекший срок инвалидности\r\n          \"b042e77b-9a12-47f1-a6d2-cc85e9029e61\": \"c9cfe461-e822-4f97-b34d-9312f8917fa9\", // переехал за переделами рт\r\n          \"c5f3563c-688f-44f1-9c01-70d190ae9edb\": \"1fa96e5b-908f-4c57-bc4a-b61423951081\", // перешел на возрастную пенсию\r\n          \"d5e1a3aa-dfb3-4c49-8360-c1278e70429f\": \"32062CB7-C31C-4AFB-ADF3-F9F9AEEFCE59\", // вернуть в подписанные\r\n          \"83ade8bc-a070-4974-bea0-fe30e50422af\": \"C1414D0C-417A-45AB-8B57-01D30A567F08\"  // зарегистрирован\r\n        }\r\n        // console.log(\"ST\", this.state.fieldValue[\"StatesName\"]);\r\n        if (this.state.Form.docDefId === \"5FDE415F-DB00-43B4-BA6E-FE439CFF6DA0\" && this.state.fieldValue[\"StatusName\"] === \"1fa96e5b-908f-4c57-bc4a-b61423951081\") {\r\n          this.props.callErrorToast(\"Не допустимое значение для детского документа\")\r\n        }\r\n        else {\r\n          let stateBody = {\r\n            \"statusDate\": this.parseDate(this.state.fieldValue.statusDate),//moment(new Date()).format(\"YYYY-MM-DD\"),\r\n            \"docId\": this.state.docId,\r\n            \"stateTypeId\": states[this.state.fieldValue[\"StatusName\"]]\r\n          }\r\n          let commandJson =\r\n          {\r\n            commandType: \"completeTask\",\r\n            process_id: this.state.process_id,\r\n            session_id: this.state.session_id,\r\n            taskID: this.state.taskID,\r\n            variables: {\r\n              userAction: { value: \"setNewState\" },\r\n              // newState: { value: states[this.state.fieldValue[\"StatusName\"]] }\r\n              stateBody: { value: JSON.stringify(stateBody) }\r\n            }\r\n          }\r\n          console.log(\"button setNewState: \", commandJson)\r\n          this.sendFieldValues(commandJson)\r\n          this.clearTabData(this.state.process_id)\r\n        }\r\n      }\r\n    }\r\n    // else if (name === \"setNewStateChild\") {\r\n    //   let states = {\r\n    //     \"adcb9640-51d0-4952-b196-27e87bb28d31\": \"10a96e4b-df5d-4f55-9d81-83f9e3e51de5\", // приостановлена инвалидность \r\n    //     \"a61fcb5d-e858-4183-b1cd-1fef00c6b4bc\": \"d203372c-236b-4b3e-953a-11f09a4aca61\", // истекший срок инвалидности\r\n    //     \"184e3fac-a6b6-4c60-89a8-517862ecd9c4\": \"c9cfe461-e822-4f97-b34d-9312f8917fa9\", // переехал за переделами рт          \r\n    //     \"05be1899-8d41-4dfd-ae72-41cba4aa9223\": \"a9e360f0-eed1-4ff6-9ab8-e4255c62ce4a\", // умер\r\n    //   }\r\n    //   // console.log(\"ST\", this.state.fieldValue[\"StatesName\"]);\r\n    //   let commandJson =\r\n    //   {\r\n    //     commandType: \"completeTask\",\r\n    //     process_id: this.state.process_id,\r\n    //     session_id: this.state.session_id,\r\n    //     taskID: this.state.taskID,\r\n    //     variables: {\r\n    //       userAction: { value: \"setNewStateChild\" },\r\n    //       newState: { value: states[this.state.fieldValue[\"StatesName\"]] }\r\n    //     }\r\n    //   }\r\n    //   console.log(\"button setNewStateChild: \", commandJson)\r\n    //   this.sendFieldValues(commandJson)\r\n    //   this.clearTabData(this.state.process_id)\r\n    // }\r\n    else if (name === \"setStateDied\") {\r\n      let docsToSetState = {\r\n        docIdList: this.getDocsIdToSign(),\r\n        stateTypeId: \"A9E360F0-EED1-4FF6-9AB8-E4255C62CE4A\"\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"setStateDied\" },\r\n          doc: { value: JSON.stringify(docsToSetState) }\r\n          // doc: {\r\n          //   value: {\r\n          //     docIdList: this.getDocsIdToSign(),\r\n          //     stateTypeId: \"A9E360F0-EED1-4FF6-9AB8-E4255C62CE4A\"\r\n          //   }\r\n          // }\r\n        }\r\n      }\r\n      console.log(\"button setStateDied: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"backToMedakt\") {\r\n      let Document = {\r\n        attributes: [\r\n          {\r\n            name: \"AdultsMedicalCart\",\r\n            value: this.state.fieldValue[\"AdultsMedicalCart\"],\r\n            type: \"Doc\"\r\n          }]\r\n      }\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"backToMedakt\" },\r\n          userId: { value: this.state.userId },\r\n          userRole: { value: this.state.userRole },\r\n          docDefId: { value: this.state.Form.docDefId },\r\n          doc: { value: JSON.stringify(Document) },\r\n          docId: { value: this.state.fieldValue[\"AdultsMedicalCart\"] },\r\n          size: { value: 10 },\r\n          page: { value: 1 }\r\n        }\r\n      }\r\n      console.log(\"button backToMedakt: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"transferDocuments\") {\r\n      if (Object.keys(this.state.docList).length !== 0) {\r\n        var age = this.getPersonAge()\r\n        console.log(\"AGE\", age)\r\n        if (age >= 18) {\r\n          var docDefId = this.state.Form.adultsMedaktDocDefId\r\n        }\r\n        else if (age < 18) {\r\n          var docDefId = this.state.Form.childMedaktDocDefId\r\n        }\r\n        this.setOrgIdToMedakt()\r\n\r\n        let commandJson =\r\n        {\r\n          commandType: \"transferDocuments\",\r\n          session_id: this.state.session_id,\r\n          process_id: this.state.process_id,\r\n          taskID: this.state.taskID,\r\n          medaktDocDefId: docDefId,\r\n          IPRDocDefId: this.state.IPRGridForm.docDefId,\r\n          medakts: JSON.stringify(this.state.docList),\r\n          IPR: JSON.stringify(this.state.docListIPR),\r\n          userId: this.state.userId,\r\n          userRole: this.state.userRole\r\n        }\r\n        if (this.state.fieldValue[\"MseName\"] !== null && this.state.fieldValue[\"MseName\"] !== undefined) {\r\n          console.log(\"button transfeDocuments: \", commandJson)\r\n          this.sendFieldValues(commandJson)\r\n          this.clearTabData(this.state.process_id)\r\n        }\r\n        else {\r\n          this.props.callErrorToast(\"Выберите МСЭК для передачи данных\")\r\n        }\r\n      }\r\n      else this.props.callErrorToast(\"Нет данных для передачи\")\r\n    }\r\n    else if (name === \"downloadMemo\") {\r\n      this.downloadDocument(\"downloadPDF\")\r\n    }\r\n    else if (name === \"viewRegForm\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        session_id: this.state.session_id,\r\n        process_id: this.state.process_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"viewRegForm\" },\r\n          userId: { value: this.state.userId },\r\n          size: { value: 10 },\r\n          page: { value: 1 }\r\n        }\r\n      }\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"acceptComplaint\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"acceptComplaint\" },\r\n        }\r\n      }\r\n      console.log(\"button acceptComplaint: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"rejectComplaint\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"rejectComplaint\" },\r\n        }\r\n      }\r\n      console.log(\"button rejectComplaint: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"downloadMedakt\") {\r\n      let checkResult = this.checkForRequieredFields()\r\n      if (checkResult === true) {\r\n        this.props.callSuccessToast(\"Выгрузка начата дождитесь окончания процедуры!\")\r\n        let url = this.props.ismseApi + \"/api/ExportDataToXlsx/ExportChildByStatus\"\r\n        let age = \"(Детский)\"\r\n        if (this.state.taskType === \"showDownloadAdultsMedaktForm\") {\r\n          url = this.props.ismseApi + \"/api/ExportDataToXlsx/ExportGrownByStatus\"\r\n          age = \"(Взрослый)\"\r\n        }\r\n        let fv = this.state.fieldValue\r\n        let body = {\r\n          \"state\": fv.state,\r\n          \"startDate\": this.parseDate(fv.startDate),\r\n          \"endDate\": this.parseDate(fv.endDate)\r\n        }\r\n        if (fv.msecId !== null && fv.msecId !== undefined) {\r\n          body.msecId = fv.msecId\r\n        }\r\n        if (fv.regionId !== null && fv.regionId !== undefined) {\r\n          body.regionId = parseInt(fv.regionId)\r\n        }\r\n        if (fv.districtId !== null && fv.districtId !== undefined) {\r\n          body.districtId = parseInt(fv.districtId)\r\n        }\r\n\r\n        // console.log(\"BBB\", body)\r\n        await fetch(url, {\r\n          headers: {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          method: \"POST\",\r\n          body: JSON.stringify(body),\r\n          // mode: 'no-cors'\r\n        })\r\n          .then(response => response.blob())\r\n          .then(bl => {\r\n            console.log(\"RES\", bl)\r\n\r\n            var docUrl = window.URL.createObjectURL(bl)\r\n            var a = document.createElement('a')\r\n            a.href = docUrl\r\n            a.download = `Выгрузка Медактов ${age}.xls`\r\n            document.body.appendChild(a)\r\n            a.click()\r\n            a.remove()\r\n          })\r\n          .catch(error => console.log('error', error))\r\n      }\r\n    }\r\n\r\n\r\n    else if (name === \"back\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"back\" },\r\n        }\r\n      }\r\n      console.log(\"button back: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"finish\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"finish\" },\r\n        }\r\n      }\r\n      console.log(\"button finish: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else if (name === \"cancel\") {\r\n      let commandJson =\r\n      {\r\n        commandType: \"completeTask\",\r\n        process_id: this.state.process_id,\r\n        session_id: this.state.session_id,\r\n        taskID: this.state.taskID,\r\n        variables: {\r\n          userAction: { value: \"cancel\" },\r\n        }\r\n      }\r\n      console.log(\"button cancel: \", commandJson)\r\n      this.sendFieldValues(commandJson)\r\n      this.clearTabData(this.state.process_id)\r\n    }\r\n    else {\r\n      console.log(\"Unknown button\", name)\r\n    }\r\n  }\r\n  // Handler of amount of rows per page of grid form\r\n  rowsPageChange(size, page) {\r\n    console.log(\"Rows changed: \", size)\r\n    let filterDocument = { attributes: this.getFieldValuesToSearch() }\r\n    let commandJson =\r\n    {\r\n      commandType: \"completeTask\",\r\n      session_id: this.state.session_id,\r\n      process_id: this.state.process_id,\r\n      taskID: this.state.taskID,\r\n      docDefId: this.state.Form.docDefId,\r\n      variables: {\r\n        userAction: { value: \"findDocument\" },\r\n        doc: { value: JSON.stringify(filterDocument) },\r\n        size: { value: size },\r\n        page: { value: page }\r\n      }\r\n    }\r\n    console.log(\"JSON Collected: \", commandJson)\r\n    this.sendFieldValues(commandJson)\r\n    this.clearTabData(this.state.process_id)\r\n  }\r\n  // Returns Button component\r\n  createButton(button, index) {\r\n    if (button.name === \"downloadExcel\" || button.name === \"downloadPDF\") {\r\n      return (\r\n        <Button variant=\"outlined\"\r\n          name={button.name}\r\n          onClick={() => this.downloadDocument(button.name)}\r\n          value={button.name}\r\n          style={{\r\n            margin: 3,\r\n            backgroundColor: button.backgroundColor,\r\n            height: 32,\r\n            fontSize: 12\r\n          }}\r\n        >\r\n          {button.label}\r\n        </Button>\r\n      )\r\n    }\r\n    else if (button.name === \"attachDocument\") {\r\n      return (\r\n        <Button variant=\"outlined\"\r\n          name={button.name}\r\n          onClick={() => this.showScanComponentClick()}\r\n          value={button.name}\r\n          style={{\r\n            margin: 3,\r\n            backgroundColor: button.backgroundColor,\r\n            height: 32,\r\n            fontSize: 12\r\n          }}\r\n        >\r\n          {button.label}\r\n        </Button>\r\n      )\r\n    }\r\n    else return (\r\n      <Button variant=\"outlined\"\r\n        name={button.name}\r\n        onClick={() => this.buttonClick(button.name)}\r\n        style={{\r\n          margin: 3,\r\n          backgroundColor: button.backgroundColor,\r\n          height: 32,\r\n          fontSize: 12\r\n        }}\r\n        value={button.name}\r\n      >\r\n        {button.label}\r\n      </Button>\r\n    )\r\n  }\r\n  getEnumValueText(enumName) {\r\n    for (let i = 0; i < this.state.selectedDoc.attributes.length; i++) {\r\n      if (this.state.selectedDoc.attributes[i].name === enumName) {\r\n        return this.state.selectedDoc.attributes[i].enumValueText\r\n      }\r\n    }\r\n  }\r\n  // Create sections with labels and call bodyBuilder function\r\n  sectionBuilder(section, index) {\r\n    return (\r\n      <Table size=\"small\" key={index + \"table\"}>\r\n        <TableHead>\r\n          <TableRow style={{ height: 30 }}>\r\n            <TableCell\r\n              key={index = \"head\"}\r\n              style={{\r\n                color: \"black\",\r\n                fontSize: 14,\r\n                backgroundColor: \"#D3D3FE\",\r\n                width: \"100%\"\r\n              }}>\r\n              {section.label}\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        {this.bodyBuilder(section)}\r\n      </Table>\r\n    )\r\n  }\r\n  // Create body of each section and call contentBuilder function\r\n  bodyBuilder(section) {\r\n    return (\r\n      <Table size=\"small\">\r\n        <TableBody>\r\n          {section.contents.map((contentItem, index) => (\r\n            <TableRow key={index} style={{ height: 30 }}>\r\n              {contentItem.name !== \"PersonDetailFormAddress\" && contentItem.name !== \"PersonData\" &&\r\n                contentItem.label !== \"\" &&\r\n                <TableCell\r\n                  key={index + \"cell1\"}\r\n                  align=\"left\"\r\n                  style={{ width: \"40%\" }}>\r\n                  {contentItem.label}\r\n                </TableCell>\r\n              }\r\n              <TableCell\r\n                key={index + \"cell2\"}\r\n                align=\"left\"\r\n                style={{ width: \"60%\", height: (this.state.Form.formName === \"TransferMedicalCertificateForm\") ? 100 : 30 }}\r\n              >{this.contentBuilder(contentItem)}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    )\r\n  }\r\n  // Create component by it's type\r\n  contentBuilder(contentItem) {\r\n    if (contentItem.type === \"Text\" || contentItem.type === \"BLOB\") {\r\n      return (\r\n        <TextField\r\n          multiline\r\n          // onChange={this.componentChange}\r\n          // onBlur={this.handleChange}\r\n          // defaultValue={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\r\n          onChange={this.handleChange}\r\n          value={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\r\n          name={contentItem.name}\r\n          style={{ width: \"100%\" }}\r\n          disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n        />\r\n      )\r\n      // }\r\n    }\r\n    else if (contentItem.type === \"Int\") {\r\n      return (\r\n        <TextField\r\n          disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n          style={{ width: \"100%\" }}\r\n          // defaultValue = {(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name]: \"\"}\r\n          value={(this.state.fieldValue[contentItem.name] !== undefined) ? this.state.fieldValue[contentItem.name] : \"\"}\r\n          onChange={this.componentIntChange}\r\n          // onBlur={this.handleChange}\r\n          name={contentItem.name}\r\n          InputProps={{ inputComponent: NumberFormatCustom }}\r\n        />\r\n      )\r\n    }\r\n    else if (contentItem.type === \"DateTime\") {\r\n      return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\r\n          <DatePicker\r\n            clearable\r\n            cancelLabel=\"Отмена\"\r\n            okLabel=\"Ок\"\r\n            clearLabel=\"Очистить\"\r\n            invalidDateMessage=\"неверный формат\"\r\n            name={contentItem.name}\r\n            margin=\"small\"\r\n            format=\"dd.MM.yyyy\"\r\n            disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n            value={(this.state.fieldValue[contentItem.name] !== undefined) ? this.parseDate(this.state.fieldValue[contentItem.name]) : null}\r\n            onChange={date => this.handleDateTimeChange(date, contentItem.name)}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      )\r\n    }\r\n    else if (contentItem.type === \"Enum\") {\r\n      // console.log(\"EN DATA\", this.state.enumData)\r\n      let options = []\r\n      options.push({\r\n        \"value\": null,\r\n        \"label\": null,\r\n        \"name\": contentItem.name\r\n      })\r\n      for (let i = 0; i < this.state.enumData.length; i++) {\r\n        if (contentItem.enumDef === this.state.enumData[i].enumDef) {\r\n          for (let l = 0; l < this.state.enumData[i].data.length; l++) {\r\n            options.push({\r\n              \"value\": this.state.enumData[i].data[l].Id,\r\n              \"label\": this.state.enumData[i].data[l].Text,\r\n              \"name\": contentItem.name\r\n            })\r\n          }\r\n          break\r\n        }\r\n      }\r\n      // console.log(\"OPTOPNS\", options)\r\n      // console.log(\"S OPTOPNS\", this.state.fieldValue[contentItem.name])\r\n      var selectedOption = {}\r\n      if (this.state.fieldValue[contentItem.name] !== undefined) {\r\n        for (let i = 0; i < options.length; i++) {\r\n          if (options[i].value === this.state.fieldValue[contentItem.name]) {\r\n            selectedOption = {\r\n              \"value\": options[i].value,\r\n              \"name\": options[i].name,\r\n              \"label\": options[i].label\r\n            }\r\n            break\r\n          }\r\n          else selectedOption = {\r\n            \"value\": null,\r\n            \"label\": null,\r\n            \"name\": contentItem.name\r\n          }\r\n        }\r\n      }\r\n      return (\r\n        <Select\r\n          name={contentItem.name}\r\n          value={selectedOption}\r\n          onChange={this.handleSelectChange}\r\n          style={{ height: 30, width: \"100%\" }}\r\n          options={options}\r\n          isDisabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n        />\r\n      )\r\n    }\r\n    else if (contentItem.type === \"Currency\" || contentItem.type === \"Float\") {\r\n      return (\r\n        <TextField\r\n          value={this.state.fieldValue[contentItem.name] ? this.state.fieldValue[contentItem.name] : \"\"}\r\n          // onChange = {this.componentChange}\r\n          onBlur={this.handleChange}\r\n          name={contentItem.name}\r\n          style={{ width: \"100%\" }}\r\n          disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n          InputProps={{ inputComponent: NumberFormatCustom }}\r\n        />\r\n      )\r\n    }\r\n    else if (contentItem.type === \"Bool\") {\r\n      return (\r\n        <Checkbox\r\n          // key={this.getUUID()}\r\n          style={{ maxWidth: 20, height: 15, color: (this.state.formType === \"view\" || contentItem.edit === false) ? \"grey\" : \"green\" }}\r\n          name={contentItem.name}\r\n          onChange={this.handCheckboxChange}\r\n          disabled={(this.state.formType === \"view\" || contentItem.edit === false) ? true : false}\r\n          checked={(this.state.fieldValue[contentItem.name] === \"True\" || this.state.fieldValue[contentItem.name] === true) ? true : false}\r\n        />\r\n      )\r\n    }\r\n    else if (contentItem.type === \"PersonData\") {\r\n      return (\r\n        <Person\r\n          userId={this.state.userId}\r\n          userRole={this.state.userRole}\r\n          process_id={this.state.process_id}\r\n          session_id={this.state.session_id}\r\n          selectedDoc={this.state.person}\r\n          documentViewForm={this.state.documentViewForm}\r\n          taskID={this.state.taskID}\r\n          subDocument={true}\r\n          changeSubDocument={this.changeSubDocument}\r\n          formType={this.state.personFormType}\r\n          enumData={this.state.personEnumData}\r\n          // formType = {this.state.formName === \"AdultsIPRForm\" ? \"view\" : \"edit\"}\r\n          docList={null}\r\n        >\r\n        </Person>\r\n      )\r\n    }\r\n    else if (contentItem.type === \"Address\") {\r\n      return (\r\n        <Address\r\n          SOAT={this.state.SOAT}\r\n          // countryChange = {this.countryChange}\r\n          regionChange={this.regionChange}\r\n          districtChange={this.districtChange}\r\n          subDistrictChange={this.subDistrictChange}\r\n          villageChange={this.villageChange}\r\n          handleChange={this.handleChange}\r\n          Country={this.state.fieldValue.Country}\r\n          Region={this.state.fieldValue.Region}\r\n          District={this.state.fieldValue.District}\r\n          subDistrict={this.state.fieldValue.subDistrict}\r\n          Village={this.state.fieldValue.Village}\r\n          ResidentialAddress={this.state.fieldValue.ResidentialAddress}\r\n          Phone={this.state.fieldValue.Phone}\r\n          formType={this.state.formType}\r\n          edit={contentItem.edit}\r\n          formName={this.state.Form.formName}\r\n        />\r\n      )\r\n    }\r\n  }\r\n  // custom allerts\r\n  swAlert(text) {\r\n    return (\r\n      swal({\r\n        text: text,\r\n        icon: \"warning\",\r\n        buttons: { ok: \"Ок\" },\r\n        // dangerMode: true,\r\n      })\r\n        .then((click) => {\r\n          if (click === \"ok\") {\r\n            console.log(\"CLICK OK\", click)\r\n          }\r\n        })\r\n    )\r\n  }\r\n  render() {\r\n    try {\r\n      // if (!this.state.Form) return <div>No Form</div>\r\n      // if (this.state.buttons === undefined) return <div>No Buttons</div>\r\n      // console.log(\"ViewForm State\", this.state)\r\n      // console.log(\"ViewForm Props\", this.props)\r\n      return (\r\n        <Grid>\r\n          {this.state.Form !== null &&\r\n            <Grid container direction=\"row\" justify=\"flex-start\" spacing={1}>\r\n              <Grid item xs={10}>\r\n                <Paper>\r\n                  <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                    <TableHead>\r\n                      <TableRow style={{ maxHeight: 25 }}>\r\n                        <TableCell style={{ fontSize: 16, color: \"black\" }}>{this.state.Form.label}</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                  </Grid>\r\n                  <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                    {this.state.Form.sections.map((section, index) => {\r\n                      return this.sectionBuilder(section, index)\r\n                    })}\r\n                  </Grid>\r\n                  <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n                    {this.state.buttons.map((button, index) => {\r\n                      return this.createButton(button, index)\r\n                    })}\r\n                  </Grid>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          }\r\n          <br></br>\r\n\r\n          {this.state.docList !== null && this.state.docList !== \"null\" &&\r\n            this.state.docList !== undefined ?\r\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n              <GridForm key=\"grid form\"\r\n                process_id={this.state.process_id}\r\n                session_id={this.state.session_id}\r\n                taskID={this.state.taskID}\r\n                userId={this.state.userId}\r\n                organizationId={this.state.organizationId}\r\n                userRole={this.state.userRole}\r\n                docList={this.state.docList}\r\n                size={this.state.size}\r\n                page={this.state.page}\r\n                Form={this.state.gridForm}\r\n                gridFormButtons={this.state.gridFormButtons}\r\n                rowsPageChange={this.rowsPageChange}\r\n                sendFieldValues={this.sendFieldValues}\r\n                SOAT={this.state.SOAT}\r\n                handleCloseCurrentTab={this.handleCloseCurrentTab}\r\n                clearTabData={this.clearTabData}\r\n                callSuccessToast={this.props.callSuccessToast}\r\n                callErrorToast={this.props.callErrorToast}\r\n              >\r\n              </GridForm>\r\n            </Grid>\r\n            :\r\n            <br></br>\r\n          }\r\n          {this.state.docListIPR !== null && this.state.docListIPR !== \"null\" &&\r\n            this.state.docListIPR !== undefined ?\r\n            <GridForm\r\n              key=\"grid form\"\r\n              process_id={this.state.process_id}\r\n              session_id={this.state.session_id}\r\n              taskID={this.state.taskID}\r\n              userId={this.state.userId}\r\n              organizationId={this.state.organizationId}\r\n              userRole={this.state.userRole}\r\n              docListIPR={this.state.docListIPR}\r\n              size={this.state.size}\r\n              page={this.state.page}\r\n              Form={this.state.IPRGridForm} // {this.state.gridForm.Form}\r\n              medicalCardId={this.state.docId}\r\n              gridFormButtons={this.state.gridFormButtons}\r\n              rowsPageChange={this.rowsPageChange}\r\n              sendFieldValues={this.sendFieldValues}\r\n              SOAT={this.state.SOAT}\r\n              handleCloseCurrentTab={this.handleCloseCurrentTab}\r\n              clearTabData={this.clearTabData}\r\n              callSuccessToast={this.props.callSuccessToast}\r\n              callErrorToast={this.props.callErrorToast}\r\n            >\r\n            </GridForm>\r\n            :\r\n            <br></br>\r\n          }\r\n          <br></br>\r\n          {this.state.download === \"downloadExcel\" &&\r\n            <Download\r\n              downloadType={this.state.download}\r\n              Form={this.state.Form}\r\n              fieldValue={this.state.fieldValue}\r\n              person={this.state.person}\r\n              SOAT={this.state.SOAT}\r\n              selectedDoc={this.state.selectedDoc}\r\n\r\n            />\r\n          }\r\n          {this.state.download === \"downloadPDF\" &&\r\n            <Grid container direction=\"row\" justify=\"flex-start\" spacing={1} id=\"TableToDownload\">\r\n              <Grid item xs={12}>\r\n                <Card>\r\n                  <Download\r\n                    downloadType={this.state.download}\r\n                    Form={this.state.Form}\r\n                    fieldValue={this.state.fieldValue}\r\n                    person={this.state.person}\r\n                    SOAT={this.state.SOAT}\r\n                    selectedDoc={this.state.selectedDoc}\r\n                    enumData={this.state.enumData}\r\n                  />\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          }\r\n        </Grid>\r\n      )\r\n    }\r\n    catch (error) {\r\n      console.log(\"ERROR\", error)\r\n      return <div>error</div>\r\n    }\r\n  }\r\n}\r\nexport default ViewForm"]},"metadata":{},"sourceType":"module"}